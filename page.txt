package pages;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Assert;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import supportlibraries.DriverScript;

import supportlibraries.ReusableLibrary_MC;
import supportlibraries.ScriptHelper;

import com.cognizant.framework.Report;
import com.cognizant.framework.Status;
import functionallibraries.FunctionalLibrary_MC;


/**
 * Functional Library class
 * @author Cognizant
 */
public class ApacEpay_Superannuation extends ReusableLibrary_MC {
	List<String> uiplanned = new ArrayList<String>();
	List<String> xlplanned = new ArrayList<String>();
	List<String> uiinprogress = new ArrayList<String>();
	List<String> xlinprogress = new ArrayList<String>();

	/**
	 * Constructor to initialize the functional library
	 * @param scriptHelper The {@link ScriptHelper} object passed from the {@link DriverScript}
	 */
	public ApacEpay_Superannuation(ScriptHelper scriptHelper) {
		super(scriptHelper);
	}

	//User ID and Role
	String Filepath = dataTable.getData("General_Data", "Filepath");
	String Filepath2 = dataTable.getData("General_Data", "Filepath2");

	String Filename = dataTable.getData("General_Data", "Filename");
	String Extension = dataTable.getData("General_Data", "Extension");
	String TestdatafilePath = dataTable.getData("General_Data", "TestdatafilePath");
	String ExpectedMessage = dataTable.getData("General_Data", "ExpectedMessage");
	String Report_Year = dataTable.getData("General_Data", "Report_Year");

	FunctionalLibrary_MC f1 = new FunctionalLibrary_MC(scriptHelper);



	//Seat deatils table without data
	By Seattable_nodatatext = By.xpath("//table[contains(@id,'LocationList')]");
	//Add Location List
	By AddToLocationListbtn = By.xpath("//*[@id='addLocBtn']");
	By AddToLocationList_tableheader = By.xpath("//*[@id='LocationList']/thead/tr/th");
	By AddToLocationList_tablerowdetails = By.xpath("//*[@id='LocationList']/tbody/tr[1]/td");

	WebDriverWait wait = new WebDriverWait(driver,100);



	/*  Identifiers starts */
	By countryselecticon_arrow = By.xpath("//*[@id='countrySelect']");
	By Australia_selection = By.xpath("//*[@id='countryselecticon']/../ul/li/a[contains(text(),'Australia')]");
	By Superannuation = By.xpath("//*[@id='tileContainer']/div[1]/label[contains(text(),'Superannuation Details')]");
	By ManageContribution = By.xpath("//*[@id='tileContainer']/div/label[contains(text(),'Manage Contribution')]");
	By ManagePayslip = By.xpath("//*[@id='tileContainer']/div/label[contains(text(),'Manage Payslip')]");
	By Viewpayslip = By.xpath("//*[@id='tileContainer']/div/label[contains(text(),'View payslip')]");
	By Manageusers = By.xpath("//*[@id='tileContainer']/div/label[contains(text(),'Manage Users')]");
	/* Identifiers Ends */
	/*
	 * Adminlogin: To verify the Admin is login
	 */
	public void TC01_Adminlogin()
	{
		
		report.addTestLogSubSection("Australia Home Page Tile Validation");
		/*  Identifiers starts */
		By AustraliaSuperannuation = By.xpath("//*[@id='HomeContainer']//div[contains(text(),'Australia Superannuation')]");
		By ViewContributions = By.xpath("//a[contains(text(),'View Contributions')]");
		By UpdateDetails = By.xpath("//a[contains(text(),'Update Details')]");
		/* Identifiers Ends */
		
		try{

			wait.until(ExpectedConditions.visibilityOfElementLocated(countryselecticon_arrow));
			driver.findElement(countryselecticon_arrow).click();
			report.updateTestLog("Country selection", "Country selected as: Australia", Status.DONE);
			driver.findElement(Australia_selection).click();
			report.updateTestLog("Country selection dropdown for admin", "Australia is available for Admin in country selection dropdown", Status.PASS);
			wait.until(ExpectedConditions.visibilityOfElementLocated(Superannuation));
			//to verify the Superannuation tile display 
			if(driver.findElement(Superannuation).isDisplayed())
			{
				System.out.println("The 'Superannuation' tile is available for Admin");
				report.updateTestLog("Superannuation tile", "'Superannuation' tile is displayed in homepage", Status.PASS);
			}
			else
			{
				System.out.println("The 'Superannuation' tile is not available for Admin");
				report.updateTestLog("Superannuation tile", "'Superannuation' tile is not displayed in homepage", Status.FAIL);
			}

			//to verify the ManageContribution tile display
			if(driver.findElement(ManageContribution).isDisplayed())
			{
				System.out.println("The 'ManageContribution' tile is available for Admin");
				report.updateTestLog("ManageContribution tile", "'ManageContribution' tile is displayed in homepage", Status.PASS);
			}
			else
			{
				System.out.println("The 'ManageContribution' tile is not available for Admin");
				report.updateTestLog("ManageContribution tile", "'ManageContribution' tile is not displayed in homepage", Status.FAIL);
			}
			//to verify the Viewpayslip tile display


				if(driver.findElement(Viewpayslip).isDisplayed())
			{
				System.out.println("The 'Viewpayslip' tile is available for Admin");
				report.updateTestLog("Viewpayslip tile ", "'Viewpayslip ' tile is displayed in homepage", Status.PASS);
			}
			else
			{
				System.out.println("The 'Viewpayslip' tile is not available for Admin");
				report.updateTestLog("Viewpayslip tile ", "'Viewpayslip ' tile is not displayed in homepage", Status.FAIL);
			}

			//to verify the ManagePayslip tile display

			if(driver.findElement(ManagePayslip).isDisplayed())
			{
				System.out.println("The 'ManagePayslip' tile is available for Admin");
				report.updateTestLog("ManagePayslip tile ", "'ManagePayslip ' tile is displayed in homepage", Status.PASS);
			}
			else
			{
				System.out.println("The 'ManagePayslip' tile is not available for Admin");
				report.updateTestLog("ManagePayslip tile ", "'ManagePayslip ' tile is not displayed in homepage", Status.FAIL);
			}
			//to verify the Manageusers tile display

			if(driver.findElement(Manageusers).isDisplayed())
			{
				System.out.println("The 'Manageusers' tile is available for Admin");
				report.updateTestLog("Manageusers tile ", "'Manageusers ' tile is displayed in homepage", Status.PASS);
			}
			else
			{
				System.out.println("The 'Manageusers' tile is not available for Admin");
				report.updateTestLog("Manageusers tile ", "'Manageusers ' tile is not displayed in homepage", Status.FAIL);
			}

		}catch(Exception e)
		{
			System.out.println("Error while validationg Home page "+e);
			report.updateTestLog("Error while validationg Home page", "", Status.FAIL);
		}
	}

	public void select_Manage_payslip() 
	{
		try 
		{
			wait.until(ExpectedConditions.visibilityOfElementLocated(ManagePayslip));
			driver.findElement(ManagePayslip).click();
			//Thread.sleep(5000);
			report.updateTestLog("Manage payslip", "Manage payslipe selected ", Status.DONE);

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Click on Managepayslip button", "Clicking manage payslip having probelm" +e.getMessage() , Status.FAIL);
		}


	}
	
	@FindBy(xpath = "//select[contains(@id,'year')]")
	public WebElement Financial_YR;
	
	public void TC02_6_AustraliaSuperannuation()

	{
		report.addTestLogSubSection("Austrlia superannuation view contribution tab validation");
		//Australia Superannuation page

		/*  Identifiers starts */
		By AustraliaSuperannuation = By.xpath("//*[@id='HomeContainer']//div[contains(text(),'Australia Superannuation')]");
		By ViewContributions = By.xpath("//a[contains(text(),'View Contributions')]");
		By UpdateDetails = By.xpath("//a[contains(text(),'Update Details')]");

		By IsLastContribution_Bluelogo = By.xpath("//div[@ng-if='IsLastContribution']");
		By IsLastContribution_monthyear = By.xpath("//div[@ng-if='IsLastContribution']/h7[1]");
		By IsLastContribution_fund = By.xpath("//div[@ng-if='IsLastContribution']/h7[2]");
		
		
		By Superannuation_Fund_Nametext = By.xpath("//div[text()='Superannuation Fund Name']");
		By Superannuation_Fund_Name = By.xpath("//div[text()='Superannuation Fund Name']/../div[2]/strong");
		By Membershipnumber_Name = By.xpath("//div[text()='Membership Number']");
		By Membershipnumber_Value = By.xpath("//div[text()='Membership Number']/../div[2]");
		
		
		By Usefulforms = By.xpath("(//div[contains(text(),'Useful forms')])[1]");
		By Superannuation_Declaration_Form = By.xpath("(//a[contains(text(),'Superannuation Declaration Form')])[1]");
		By ESS_Statement = By.xpath("(//a[contains(text(),'ESS Statement FY 19-20')])[1]");
		By Query = By.xpath("(//div[contains(text(),'Query')])[1]");
		By Raiseaquery = By.xpath("(//a[contains(text(),'Raise a query')])[1]");
		By g = By.xpath("(//div[contains(text(),'Query')])[1]");

		/* Identifiers Ends */
		try{

			driver.findElement(Superannuation).click();
			report.updateTestLog("Click Australia superannuation", "Australia superannuation tile is clicked", Status.DONE);

			wait.until(ExpectedConditions.visibilityOfElementLocated(Superannuation_Declaration_Form));
			f1.sleep(300);
			//to verify the Superannuation tile display 
			/*if(driver.findElement(AustraliaSuperannuation).isDisplayed())
			{
				System.out.println("The 'Australia Superannuation' page is displayed for Admin");
				report.updateTestLog("The 'Australia Superannuation' page is displayed for Admin", "", Status.PASS);
			}
			else
			{
				System.out.println("The 'Australia Superannuation' page is not displayed for Admin");
				report.updateTestLog("The 'Australia Superannuation' page is not displayed for Admin", "", Status.FAIL);
			}*/

			//to verify the ViewContributions tab display 
			if(driver.findElement(ViewContributions).isDisplayed())
			{
				System.out.println("The 'ViewContributions' tab is displayed in Superannuation page");
				report.updateTestLog("ViewContributions" , "'ViewContributions' tab is displayed in Superannuation page", Status.PASS);
			}
			else
			{
				System.out.println("The 'ViewContributions' tab is not displayed in Superannuation page");
				report.updateTestLog("View Contributions" , "'View Contributions' tab is not displayed in Superannuation page", Status.FAIL);
			}

			//to verify the UpdateDetails tab display 
			if(driver.findElement(UpdateDetails).isDisplayed())
			{
				System.out.println("The 'UpdateDetails' tab is displayed in Superannuation page");
				report.updateTestLog("Update Details", "'Update Details' tab is displayed in Superannuation page", Status.PASS);
			}
			else
			{
				System.out.println("The 'UpdateDetails' tab is not displayed in Superannuation page");
				report.updateTestLog("Update Details", "'Update Details' tab is not displayed in Superannuation page", Status.FAIL);
			}

			

		try{	
			if(driver.findElement(IsLastContribution_Bluelogo).isDisplayed())
			{
				
				String monthyear=driver.findElement(IsLastContribution_monthyear).getText();
				String fund=driver.findElement(IsLastContribution_fund).getText();
				String logotext=monthyear+' '+fund;
				
				System.out.println("The Last Contribution Blue logo is displayed in Superannuation page");
				report.updateTestLog("Last Contribution value display", "Last Contribution 'Blue logo' displayed in Superannuation page with the text as: " +logotext, Status.PASS);
			}
			else
			{
				System.out.println("The Last Contribution Blue logo is not displayed in Superannuation page");
				report.updateTestLog("Last Contribution value display", "Last Contribution Blue logo is not displayed in Superannuation page with any text", Status.FAIL);
			}
		
		}
		catch(Exception e)
		{
			System.out.println("The Last Contribution Blue logo is not displayed in Superannuation page");
			report.updateTestLog("The Last Contribution Blue logo is not displayed in Superannuation page with the text as: ", "", Status.FAIL);
		}
		
			
			if(driver.findElement(Superannuation_Fund_Nametext).isDisplayed())
			
			{
				System.out.println("The Superannuation fund name is displayed ");
				report.updateTestLog("Superannuation fund name display ", "Superannuation fund name is displayed", Status.PASS);
			}
			else
			{
				System.out.println("The 'Superannuation fund name' is not displayed ");
				report.updateTestLog("Superannuation fund name display ", "Superannuation fund name is not displayed", Status.FAIL);
			}
			
			if(driver.findElement(Superannuation_Fund_Name).isDisplayed())
				
			{
				String fundname=driver.findElement(Superannuation_Fund_Name).getText();
				System.out.println("The Superannuation fund name value is displayed "+fundname);
				report.updateTestLog("	Superannuation fund name is displayed as : ", fundname, Status.PASS);
			}
			else
			{
				System.out.println("The 'Superannuation fund name' value is not displayed ");
				report.updateTestLog("	Superannuation fund name is not displayed ", "", Status.FAIL);
			}
			if(driver.findElement(Membershipnumber_Name).isDisplayed())
				
			{
				String fundname=driver.findElement(Membershipnumber_Value).getText();
				System.out.println("The membership number value is displayed "+fundname);
				report.updateTestLog("Membership number field display", "Membership number field is displayed", Status.PASS);
			}
			else
			{
				System.out.println("The membership number value is not displayed ");
				report.updateTestLog("	Membership number ", "Membership number field is not displayed", Status.FAIL);
			}
			
			if(driver.findElement(Membershipnumber_Name).isDisplayed())
				
			{
				String fundname=driver.findElement(Membershipnumber_Value).getText();
				System.out.println("The membership number value is displayed "+fundname);
				report.updateTestLog("Membership number value display", "Membership number value is displayed as :"+fundname, Status.PASS);
			}
			else
			{
				System.out.println("The membership number value is not displayed ");
				report.updateTestLog("	Membership number ", "Membership number value is not displayed", Status.FAIL);
			}
			
			report.addTestLogSubSection("Useful forms tab fields verification");
			//Usefulforms
			if(driver.findElement(Usefulforms).isDisplayed())
			{
				System.out.println("The 'Useful forms' section is displayed ");
				report.updateTestLog("'Useful forms'", "'Useful forms' section is displayed", Status.PASS);
			}
			else
			{
				System.out.println("The 'Useful forms' section is not displayed ");
				report.updateTestLog("'Useful forms'", "'Useful forms' section is not displayed", Status.FAIL);
			}
			//Superannuation_Declaration_Form
			if(driver.findElement(Superannuation_Declaration_Form).isDisplayed())
			{
				System.out.println("The 'Superannuation_Declaration_Form' link is displayed ");
				report.updateTestLog("'Superannuation_Declaration_Form'", "'Superannuation_Declaration_Form' link is displayed", Status.PASS);
			}
			else
			{
				System.out.println("The 'Superannuation_Declaration_Form' link is not displayed ");
				report.updateTestLog("'Superannuation_Declaration_Form'", "'Superannuation_Declaration_Form' link is not displayed", Status.FAIL);
			}
			//ESS_Statement
			if(driver.findElement(ESS_Statement).isDisplayed())
			{
				System.out.println("The 'ESS_Statement' link is displayed ");
				report.updateTestLog("'ESS_Statement'","'ESS_Statement' link is displayed", Status.PASS);
			}
			else
			{
				System.out.println("The 'ESS_Statement' link is not displayed ");
				report.updateTestLog("'ESS_Statement'","'ESS_Statement' link is not displayed", Status.FAIL);
			}
			
			report.addTestLogSubSection("Query tab verification in view contributions");
			
			//Query
			if(driver.findElement(Query).isDisplayed())
			{
				System.out.println("The 'Query' section is displayed ");
				report.updateTestLog("'Query' section ", "'Query' section is displayed ", Status.PASS);
			}
			else
			{
				System.out.println("The 'Query' section is not displayed ");
				report.updateTestLog("'Query' section ", "'Query' section is not displayed ", Status.FAIL);
			}

			//Raise a query
			if(driver.findElement(Raiseaquery).isDisplayed())
			{
				System.out.println("The 'Raise a query' link is displayed ");
				report.updateTestLog("'Raise a query' ", "'Raise a query' link is displayed", Status.PASS);
			}
			else
			{
				System.out.println("The 'Raise a query' link is not displayed ");
				report.updateTestLog("'Raise a query' ", "'Raise a query' link is not displayed", Status.FAIL);
			}
			
			report.addTestLogSubSection("Contributions display using Financial year ");
			
			By FinancialYear = By.xpath("//div[contains(text(),'Financial Year')]");
			By year_dropdown = By.id("year");
			By Generate_btn = By.xpath("//button[contains(text(),'Generate')]");
			By ExporttoExcel = By.xpath("//div[contains(text(),'Export to Excel')]");	
			@SuppressWarnings("unused")
			By associateHistoty_tableheader = By.xpath("//table[@id='associateHistoty']/thead");	

			//FinancialYear
			isdisplayed_validation(FinancialYear,"FinancialYear");
			isdisplayed_validation(year_dropdown,"year_dropdown");
			driver.findElement(Generate_btn).click();
			isdisplayed_validation(Generate_btn,"Generate_btn");
			driver.findElement(ExporttoExcel).click();
			isdisplayed_validation(ExporttoExcel,"ExporttoExcel");
			view_contribution_header();
			
			driver.findElement(Raiseaquery).click();
			f1.sleep(1000);
			//getClipboard(); //Need to chk

		}catch(Exception e)
		{
			System.out.println("Error while validating Superannuation page "+e);
			report.updateTestLog("Error while validating Superannuation page", "", Status.FAIL);
		}

	}
	public void view_contribution_header()
	{

		By associateHistoty_tableheader = By.xpath("//table[@id='associateHistoty']/thead");
		//to click on the Admin icon in the left pane
		try{

			List<WebElement> elements1 = driver.findElements(associateHistoty_tableheader);
			//System.out.println("elements1"+elements1);
			headerValidation(TestdatafilePath,elements1, 0, "ViewContribution_Header", "Associate Histoty table header validation");

		}

		catch(Exception e)
		{
			System.out.println("Associate Histoty table header  are not displayed");
			report.updateTestLog("Associate Histoty table header  are not dispalyed in the table is: ","", Status.FAIL);
		}
	}


	public void TC07_Superannuation_UpdateDetails()

	{
		report.addTestLogSubSection("Australia Superannuation Update details validation");
		//Australia Superannuation page
		By AustraliaSuperannuation = By.xpath("//*[@id='HomeContainer']//div[contains(text(),'Australia Superannuation')]");
		report.updateTestLog("Verify superannuation", "Superannuation tile is clicked", Status.PASS);
		By ViewContributions = By.xpath("//a[contains(text(),'View Contributions')]");
		
		By UpdateDetails = By.xpath("//a[contains(text(),'Update Details')]");
		report.updateTestLog("Update details tab verification", "Update details tab is clicked", Status.PASS);
		By FundHouseName = By.xpath("//*[contains(@id,'idFundHouseName')and @disabled='disabled']");
		//report.updateTestLog("Fund house name display", "Fund house name displayed as :"+FundHouseName, Status.PASS);
		By membershipnumber = By.xpath("//*[contains(@name,'memnumber')and @disabled='disabled']");

		By SuperannuationProductIdentificationNumber = By.xpath("//*[contains(@name,'SPINNumber')and @disabled='disabled']");
		By FundContactNumber = By.xpath("//*[contains(@name,'fundcontact')and @disabled='disabled']");
		By MemberAccountName = By.xpath("//*[contains(@name,'memberaccountname')and @disabled='disabled']");



		/* Identifiers Ends */
		//try{

		driver.findElement(Superannuation).click();
		report.updateTestLog("verify Superannuation" , "Superannuation tile is clicked", Status.PASS);
		wait.until(ExpectedConditions.visibilityOfElementLocated(UpdateDetails));
		f1.sleep(3000);
		driver.findElement(UpdateDetails).click();

		//FundHouseName
        isdisplayed_disabled(FundHouseName,"FundHouseName");
        By FundHouseName_text = By.xpath("//*[contains(@id,'idFundHouseName')]/option[@selected='selected']");
        String FundHouseName_text1=driver.findElement(FundHouseName_text).getText();
        System.out.println("FundHouseName_text"+FundHouseName_text1);
        report.updateTestLog("Fund House Name is displayed as", FundHouseName_text1, Status.PASS);
        //membershipnumber
        isdisplayed_disabled(membershipnumber,"membershipnumber");
        String membershipnumber_text1=driver.findElement(membershipnumber).getAttribute("value");
        System.out.println("membershipnumber_text1"+membershipnumber_text1);
        report.updateTestLog("member ship number is displayed as", membershipnumber_text1, Status.PASS);
        //SuperannuationProductIdentificationNumber
        isdisplayed_disabled(SuperannuationProductIdentificationNumber,"SuperannuationProductIdentificationNumber");
        String SuperannuationProductIdentificationNumber_text1=driver.findElement(SuperannuationProductIdentificationNumber).getAttribute("value");
        System.out.println("SuperannuationProductIdentificationNumber_text1"+SuperannuationProductIdentificationNumber_text1);
        report.updateTestLog("Superannuation Product Identification Number is displayed as", SuperannuationProductIdentificationNumber_text1, Status.PASS);
        //FundContactNumber
        isdisplayed_disabled(FundContactNumber,"FundContactNumber");
        String FundContactNumber_text1=driver.findElement(FundContactNumber).getAttribute("value");
        System.out.println("FundContactNumber_text1"+FundContactNumber_text1);
        if(!FundContactNumber_text1.equals(""))
        {     
        report.updateTestLog("Fund Contact Number is displayed as", FundContactNumber_text1, Status.PASS);
        }
        //MemberAccountName
        isdisplayed_disabled(MemberAccountName,"MemberAccountName");
        String MemberAccountName_text1=driver.findElement(MemberAccountName).getAttribute("value");
        System.out.println("MemberAccountName_text1"+MemberAccountName_text1);
        if(!MemberAccountName_text1.equals(""))
        {
              report.updateTestLog("Member Account Name is displayed as", MemberAccountName_text1, Status.PASS);
        }
	}


	public void TC03_Superannuation_FORM() throws IOException

	{
		report.addTestLogSubSection("Superannuation declaration form");
		//Australia Superannuation page
		By AustraliaSuperannuation = By.xpath("//*[@id='HomeContainer']//div[contains(text(),'Australia Superannuation')]");
		By Superannuation_Declaration_Form = By.xpath("(//a[contains(text(),'Superannuation Declaration Form')])[1]");


		/* Identifiers Ends */


		driver.findElement(Superannuation).click();
		report.updateTestLog("Click on Superannuation Declaration Form", "Superannuation Declaration Form is clicked", Status.PASS);
		wait.until(ExpectedConditions.visibilityOfElementLocated(Superannuation_Declaration_Form));
		f1.sleep(3000);
		driver.findElement(Superannuation_Declaration_Form).click();
		{
			f1.sleep(5000);
			f1.sleep(5000);
			System.out.println("wait done");
			f1.switchToLastWindow();
			f1.sleep(5000);	
			//f1.switchToLastWindow();
			
			//f1.sleep(5000);
		}
		
		
		//try
		{


				wait.until(ExpectedConditions.alertIsPresent());
				f1.sleep(6000);

				Alert alert = driver.switchTo().alert();

				//String sucessmsg=alert.getText();
				// Click on OK button.
				alert.accept();
				System.out.println("Accept Alert");
				//if(sucessmsg.contains("Please save this document on your local desktop, to have it function properly"))
				{
				//System.out.println("sucessmsg"+sucessmsg);
				//report.updateTestLog("Expected sucess message is displayed in Ui", sucessmsg, Status.PASS);
				}
				//else
				{
					//System.out.println("sucessmsg"+sucessmsg);
					//report.updateTestLog("Expected sucess message is not displayed in Ui", sucessmsg, Status.FAIL);

				}

				report.updateTestLog("Ok button is selected in the success message", "", Status.PASS);

				f1.sleep(10000);


			String currenturl=driver.getCurrentUrl();
			String expectedurl="fileName=ctsecmin_72153430.pdf";
			if(currenturl.contains(expectedurl))
			{
				System.out.println("currenturl"+currenturl);
				report.updateTestLog("superannuation decalaration form is displayed in PDF format", expectedurl, Status.PASS);
			}
			else
			{
				System.out.println("currenturl"+currenturl);
				//	report.updateTestLog("superannuation declaration form is not displayed in PDF format", expectedurl, Status.FAIL);

			}



			// Thread.sleep(30000);

		} //catch (Exception e) {
		//}



	}


	public void getClipboard()
	{


		Robot robot;
		try {
			robot = new Robot();


			// Thread.sleep(30000);
			System.out.println("sleep done 1");
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_A);
			robot.keyRelease(KeyEvent.VK_A);
			robot.keyRelease(KeyEvent.VK_CONTROL);
			Thread.sleep(30000);
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_C);
			robot.keyRelease(KeyEvent.VK_C);
			robot.keyRelease(KeyEvent.VK_CONTROL);
			//  Thread.sleep(30000);
			System.out.println("sleep done 2");
			Transferable t = Toolkit.getDefaultToolkit().getSystemClipboard()
					.getContents(null);
			try {
				if (t != null && t.isDataFlavorSupported(DataFlavor.stringFlavor)) {
					String wintext = (String) t
							.getTransferData(DataFlavor.stringFlavor);

					System.out.println("wintext" + wintext);

					if ("".equalsIgnoreCase(wintext.trim())) {
						System.out.println("text is identical");

					} else {
						System.out.println("text is identical");
						System.out.println(wintext);
					}
					// return text.trim();
				}
			} catch (Exception e) {
			}


		} catch (AWTException | InterruptedException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}
	public void TC04_ESS_Statement() throws IOException

	{
		report.addTestLogSubSection("ESS statement verification");
		//Australia Superannuation page
		By AustraliaSuperannuation = By.xpath("//*[@id='HomeContainer']//div[contains(text(),'Australia Superannuation')]");
		By ESS_Statement = By.xpath("(//a[contains(text(),'ESS Statement FY 19-20')])[1]");
		report.updateTestLog("ESS statement click", "Admin can able to click on ESS statement", Status.PASS);
		By ESS_message = By.xpath("//*[@id='message']");
		By btnokay = By.xpath("//*[@id='btnokay']");

		//*[@id="btnokay"]

		/* Identifiers Ends */

		// downloading ESS statement
		driver.findElement(Superannuation).click();
		wait.until(ExpectedConditions.visibilityOfElementLocated(ESS_Statement));
		f1.sleep(3000);
		driver.findElement(ESS_Statement).click();
		report.updateTestLog("Click on ESS statement", "ESS statement link is clicked", Status.PASS);

		try
		{
			wait.until(ExpectedConditions.visibilityOfElementLocated(ESS_message));
			f1.sleep(6000);

			String pwdmsg=driver.findElement(ESS_message).getText();


			System.out.println("pwdmsg"+pwdmsg);
			if(pwdmsg.contains("This document is password protected. Your password is a combination of your ASSOCIATE ID followed by your month & date of birth in MMDD format."))
			{
				System.out.println("pwdmsg"+pwdmsg);
				report.updateTestLog("Expected message is displayed in Ui", pwdmsg, Status.PASS);
			}
			else
			{
				System.out.println("pwdmsg"+pwdmsg);
				report.updateTestLog("Expected message is not displayed in Ui", pwdmsg, Status.FAIL);

			}
			driver.findElement(btnokay).click();

			report.updateTestLog("Success message selection", "Ok button is selected in the success message", Status.PASS);

			f1.sleep(10000);
			// Thread.sleep(30000);

		} catch (Exception e) {
			report.updateTestLog("ESS statement click", "Error in clickin on ESS statement", Status.FAIL);

		}

	}

	public void TC04_passowordpdf()
    {
            try
            {
            //Open PDF in Chrome driver
 			  // driver.get("file:///D:\\1. MyPay\\1. November -2018\\Test Execution\\Payslip CR\\Payslip.pdf");
          	  Thread.sleep(5000);  
          	  String filepath = dataTable.getData("General_Data", "Filepath");
          	  //String country = dataTable.getData("General_Data", "Country");
 			   driver.get("file:///C:\\Users\\226346\\Downloads\\226346_ESS.pdf");
 			   Thread.sleep(5000);
 			
 			   System.out.println("PDF is opened in chrome browser");
 			   report.updateTestLog("Browser selection", "PDF opened in chrome browser", Status.PASS);
            
                    Thread.sleep(4000);
                    
                  /*  driver.findElement(By.xpath("//*[@id='input']")).sendKeys("2263460501");       
                    driver.findElement(By.xpath("//*[@id='submit']")).click();
                    System.out.println("Password entered and submitted");
                    report.updateTestLog("Keyboard Action", "Enter option is clicked", Status.DONE);*/
                  		  
                  		  Robot rb = new Robot();
                    
                    //Get password from datatable
                    //String pwd = dataTable.getData("General_Data", "Password");
                    String pwd = dataTable.getData("General_Data", "PWD");
                    System.out.println("Password is : " +pwd);
                    report.updateTestLog("Password selection", "Password entered in PDF", Status.PASS);
                    
                     // Enter Passoword
                    
                     StringSelection username = new StringSelection(pwd);
                     
                            Toolkit.getDefaultToolkit().getSystemClipboard().setContents(username, null);            
                            rb.keyPress(KeyEvent.VK_CONTROL);
                            rb.keyPress(KeyEvent.VK_V);
                            rb.keyRelease(KeyEvent.VK_V);
                            rb.keyRelease(KeyEvent.VK_CONTROL);
                            Thread.sleep(5000); 
                            
                    
                            //to submit - click enter
                    rb.keyPress(KeyEvent.VK_ENTER);
                    rb.keyRelease(KeyEvent.VK_ENTER);
                    System.out.println("Password is entered");
                    report.updateTestLog("Enter Password", "Password is entered", Status.PASS);
                    System.out.println("Keyboard Action - Enter Key Press");
                    report.updateTestLog("PDF verification", "ESS Statement PDF is opened successfully", Status.PASS);
                    Thread.sleep(5000);   
            }
            catch(Exception e)
            {
                    System.out.println("Password entry fails due to : " +e);
                    report.updateTestLog("Enter Password", "Password is not entered due to : " +e, Status.FAIL);
            }

    
    }

	public void TC09_Superannuation_reports()
	{
	report.addTestLogSubSection("Superannuation reports validation");
	
		//Australia Superannuation page
		By AustraliaSuperannuation = By.xpath("//*[@id='HomeContainer']//div[contains(text(),'Australia Superannuation')]");
		By ViewContributions = By.xpath("//a[contains(text(),'View Contributions')]");
		By UpdateDetails = By.xpath("//a[contains(text(),'Update Details')]");

		By FundHouseName = By.xpath("//*[contains(@id,'idFundHouseName')and @disabled='disabled']");
		By membershipnumber = By.xpath("//*[contains(@name,'memnumber')and @disabled='disabled']");

		By SuperannuationProductIdentificationNumber = By.xpath("//*[contains(@name,'SPINNumber')and @disabled='disabled']");
		By FundContactNumber = By.xpath("//*[contains(@name,'fundcontact')and @disabled='disabled']");
		By MemberAccountName = By.xpath("//*[contains(@name,'memberaccountname')and @disabled='disabled']");
		By FinancialYear = By.xpath("//*[@id='year']");
		By Generatebtn = By.xpath("//button[text()='Generate']");
		By tablepresence=By.xpath("//*[@id='associateHistoty']/tbody/tr");

		driver.findElement(Superannuation).click();
		wait.until(ExpectedConditions.visibilityOfElementLocated(UpdateDetails));
		f1.sleep(3000);

		wait.until(ExpectedConditions.visibilityOfElementLocated(FinancialYear));
		//Select financial year
		Select drptxt2 = new Select(driver.findElement(FinancialYear));
		drptxt2.selectByVisibleText(Report_Year);
		//	drptxt2.selectByVisibleText(Report_Year);
		
		String Year=dataTable.getData("General_Data", "Report_Year");
		report.updateTestLog("Financial year selection", "Financial year selected as:"+Year, Status.PASS);
	     try {
			selectValueFromDropDown(Financial_YR,Year);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		/*System.out.println("Financial Year is selected");
		report.updateTestLog("Financial Year is selected","",Status.PASS);*/

		driver.findElement(Generatebtn).click();
		f1.sleep(2000);
		//wait.until(ExpectedConditions.visibilityOfElementLocated(tablepresence));
		if(driver.findElements(By.xpath("//*[@id='associateHistoty']/tbody/tr"))!= null)
		{
			List<WebElement> rows = driver.findElements(By.xpath("//*[@id='associateHistoty']/tbody/tr[1]/td"));
			int size=rows.size();
			System.out.println("size"+size);
			report.addTestLogSubSection("Financial Year Detailed report validation");
			for (int i=1;i<=size;i++)
			{
				String header=driver.findElement(By.xpath("//*[@id='associateHistoty']//th["+i+"]")).getText();
				String rowvalues=driver.findElement(By.xpath("//*[@id='associateHistoty']/tbody/tr/td["+i+"]")).getText();

				System.out.println("header name"+header);
				System.out.println("row values"+rowvalues);
				report.updateTestLog("Header value in UI is: "+header,rowvalues,Status.PASS);


			}
		}
		else
		{
			report.updateTestLog("Financial year reports is not displayed for the selected financial year","",Status.PASS);
		}

	}



	public void TC10_Superannuation_Exportexcel_reports()
	{
		report.addTestLogSubSection("Superannuation_Exportexcel_reports validation");
		//
		By ExporttoExcel = By.xpath("//div[contains(text(),'Export to Excel')]");
		try{
			wait.until(ExpectedConditions.visibilityOfElementLocated(ExporttoExcel));
			driver.findElement(ExporttoExcel).click();
			System.out.println("Export to Excel is displayed in the ui ");
			report.updateTestLog("Export to Excel click", "Admin can able to click on Export to Excel", Status.PASS);

			f1.sleep(35000);
			String filename=f1.Filedownload_1(Filepath, Filename, Extension);
			System.out.println("filename"+filename);
			String home = System.getProperty("user.home");
			File file = new File(home+"/Downloads/" + filename); 
			System.out.println("file"+file);
			String sheetname = filename.split("\\.")[0];
			System.out.println("sheetname"+sheetname);
			String a;
			//	a = excel_read_xls(file,sheetname);
			//System.out.println("test"+a[1]);
			//System.out.println("a"+a);

			//String a[]=getExcelData_read(file);
			//String a[]=readExcel(file,Extension);
			//	String d=excel_read(file)



			/*	int len=a.length;
	System.out.println("Value is displayed in the Export to Excel is "+a);
	for(int i=1;i<=len;i++)
	{
	report.updateTestLog("Value is displayed in the Export to Excel is: ", a[i], Status.PASS);

	}*/



		}catch(Exception e)
		{
			System.out.println("Error while downloading the Export to excel "+e);
			report.updateTestLog("Error while downloading the Export to  excel", "", Status.FAIL);
		}
	}

/*	public void readexcel123() throws IOException
	{

		String filename="Report (23).xls";
		String home = System.getProperty("user.home");
		File file = new File(home+"/Downloads/" + filename); 


		System.out.println("file"+file);	
		String fs=Filepath+"\\"+"\\"+filename;
		System.out.println("fs"+fs);	
		String sheetname = filename.split("\\.")[0];
		System.out.println("sheetname"+sheetname);
		String a;
		a = excel_read_xls_2(file,sheetname,1);





		//	a = excel_read_xls();
		//System.out.println("test"+a[1]);
		System.out.println("a"+a);

	}*/


public void SuperannuationDetails_Access()
    {
    	report.addTestLogSubSection("Superannuation Details tile access validation");
    	try
    	{
    		driver.findElement(By.xpath("//*[text()='Superannuation Details']")).click();
    		f1.sleep(2000);
    		System.out.println("Associate can able to view and  click on superannuation Tile successfully");
    		report.updateTestLog("Superannuation Tile validation", "Associate can able to view and  click on superannuation Tile successfully", Status.PASS);
    	}
    	catch(Exception e)
    	{
    		System.out.println("Associate not able to view superannuation details Tile");
    		report.updateTestLog("Superannuation Tile", "Associate not able to view superannuation Tile", Status.FAIL);
    	}
    }

public void ViewESS_statements_Tab()
    {
	report.addTestLogSubSection("ViewESS_statements_Tab validation");
    	try
    	{
    		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@NG-CLICK='ESSStatement()']")));
    		driver.findElement(By.xpath("//*[@ng-click='ESSStatement()']")).click();
    		f1.sleep(2000);
    		System.out.println("Clicked on View ESS statement tab");
    		report.updateTestLog("View ESS statement tab", "Clicked on View ESS statement tab", Status.PASS);
    	}
    	catch(Exception e)
    	{
    		System.out.println("Unable to click on View ESS statement tab");
    		report.updateTestLog("View ESS statement tab", "Unable to click on View ESS statement tab", Status.FAIL);
    	}
    }
    
public void DeleteFile(String Deletefilepath)
{   try {
	File file= new File(Deletefilepath);
    Thread.sleep(3000);
	for (int i = 0; i < 10; i++) {
		
    	if(file.exists())
    	{
    	file.delete();
    	}
	}
}
	catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
}
String year = dataTable.getData("General_Data", "Report_Year");

public void Select_FinancialYear()
    {
	report.addTestLogSubSection("FinancialYear validation");
	
    	try
    	{
    		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//body/div[@ng-app='apacApp']/section/div/section[@ng-controller='SuperannuationController']/div/div/div/div[1]/div[1]/select[1]")));
    		Select y=new Select(driver.findElement(By.xpath("//body/div[@ng-app='apacApp']/section/div/section[@ng-controller='SuperannuationController']/div/div/div/div[1]/div[1]/select[1]")));
    		y.selectByVisibleText(year);
    		f1.sleep(2000);
    		System.out.println("Selected the year as : "+year);
    		report.updateTestLog("Select year", "Selected the year as : "+year, Status.PASS);
    	}
    	catch(Exception e)
    	{
    		System.out.println("Unable to select year");
    		report.updateTestLog("Select year", "Unable to select year", Status.FAIL);
    	}
    }
String Deletefilepath = dataTable.getData("General_Data", "Deletefilepath");
public void View_Statement_download()
    {
	report.addTestLogSubSection("Statement_download validation");
    	try
    	{
    		DeleteFile(Deletefilepath);
    		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//button[normalize-space()='Download']")));
    		driver.findElement(By.xpath("//button[normalize-space()='Download']")).click();
    		f1.sleep(2000);
       		String x=driver.findElement(By.xpath("//*[@id='message']")).getText();
       		System.out.println(x);
       		report.updateTestLog("Password message validation", "Password message displayed as :"+x,Status.PASS);
       		driver.findElement(By.xpath("//*[@id='btnokay']")).click();
       		System.out.println("Clicked download button and validated the popup message");
    		report.updateTestLog("Click download", "Clicked download button", Status.PASS);
    			
    		alertmessage();
    		
    		/*Alert alert = driver.switchTo().alert();  
    		alert.accept();
    		*/
    		         	
    	}
    	catch(Exception e)
    	{
    		System.out.println("Unable to click download button"+e);
    		report.updateTestLog("Click download", "Unable to click download button"+e, Status.FAIL);
    	}
    }

public void checking_alert()
{
	try {
		//System.out.println("Check -1");
		Thread.sleep(8000);
		Alert alert =driver.switchTo().alert();
		//Thread.sleep(8000);
		//System.out.println("Check -2");
		//Thread.sleep(12000);
		//alert.getText();
		//System.out.println(alert.getText());
		Thread.sleep(5000);
		alert.accept();
		Thread.sleep(5000);
		//report.updateTestLog("Alert message verification", "Alert message displayed as :"+alert.getText(), Status.PASS);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		//e.printStackTrace();
	}
	
} 
String message;

public void alertmessage()
{
	try {
		//System.out.println("Check -1");
		Thread.sleep(8000);
		Alert alert =driver.switchTo().alert();
		//Thread.sleep(8000);
		//System.out.println("Check -2");
		//Thread.sleep(12000);
		message = alert.getText();
		System.out.println(alert.getText());
		if(alert.getText().equalsIgnoreCase("File Downloaded Successfully"))
		{
			System.out.println("File Downloaded Successfully");
			//report.updateTestLog("Download validation", "File Downloaded successfully", Status.PASS);
			alert.accept();
			Thread.sleep(5000);
			ESS_passowordpdf_Payslip();
		}
		else
		{
			alert.accept();
			Thread.sleep(5000);
			System.out.println("There is no File to Downloaded");
			download_validation();
		//report.updateTestLog("Download validation", "There is no File to Downloaded", Status.FAIL);	
		}
		Thread.sleep(5000);
		/*alert.accept();
		Thread.sleep(5000);*/
		//report.updateTestLog("Alert message verification", "Alert message displayed as :"+alert.getText(), Status.PASS);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
} 

public void download_validation()
{
	if (message.equalsIgnoreCase("No data available"))
			{
		report.updateTestLog("File download validation", "There is no File to Downloaded", Status.FAIL);
			}
		
}
public void ESS_passowordpdf_Payslip()
{
	  
	  report.addTestLogSubSection("ESS_Password validation");
        try
        {
        //Open PDF in Chrome driver
			  // driver.get("file:///D:\\1. MyPay\\1. November -2018\\Test Execution\\Payslip CR\\Payslip.pdf");
      	  Thread.sleep(5000);  
      	  //String filepath = dataTable.getData("General_Data", "file_path");
      	  
      	  
      	 /*String Deletefilepath= dataTable.getData("General_Data", "Deletefilepath");
      	  System.out.println("Download filepath given is: " +Deletefilepath);
            report.updateTestLog("Download filepath", "Download filepath is:"+Deletefilepath, Status.PASS);
		    File file= new File(Deletefilepath);
		  Thread.sleep(4000);
		boolean flag= false;
		if(file.exists())
		{
		flag= true;
		}
		for (int i = 0; i < 10; i++) {
			
	    	if(file.exists())
	    	{
	    	file.delete();
	    	}*/
		
      	  /*String country = dataTable.getData("General_Data", "Payslip_Country");
      	  String Month = dataTable.getData("General_Data", "Payslip_Month");
      	  String Year = dataTable.getData("General_Data", "Payslip_Year");*/
			   driver.get("file:///C:\\Users\\226346\\other\\Downloads\\226346_ESS.pdf");
			   Thread.sleep(5000);
			
			   System.out.println("PDF is opened in chrome browser");
			   report.updateTestLog("Browser selection", "PDF opened in chrome browser", Status.PASS);
        
                Thread.sleep(4000);
                
              /*  driver.findElement(By.xpath("//*[@id='input']")).sendKeys("2263460501");       
                driver.findElement(By.xpath("//*[@id='submit']")).click();
                System.out.println("Password entered and submitted");
                report.updateTestLog("Keyboard Action", "Enter option is clicked", Status.DONE);*/
              		  
              		  Robot rb = new Robot();
                
                //Get password from datatable
                //String pwd = dataTable.getData("General_Data", "Password");
                String pwd = dataTable.getData("General_Data", "PWD");
                System.out.println("Password is : " +pwd);
                report.updateTestLog("Password selection", "Password entered in PDF", Status.PASS);
                
                 // Enter Passoword
                
                 StringSelection username = new StringSelection(pwd);
                 
                        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(username, null);            
                        rb.keyPress(KeyEvent.VK_CONTROL);
                        rb.keyPress(KeyEvent.VK_V);
                        rb.keyRelease(KeyEvent.VK_V);
                        rb.keyRelease(KeyEvent.VK_CONTROL);
                        Thread.sleep(5000); 
                        System.out.println("Password is entered");
                        report.updateTestLog("Enter Password", "Password is entered", Status.PASS);
                
                        //to submit - click enter
                rb.keyPress(KeyEvent.VK_ENTER);
                rb.keyRelease(KeyEvent.VK_ENTER);
                System.out.println("Keyboard Action - Enter Key Press");
                report.updateTestLog("ESS_PDF verification", "ESS_PDF is opened successfully", Status.PASS);
                Thread.sleep(5000);   
        }
        catch(Exception e)
        {
                System.out.println("Password entry fails due to : " +e);
                report.updateTestLog("Enter Password", "Password is not entered due to : " +e, Status.FAIL);
        }}

public void selectValueFromDropDown(WebElement element, String dropDownvalue) throws Exception {

	//try {
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.textToBePresentInElement(element, dropDownvalue));
		if (element.isDisplayed() && element.isEnabled()) {
			JavascriptExecutor js = (JavascriptExecutor) driver;
			((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
			js.executeScript("arguments[0].style.border='2px groove red'", element);
			js.executeScript("arguments[0].style.border=''", element);
			Select dropDown = new Select(element);
			dropDown.selectByVisibleText(dropDownvalue);
			//System.out.println("Company ID is selected");
			//report.updateTestLog("Company ID verification", "CTS is selected", Status.PASS);
		} else {
			report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
			Assert.fail();
		}
		/*}	
	} catch (Exception exception) {
	
		Assert.fail(exception.getMessage());
		report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
	}*/
}}


/**
 * 
 */
package pages;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.UUID;
import java.util.Properties;
import java.util.TimeZone;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import com.cognizant.framework.CraftliteDataTable;
import com.cognizant.framework.Status;
import com.cognizant.framework.selenium.ResultSummaryManager;
import com.cognizant.framework.selenium.SeleniumReport;
import com.cognizant.framework.selenium.SeleniumTestParameters;
import functionallibraries.FunctionalLibrary;
import supportlibraries.DriverScript;
import supportlibraries.ReusableLibrary;
import supportlibraries.ScriptHelper;
import org.openqa.selenium.support.ui.*;
import org.testng.Assert;
/**
 * @author 569996
 *
 */

@SuppressWarnings("deprecation")
public class Common_page_Aus extends ReusableLibrary {

	public Common_page_Aus(ScriptHelper scriptHelper) {
		super(scriptHelper);

	}

	/**
	 * @param args
	 * @throws InterruptedException
	 *             Class to login in TEConcur
	 */
	public void Commonscripts() throws InterruptedException {
		
		FunctionalLibrary S = new FunctionalLibrary(scriptHelper);
		report.addTestLogSection("Setup");
		driver.get(properties.getProperty("ApplicationUrl"));
		report.updateTestLog("Invoke Application", "Invoke the application under test @ " +
								properties.getProperty("ApplicationUrl"), Status.DONE);
		S.sleep(5000);
		}

	/**
	 * Method to generate random email.
	 */
	private static String randomEmail() {
		return "random-" + UUID.randomUUID().toString() + "@example.com";

	}
	/**
	 * 
	 * @author 569996 Method to create a prospect
	 *
	 */
			 
	public  void excel_read_project(int RowNum1, int ColNum1,String sheetname) throws IOException
	{
		String filePath = dataTable.getData("General_Data", "filePath");
	       
        FileInputStream file = new FileInputStream(filePath);
        System.out.println(filePath);

   		XSSFWorkbook ExcelWBook = new XSSFWorkbook(file);
        System.out.println("workbook is opened");

        XSSFSheet ExcelWSheet = ExcelWBook.getSheet(sheetname);
        System.out.println("Sheet is opened");

        System.out.println(ExcelWSheet.getSheetName());
        
        //Find number of rows in excel file

        int rowCount = ExcelWSheet.getLastRowNum()-ExcelWSheet.getFirstRowNum();

        //Create a loop over all the rows of excel file to read it

        for (int i = 0; i < rowCount+1; i++) {

            Row row = ExcelWSheet.getRow(i);

            //Create a loop to print cell values in a row

            for (int j = 0; j < row.getLastCellNum(); j++) {
            	DataFormatter formatter = new DataFormatter();
                //Print Excel data in console
            	
            	XSSFCell cell=ExcelWSheet.getRow(i).getCell(j);
                cell.setCellType(cell.CELL_TYPE_STRING);
                String value=cell.getStringCellValue();
                System.out.println(value +" ");
             // System.out.print(row.getCell(j).getStringCellValue()+"  ");

            }

            System.out.println();
        }  
	}
}

	package pages;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.cognizant.framework.Status;

import supportlibraries.ScriptHelper;

public class Email_Page_Aus extends MasterPage_Aus
{
	
	@FindBy(xpath="//*[@id='searchBoxId']/div[1]/div/input")
	public WebElement search_field; 
	//*[@id="owaSearchBox"]/div/div/div[1]/button/span
	@FindBy(xpath="//*[@id='owaSearchBox']/div/div/div[1]/button")
	public WebElement search_button; 
	String Current_time="";

	public Email_Page_Aus(ScriptHelper scriptHelper) {
		super(scriptHelper);
		// TODO Auto-generated constructor stub
	}

	public  void publish_email_verification()
	{
		report.addTestLogSubSection("publish_email_validation");
		try
		{
		Thread.sleep(5000);
		System.setProperty("webdriver.chrome.driver", "chromedriver.exe");
		ChromeOptions options = new	ChromeOptions();	
		options.setExperimentalOption("debuggerAddress", "localhost:5656");
		
		WebDriver driver1 = new ChromeDriver(options);
		
		
	 
		 
		driver1.get("http://outlook.com/owa/cognizant.com");
		
		/*driver.get("https://mail.cognizant.com");
		Thread.sleep(6000);	
		
		WebElement userid = driver.findElement(By.id("username"));
		WebElement pwd = driver.findElement(By.id("password"));

		userid.click();
		
		userid.sendKeys("269081");
		System.out.println("Associate id is entered");
		//report.updateTestLog("Enter ID", "Associate id entered is : " +id, Status.DONE);
		
		//Enter password
	    pwd.sendKeys("");
		System.out.println("Password is entered");
		//report.updateTestLog("Enter Password", "Password is entered", Status.DONE);
		
				
		//Click Login
		try
		{
		WebElement login = driver.findElement(By.xpath("//*[@id='bglogodiv']/div[5]/div/span"));
		login.click();
		System.out.println("Login is clicked");
		}
		catch(Exception e)
		{
			driver.findElement(By.xpath("//*[@id='bglogodiv']/div[7]/div/span")).click();
			System.out.println("Login is clicked");
		}
		Thread.sleep(4000);	
		driver.findElement(By.xpath("//*[@id='mainDiv']/div[1]/div/div[4]/a")).click();
		System.out.println("Link is clicked");*/
		
		
		                                                 
	//	WebElement search = driver.findElement(By.className("_1Qs0_GHrFMawJzYAmLNL2x _1LtnCG5oLbhQOwtufJyBi8"));
		System.out.println("check 1");
		report.updateTestLog("Check1", "Check1", Status.PASS);
		String pagetitle=driver1.getCurrentUrl();
		System.out.println("Title is:"+pagetitle);
		report.updateTestLog("Title page verification", "Title page displayed as:"+pagetitle, Status.PASS);
		Thread.sleep(8000);	
		WebElement search =driver1.findElement(By.xpath("//*[@id='searchBoxId-Mail']//input"));
		Thread.sleep(5000);
		System.out.println("check 2");
		report.updateTestLog("Check2", "Check2", Status.PASS);
		if(search.isDisplayed())
		{
			search.click();
			System.out.println("Search box is clicked");
			report.updateTestLog("Search box", "Search box is clicked", Status.PASS);
			Thread.sleep(5000);
			
			//Send search text
			search.sendKeys("EMAIL UAT 1Comm");
			Thread.sleep(3000);
			System.out.println("Search text is entered");
			report.updateTestLog("search text", "search text is entered", Status.PASS);
			
			//Click Search
			search.sendKeys(Keys.RETURN);
			//search_button.click();
			System.out.println("Search icon is clicked");
			report.updateTestLog("search icon", "Search icon is clicked", Status.PASS);
			Thread.sleep(5000);
			
			for(int i=2; i<=100; i++)
			{	 
				driver1.findElement(By.xpath("//*[@id='app']/div/div[2]/div[1]/div/div[3]/div[2]/div/div[1]/div[2]/div/div/div/div/div/div/div["+i+"]")).click();
				Thread.sleep(2000);
				String email_time=driver1.findElement(By.xpath("//*[@id='app']/div//div[@aria-selected='true']")).getText();
				//System.out.println("email time :"+email_time);
				//report.updateTestLog("Email time", "Email time is :"+email_time, Status.PASS);
				//System.out.println("Current time :"+Current_time);
			//	report.updateTestLog("Current time", "Current time is:"+Current_time, Status.PASS);
				//SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a");
				/*Date Current_t = sdf.parse(Current_time);
				Date email_t = sdf.parse(email_time);
				if (Current_t.compareTo(email_t) < 0) 
				{
					//Selecting email
					driver1.findElement(By.xpath("//*[@id='app']/div/div[2]/div[1]/div/div[3]/div[2]/div/div[1]/div[2]/div/div/div/div/div/div[6]")).click();
					Thread.sleep(1000);
					System.out.println("email is selected");
					report.updateTestLog("email selection", "email is selected", Status.PASS);
					System.out.println("Total Approx Waiting time is "+i*15);
					report.updateTestLog("Waiting time", "Total Approx Waiting time is "+i*15, Status.PASS);
					break;
				}
				else
				{
					System.out.println("Approx Waiting time Completed "+i*15);
					report.updateTestLog("waiting time", "Approx Waiting time Completed "+i*15, Status.FAIL);
				}
				if (Current_t.compareTo(email_t) > 0 && i==10 ) 
				{
					System.out.println("New Email is not received yet");
					System.out.println("Approx Waiting time Completed "+i*15);
					
				} 
			*/	//Thread.sleep(30000);
				//click search bar
				//search.click();
						
				//Click Search button
				//search.sendKeys(Keys.RETURN);
				Thread.sleep(5000);
			//}
		        
//		    SimpleDateFormat TF = new SimpleDateFormat("hh:mm a");
//		    Date E_Time = TF.parse(email_time);
//		    Date C_Time = TF.parse(Current_time);
//		    long elapsed = C_Time.getTime() - E_Time.getTime(); 
//		    System.out.println(elapsed);
			
			
			
			
			/*//Get Email Subject
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='app']/div/div[2]/div[1]/div/div[3]/div[2]/div/div[3]/div/div/div/div/div[1]/div/div/div/div/span")));
			String email_sub = driver1.findElement(By.xpath("//*[@id='app']/div/div[2]/div[1]/div/div[3]/div[2]/div/div[3]/div/div/div/div/div[1]/div/div/div/div/span")).getText();
			if(email_sub.contains("Publish"))
			{
				System.out.println("Email Subject displayed is: " +email_sub);
			}
			try
			{
			//Get Time
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='app']/div/div[2]/div[1]/div/div[3]/div[2]/div/div[3]/div/div/div/div/div[2]/div/div[1]/div/div[1]/div/div[1]/div[1]/div[2]/div[2]/div")));
			String date = driver1.findElement(By.xpath("//*[@id='app']/div/div[2]/div[1]/div/div[3]/div[2]/div/div[3]/div/div/div/div/div[2]/div/div[1]/div/div[1]/div/div[1]/div[1]/div[2]/div[2]/div")).getText();
			System.out.println("Date and Time of the email is: " +date);
			
			
			}
			catch(Exception e)
			{
				System.out.println("Date of email is not printed");
			}*/
			
			//Get Content
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td")));
			String mailcontent_month = driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td")).getText();
			System.out.println(mailcontent_month);	
			//System.out.println("Content with month data is : " +mailcontent_month);
			String selected_Period= dataTable.getData("General_Data", "Email_Period");
			System.out.println(selected_Period);
			if(mailcontent_month.contains(selected_Period))
			{
				System.out.println("mailcontent_content_period is same as expected");
				System.out.println("mailcontent_content_period is: " +mailcontent_month);	
				report.updateTestLog("mailcontent_content_period", "mailcontent_content_period is displayed", Status.PASS);
						
			
			//Getting Country details
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[1]/td[2]")));
			String mailcontent_country_value = driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[1]/td[2]")).getText();
			String country_name= dataTable.getData("General_Data", "Country");
			if(mailcontent_country_value.contains(country_name))
			{
				System.out.println("mailcontent_country_value is same as expected");
				System.out.println("mailcontent_country_value is: " +mailcontent_country_value);
				report.updateTestLog("mailcontent_country_value", "mailcontent_country_value is displayed as Expected", Status.PASS);
			}
			else
			{
				System.out.println("mailcontent_country_value is NOT same as expected");
				System.out.println("mailcontent_country_value displayed is: " +mailcontent_country_value);
				report.updateTestLog("mailcontent_country_value", "mailcontent_country_value is Not displayed as Expected", Status.FAIL);
			}
			

			//Getting Upload Type
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[2]/td[2]")));
			String mailcontent_Upload_Type_value = driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[2]/td[2]")).getText();
			//String Upload_Type= dataTable.getData("General_Data", "Upload_type");
			if(mailcontent_Upload_Type_value.contains(selected_upload_type))
			{
				System.out.println("mailcontent_Upload_Type_value is same as expected");
				System.out.println("mailcontent_Upload_Type_value is: " +mailcontent_Upload_Type_value);
				report.updateTestLog("mailcontent_Upload_Type", "mailcontent_Upload_Type is displayed as Expected", Status.PASS);
			}
			else
			{
				System.out.println("mailcontent_Upload_Type_value is NOT same as expected");
				System.out.println("mailcontent_Upload_Type_value is: " +mailcontent_Upload_Type_value);
				report.updateTestLog("mailcontent_Upload_Type", "mailcontent_Upload_Type is NOT displayed as Expected", Status.FAIL);
			}
			
			//Getting Count_of_associates
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[3]/td[2]")));
			String mailcontent_Count_of_associates_value = driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[3]/td[2]")).getText();
			
			String Count_of_associates= dataTable.getData("General_Data", "Count_of_associates");
			if(mailcontent_Count_of_associates_value.contains(Count_of_associates))
			{
				System.out.println("mailcontent_Count_of_associates_value is same as expected");
				System.out.println("mailcontent_Count_of_associates_value is: " +mailcontent_Count_of_associates_value);
				report.updateTestLog("mailcontent_Count_of_associates_value", "mailcontent_Count_of_associates_value is displayed as Expected", Status.PASS);
			}
			else
			{
				System.out.println("mailcontent_Count_of_associates_value is NOT same as expected");
				System.out.println("mailcontent_Count_of_associates_value is: " +mailcontent_Count_of_associates_value);
				report.updateTestLog("mailcontent_Count_of_associates_value", "mailcontent_Count_of_associates_value is NOT displayed as Expected", Status.FAIL);
			}
			//Getting Sum of Net Pay
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[4]/td[2]")));
			String mailcontent_Sum_of_NetPay_value = driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[4]/td[2]")).getText();
			String Sum_of_NetPay_value= dataTable.getData("General_Data", "Sum_of_Net_Pay");
			if(mailcontent_Sum_of_NetPay_value.contains(Sum_of_NetPay_value))
			{
				System.out.println("mailcontent_Sum_of_NetPay_value is same as expected");
				System.out.println("mailcontent_Sum_of_NetPay_value is: " +mailcontent_Sum_of_NetPay_value);
				report.updateTestLog("mailcontent_Sum_of_NetPay_value", "mailcontent_Sum_of_NetPay_value is displayed as Expected", Status.PASS);
			}
			else
			{
				System.out.println("mailcontent_Sum_of_NetPay_value is NOT same as expected");
				System.out.println("mailcontent_Sum_of_NetPay_value is: " +mailcontent_Sum_of_NetPay_value);
				report.updateTestLog("mailcontent_Sum_of_NetPay_value", "mailcontent_Sum_of_NetPay_value is NOT displayed as Expected", Status.FAIL);
			}
			//Getting Uploaded By
			//HighlightElement_green(driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[5]/td[2]")));
			String mailcontent_Uploaded_By_value = driver1.findElement(By.xpath("//*[@id='x_RequestDetails']/td/table/tbody/tr[5]/td[2]")).getText();
			String Uploaded_By= dataTable.getData("General_Data", "Uploaded_By");
			if(mailcontent_Uploaded_By_value.contains(Uploaded_By))
			{
				System.out.println("mailcontent_Uploaded_By_value is same as expected");
				System.out.println("mailcontent_Uploaded_By_value is: " +mailcontent_Uploaded_By_value);	
				report.updateTestLog("mailcontent_Uploaded_By", "mailcontent_Uploaded_By is displayed as Expected", Status.PASS);
			}
			else
			{
				System.out.println("mailcontent_Uploaded_By_value is NOT same as expected");
				System.out.println("mailcontent_Uploaded_By_value is: " +mailcontent_Uploaded_By_value);	
				report.updateTestLog("mailcontent_Uploaded_By", "mailcontent_Uploaded_By is NOT displayed as Expected", Status.FAIL);
			}
			
			break;
			
			}
			else
			{
				System.out.println("mailcontent_content_period is NOT same as expected");
				System.out.println("Displayed mailcontent_content_period is: " +mailcontent_month);
				report.updateTestLog("mailcontent_content_period", "mailcontent_content_period is Not displayed as Expected", Status.FAIL);
			}
			}}
		else
		{
			System.out.println("Search field not displayed");
			Assert.fail();
		}		
		}
		catch(Exception e)
		{
			System.out.println("Failed : " +e);
			//driver.close();
		}
		
	}
	
	public void getcurrenttime()
	{
		//Getting Current Time
		Date date1 = new Date();
		String strDateFormat = "hh:mm a";
		DateFormat dateFormat = new SimpleDateFormat(strDateFormat);
		Current_time= dateFormat.format(date1);
		System.out.println("Current time : " + Current_time);
	}
	
}
package pages;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;

import org.apache.commons.io.comparator.LastModifiedFileComparator;
import org.apache.commons.io.filefilter.WildcardFileFilter;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.UnhandledAlertException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.cognizant.framework.Status;

import supportlibraries.ScriptHelper;

public class HomePage_Aus extends MasterPage_Aus {


	public String country_setting;
	
	public String downloadPath = "C:\\Users\\806159\\Downloads";
	
	@FindBy(xpath="//div[contains(@class, 'dropdown')  and contains(@class,'btn-group')]")
	public WebElement country_dropdown_button; 
	

	public String country_list_xpath="//a[contains(@class,'ng-binding')]";
	
	@FindBy(id="companyselreports")
	public WebElement Company_dropdown_field_Reports;
	
	@FindBy(xpath="//*[@id='monthviewPage']")
	public WebElement MonthView;
	
	@FindBy(xpath="//*[@id='associateUploadTypeDropDown']") 
	public WebElement drpdownpayslipType;
	
	@FindBy(xpath="//div[contains(@class,'epayManagePayslipLogo')]")
	public WebElement Manage_payslip_menu; 

	@FindBy(xpath = "//label[contains(text(),'Manage Payslip')]")
	public WebElement Manage_PaySlip;
	
	@FindBy(xpath="//a[text()='Basic Salary']")
	public WebElement Basic_Salary;
	
	@FindBy(xpath = "//select[contains(@id,'companyselpayslip')]")
	public WebElement Select_Company;
	
	@FindBy(xpath = "//a[contains(text(),'Upload Pay Slip')]")
	public WebElement Select_UploadPayslip;
	
	@FindBy(xpath = "//select [@id='filetypeselpayslip']")
	public WebElement Select_File_Type;
	
	@FindBy(xpath = "//input[contains(@id,'get_file')]")
	public WebElement Browse;
	
	@FindBy(xpath = "//a[contains(@id,'templateDownloadLink')]")
	public WebElement Click_Template;
	
	
	
	@FindBy(xpath = "//a[contains(text(),'Manage Components')]")
	public WebElement Manage_Components;
	
	@FindBy(xpath = "//input[@id='ComponentIDinput']")
	public WebElement Component_ID;
	
	@FindBy(xpath = "//input[@id='DisplayNameinput']")
	public WebElement Display_Name;
	
	@FindBy(xpath = "//select[@id='componentselect']")
	public WebElement Component_Type;
	
	@FindBy(xpath = "//*[@id='dropdownMenu0']")
	public WebElement Publish_Menu;
	
	@FindBy(xpath = "//li[contains(text(),'PUBLISH')]")
	public WebElement Publish_Publish;
	
	@FindBy(xpath = "//li[contains(text(),'SEND BACK')]")
	public WebElement Publish_Sendback;
	
	@FindBy(xpath = "//button[contains(text(),'Send Back')]")
	public WebElement Publish_Sendback_Button;
	
	@FindBy(xpath = "//a[contains(text(),'Publish/ Send Back')]")
	public WebElement PublishAndSendback;
	
	@FindBy(xpath = "//input[contains(@id,'sendbackreason')]")
	public WebElement Send_Back_Reason;
	
	@FindBy(xpath = "//button[contains(text(),'Submit')]")
	public WebElement Submit;
	
	@FindBy(xpath = "//button[contains(@id,'uploadmessage')]")
	public WebElement Okay;
	
	@FindBy(xpath = "//a[contains(text(),'Reports')]")
	public WebElement Reports;
	
	@FindBy(xpath = "//span[contains(text(),'Uploaded')]")
	public WebElement Reports_Uploaded;
	
	@FindBy(xpath = "//span[contains(text(),'Updated')]")
	public WebElement Reports_Updated;
	
	@FindBy(xpath = "//span[contains(text(),'Published')]")
	public WebElement Reports_Published;
	
	@FindBy(xpath = "//span[contains(text(),'Sentback')]")
	public WebElement Reports_Sentback;
	
	@FindBy(xpath = "//input[contains(@id,'reportViewbtn')]")
	public WebElement Reports_View;
	
	@FindBy(xpath = "//select[contains(@id,'financialyrselreports')]")
	public WebElement Reports_Financial_YR;
	
	@FindBy(xpath = "//select[contains(@id,'companyselreports')]")
	public WebElement Reports_Company;
	
	/*@FindBy(xpath = "//div[contains(@title,'Download File')]")
	public WebElement Reports_Download;*/
	
	@FindBy(xpath = "//div[contains(@class,'downloadicon pull-right')]")
	public WebElement Reports_Download;
	
	@FindBy(xpath = "//div[@id='paginationReports']/dir-pagination-controls/ul ")
	public WebElement Reports_Pagination;
	
	@FindBy(xpath = "//span[(contains(text(),'Uploaded'))]")
	public WebElement Filter_Uploaded;
	
	@FindBy(xpath = "//span[(contains(text(),'Published'))]")
	public WebElement Filter_Published;
	
	@FindBy(xpath = "//span[(contains(text(),'Sentback'))]")
	public WebElement Filter_Sentback;
	
	@FindBy(xpath = "//*[@id='paginationReports']/dir-pagination-controls/ul")
	//*[@id="paginationReports"]/dir-pagination-controls/ul
	public WebElement pagination_locator;
	
	@FindBy(xpath = "//*[@id='paginationReports']/dir-pagination-controls/ul/li[8]/a/div")
	public WebElement pagination_right;
	
	@FindBy(id = "dirPaginationLeft;")
	public WebElement pagination_left;
	
	@FindBy(xpath = "//table[@id='reportstbl']/tbody/tr")
	public WebElement table_data;
	
	public String month_xpath="//span[contains(@class,'month')]";
	
	@FindBy(xpath = "//input[contains(@id,'associateIdInput')]")
	public WebElement Associate_ID;
	
	@FindBy(xpath = "//button[contains(@class,'btn btn-success submit')] [contains(@ng-click,'viewAssociatePayslip()')]")
	public WebElement View_PaySlip;
	
	
	@FindBy(xpath = "//a[contains(text(),'View Payslip')]")
	public WebElement View_PaySlip_Tab;
	
	@FindBy(xpath = "//div[contains(@class,'downloadicon')] [@ng-click='downloadPayslip()']")
	public WebElement Download_Payslip;
	
	@FindBy(xpath = "//button[contains(@id,'btnokaydownload')]")
	public WebElement Okay_Download;
	
	@FindBy(xpath = "//input[contains(@class,'emailTriggerIMG')]")
	public WebElement Reports_Email; 
	
	

	
	public HomePage_Aus(ScriptHelper scriptHelper) {
		super(scriptHelper);
		PageFactory.initElements(driver, this);
	}
	
//	public void select_country(String country) 
//	{
//		try 
//		{
//			clickOnButton(country_dropdown_button);
//			String country_name= dataTable.getData("General_Data", "country");
//			System.out.println("Country name:" +country_name);
//			List_Selection(country_name, country_list_xpath, "Country");
//			
//			report.updateTestLog("Country selection", "Selected Country : " +country_name, Status.DONE);
//			
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//	}
//	public void All_country_selection(String country) 
//	{
//		try 
//		{
//			clickOnButton(country_dropdown_button);
//			System.out.println("Country name:" +country);
//			List_Selection(country, country_list_xpath, "Country");
//			
//			report.updateTestLog("Country selection", "Selected Country : " +country, Status.DONE);
//			
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		
//		
//	}
//	public void select_Manage_payslip() 
//	{
//		try 
//		{
//			clickOnButton(Manage_payslip_menu);
//			report.updateTestLog("Manage payslip", "Manage payslipe selected ", Status.DONE);
//			
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		
//		
//	}
	

	
	public void E_payHomepage() 
	{
		try 
		{
			select_country();
			select_Manage_payslip();
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	
	public void ViewCtsInDropdown()
	{
		Select select = new Select(driver.findElement(By.id("companyselpayslip")));
		WebElement sel = driver.findElement(By.id("companyselpayslip"));
		List<WebElement> lists = sel.findElements(By.tagName("option"));
		    for(WebElement element: lists)  
		    {
		    	 if(element.getText().contains("CTS"))
		    	 {
		    		 try {
						Thread.sleep(2000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		        	System.out.println("Option : CTS is displayed in company dropdown");
		        	report.updateTestLog("Company ID verification", "CTS is displayed in company dropdown", Status.PASS);
		  
		        
		    }
        
       
           
               else
        {
        	System.out.println("Option : CTS is Not displayed in company dropdown ---> BUG");
        }
	}
}
	
public void SelectCtsFromDropdown()
{
	try {
		selectValueFromDropDown(Select_Company,"CTS");
		report.updateTestLog("Selecting CTS from Dropdown", "Company ID is selected as CTS" , Status.PASS);
		System.out.println("CTS selection");
	} catch (Exception e) {
		e.printStackTrace();
	}
}
	

	public void select_country() 
	{
		
		report.addTestLogSubSection("Country selection validation");
		try 
		{   
			
			Thread.sleep(5000);
			clickOnButton(country_dropdown_button);
			String country_setting=properties.getProperty("country_setting");
			if( country_setting.contains("True"))
			{
				String Default_country=properties.getProperty("Default_country");
				List_Selection(Default_country, country_list_xpath, "Country");
				System.out.println(" global Country name:" +Default_country);
				report.updateTestLog("Country selection", "Selected Country : " +Default_country, Status.PASS);
			}
			else
			{
				String country_name= dataTable.getData("General_Data", "Country");
				List_Selection(country_name, country_list_xpath, "country");
				System.out.println("Country name:" +country_name);
				report.updateTestLog("Country selection", "Selected Country : " +country_name, Status.DONE);
			}
			
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	public void select_Manage_payslip() 
	{
		report.addTestLogSubSection("Manage Payslip validation");
		try 
		{
			clickOnButton(Manage_payslip_menu);
			System.out.println("Manage payslip selected");
			//report.updateTestLog("Manage payslip", "Manage payslip selected ", Status.DONE);
			Thread.sleep(3000);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	
	@FindBy(id="companyselpayslip")
	public WebElement Company_dropdown_field;

	private int k;

	private Object count;

	private Object i;
	
      public void ViewCtsInDropdown(String companyid) throws Exception
	{
    	  //try
    	  //{
 		  WebElement company_dropdown=driver.findElement(By.id("companyselpayslip"));
 		  Thread.sleep(5000);
 		  System.out.println("Select CTS");
    		selectValueFromDropDown(company_dropdown ,"CTS");
    		//System.out.println("CTS is selected in company dropdown");
    		report.updateTestLog("Verify Company_dropdown_field"," CTS is selected in dropdown", Status.PASS);
    		/*selectValueFromDropDown(Company_dropdown_field, "Frontica");
    		report.updateTestLog("Verify Company_dropdown_field"," Frontica is selected in dropdown", Status.DONE);*/
		//Select select = new Select(driver.findElement(By.id("companyselpayslip")));
		
		
		//WebElement sel = driver.findElement(By.id("companyselpayslip"));
		
		
		//To get size of dropdown option
//		Thread.sleep(3000);
//		
//		int size = driver.findElements(By.xpath("//*[@id='companyselpayslip']/option")).size();
//	//	int size = driver.findElements(By.xpath("//*[@id='UploadForm']/div/div[1]/div[2]/select/option")).size();
//		System.out.println("Dropdown size is: " +size);
//		
//		for (int i=1; i<=size;i++)
//		{
//			//to get dropdown values 
//			String dropdownvalue = driver.findElement(By.xpath("//*[@id='companyselpayslip']/option["+i+"]")).getText();
//			System.out.println("Dropdown value "+i+" is: " +dropdownvalue);
//			
//			if(dropdownvalue.equalsIgnoreCase(companyid))
//			{
//				System.out.println("Expected dropdown option is displayed");
//				report.updateTestLog("Verify "+dropdownvalue+"",""+dropdownvalue+" is selected in dropdown", Status.PASS);
//				
//				//Select value in dropdown
//				driver.findElement(By.xpath("//*[@id='companyselpayslip']/option["+i+"]")).click();
//				System.out.println(""+dropdownvalue+" is selected in dropdown");
//				//report.updateTestLog("Verify "+dropdownvalue+"", ""+dropdownvalue+" is selected in dropdown", Status.PASS);
//				
//				break;
//			}
//			else
//			{
//				 System.out.println("Dropdown option validation failed due to: " );
//	    		 report.updateTestLog("Verify Dropdown", "Dropdown option validation failed :  " , Status.FAIL);	
//			}
//		}
    	  //}
    	  /*catch(Exception e)
    	  {
    		  System.out.println("Dropdown option validation failed due to: " +e);
    		  report.updateTestLog("Verify Dropdown", "Dropdown option validation failed :  " +e.getMessage(), Status.FAIL);
    		  
    	  }*/
    	  
		/*List<WebElement> lists = sel.findElements(By.tagName("option"));
		    for(WebElement element: lists)  
		    {
		    	 if(element.getText().contains("CTS"))
		    	 {
		    		 String companyid = element.getText();
		    		 System.out.println("Company id in dropdown is: " +companyid);
		    		 
		    		 try {
						Thread.sleep(2000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		        	System.out.println("Option : CTS is displayed in company dropdown");
		        //	report.updateTestLog("Country selection", "Selected Country : " +Default_country, Status.DONE);
		  
		        
		    }    
		    
	
           
             
  	        else
        {
        	System.out.println("Option : CTS is Not displayed in company dropdown ---> BUG");
        }
		    }*/
	}
	
	public void select_Reports() 
	{
		report.addTestLogSubSection("Reports validation");
		try 
		{
			clickOnButton(Reports);
			report.updateTestLog("Reports tab selection", "reports tab selected ", Status.DONE);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	
	public void Select_Manage_Components()
	{
		try 
		{
			Thread.sleep(2000);
//			WebDriverWait wait = new WebDriverWait(driver, 15);
//			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//a[contains(text(),'Manage Components')])")));
            //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[contains(text(),'Manage Components')])")));
			Manage_Components.click();
			report.updateTestLog("Manage Components", "Manage Components selected ", Status.DONE);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void Verify_Component_ID(String Text)
	{
	try 
	{  
		Thread.sleep(2000);
		Component_ID.sendKeys(Text);
		
		if(Component_ID.isEnabled()|| Component_ID.getText().equals(Text))
		{
			System.out.println("Componenet id field is in enabled and user will be able to provide ID");
		}
		
	} catch (Exception e) {
		
		e.printStackTrace();
	}
		
	}
	
	public void Verify_Display_Name()
	{
		try {
			Thread.sleep(2000);
			String Text= dataTable.getData("General_Data", "DisplayName");
			Display_Name.sendKeys(Text);

			if(Display_Name.isEnabled()|| Display_Name.getText().equals(Text))
			{
				System.out.println("Display field is in enabled and user will be able to provide Display name ");
			}
		} catch (InterruptedException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
	
	}
	
	
	
	
	public void ViewComponentTypeInDropdown() throws InterruptedException
	{  try{
		
		String[] exp = {"Select","Earnings","Deductions","Employer Contribution" };
		WebElement dropdown = driver.findElement(By.id("componentselect"));  
        Select select = new Select(dropdown);  
        List<WebElement> options = select.getOptions();  
        for(WebElement we:options)  
        {  
         for (int i=0; i<exp.length; i++){
             if (we.getText().equals(exp[i])){
             System.out.println(we.getText()+ " element is displayed");
             } 
           
         }
         }
	}
         catch (Exception e) {
 		e.printStackTrace();
         }
	}
        
	
	public void SelectComponentTpFromDropdown()
	{
		try {
			selectValueFromDropDown(Component_Type,"Earnings");
			Select dropdown = new Select(driver.findElement(By.xpath("//select[contains(@id,'componentselect')]")));
			WebElement option = dropdown.getFirstSelectedOption();
			String text = option.getText();
			if(text.equals("Earnings"))
			{
				System.out.println("Selected Option   "+option.getText()+"   option is selected");
			}
			else
			{
				System.out.println("Failure:As no option is selected");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void EnterDisplayNameAndCompID(String ComponentID, String DisplayName)
	{
		Component_ID.sendKeys(ComponentID);
		Display_Name.sendKeys(DisplayName);
	}
	
	public void SubmitComponent() 
	{
		try {
			Thread.sleep(1000);
			String E_ComponentID = dataTable.getData("General_Data", "E_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+E_ComponentID, Status.PASS);
            String E_DisplayName =dataTable.getData("General_Data", "E_DisplayName");
            report.updateTestLog("Component ID selection", "Component ID selected as "+E_DisplayName, Status.PASS);
            EnterDisplayNameAndCompID( E_ComponentID, E_DisplayName);
			Thread.sleep(1000);
			selectValueFromDropDown(Component_Type,"Earnings");
			Submit.click();
			Thread.sleep(1000);
			Okay.click();
			System.out.println("Component with the component type as Earnings is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Earnings and submitted successfully", Status.PASS);
			
			//Adding with type as Deductions
			Thread.sleep(2000);
			//selectValueFromDropDown(Select_Company,"CTS");
			String D_ComponentID =dataTable.getData("General_Data", "D_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+D_ComponentID, Status.PASS);
            String D_DisplayName =dataTable.getData("General_Data", "D_DisplayName");
            report.updateTestLog("Component ID selection", "Component ID selected as "+D_DisplayName, Status.PASS);
			EnterDisplayNameAndCompID( D_ComponentID, D_DisplayName);
			selectValueFromDropDown(Component_Type,"Deductions");
			Submit.click();
			Thread.sleep(1000);
			Okay.click();
			System.out.println("Component with the component type as Deductions is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Deductions and submitted successfully", Status.PASS);

			//Adding component with type as Employer Contribution
			Thread.sleep(2000);
			//selectValueFromDropDown(Select_Company,"CTS");
			String EC_ComponentID =dataTable.getData("General_Data", "Ec_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+EC_ComponentID, Status.PASS);
			String EC_DisplayName =dataTable.getData("General_Data", "Ec_DisplayName");
			report.updateTestLog("Component ID selection", "Component ID selected as "+EC_DisplayName, Status.PASS);
			EnterDisplayNameAndCompID( EC_ComponentID, EC_DisplayName);
			selectValueFromDropDown(Component_Type,"Employer Contribution");
			Submit.click();
			Thread.sleep(1000);
			Okay.click();
			System.out.println("Component with the component type as Employer Contribution is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Employer Contribution and submitted successfully", Status.PASS);

			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			
		}	
			

		
	}
	
	
	
	
	
	
	
	
	
	public void VerifyPublish()
	{   
		try {
		Thread.sleep(2000);
		PublishAndSendback.click();
		Thread.sleep(5000);
		Publish_Menu.click();
		Thread.sleep(5000);
		Publish_Publish.click();
		Thread.sleep(5000);
		 Alert Alert = driver.switchTo().alert();
		String Text=Alert.getText();
		if(Text.equals("Payslip Published successfully."))
		{
			System.out.println("Payslip Published successfully.");
		}
		
		else
		{
			System.out.println("Payslip is not Published");

		}
	    Alert.accept();
		
	    report.updateTestLog("Verify Publish", "Payslip Publish completed Successfully" , Status.PASS);
		} catch (Exception e) {
            e.printStackTrace();
            report.updateTestLog("Verify publish", "Vrfy publish having probelm" +e.getMessage(), Status.FAIL);
      }

		}
	
	public void VerifySendback()
	{   
		try {
			Thread.sleep(2000);
		PublishAndSendback.click();
		Thread.sleep(3000);
		Publish_Menu.click();
		Thread.sleep(2000);
		Publish_Sendback.click();
		Thread.sleep(2000);
		Send_Back_Reason.sendKeys("Test reason");
		Publish_Sendback_Button.click();
		Thread.sleep(2000);
		Alert Alert = driver.switchTo().alert();
		Alert.accept();
		
		report.updateTestLog("Verify SendBack", "Payslip Sendback completed Successfully" , Status.PASS);
		
	    } catch (Exception e) {
            e.printStackTrace();
            report.updateTestLog("Verify sendback", "Verifying sendback having probelm" +e.getMessage(), Status.FAIL);
      }

		}
	public void ViewReports()
	{
	   select_Reports();
		if(Reports_Financial_YR.isDisplayed()||Reports_Company.isDisplayed())
		{
			System.out.println("Financial year and company dropdowns are dispalyed");
			//report.updateTestLog("Financial  Year and Company dropdown verification", "Financial year and company dropdowns are dispalyed", Status.PASS);
		}
		else
		{
			System.out.println("Financial year and company dropdowns are not dispalyed :BUG");
		//report.updateTestLog("Financial  Year and Company dropdown verification", "Financial year and company dropdowns are not dispalyed", Status.FAIL);
		}
		
		
		if(Reports_Uploaded.isDisplayed()||Reports_Published.isDisplayed()||Reports_Sentback.isDisplayed()||Reports_View.isDisplayed())
		{
			System.out.println("Uploaded,Published,SendBack filters and view button is dispalyed");
		report.updateTestLog("Status verification", "Uploaded,Published,SendBack filters and view button is dispalyed", Status.PASS);
		}
		
		else
		{
			System.out.println("Uploaded,Puished,SendBack filters and view button are not displayed : BUG");
			report.updateTestLog("Status verification", "Uploaded,Published,SendBack filters and view button is not dispalyed", Status.FAIL);

		}
	}
	public void DeleteFile(String filePath)
	{   try {
		File file= new File(filePath);
	    Thread.sleep(3000);
		for (int i = 0; i < 10; i++) {
			
	    	if(file.exists())
	    	{
	    	file.delete();
	    	}
		}
	}
		catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void ViewLatestFile(String filePath)
	{  
		try {
		File file= new File(filePath);
	    Thread.sleep(3000);
		boolean flag= false;
		if(file.exists())
		{
		flag= true;
		}
		if (flag) {
			
			System.out.println("Latest file");
			report.updateTestLog("Report file", "Report file exists", Status.PASS);
			
		} else {
			System.out.println("FAILURE");
			report.updateTestLog("Failure", "File download filed", Status.FAIL);
		}
		/*//for (int i = 0; i < 10; i++) {
				
    	if(file.exists())
    	{
    	file.delete();
    	}
		}*/
		  }
		catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		

	}
	public void ViewDownloadedFile()
	{
		
		try {
			  select_Reports();
			  String Year=dataTable.getData("General_Data", "SelectYear");
				 report.updateTestLog("Financial year selection", "Financial year selected as:"+Year, Status.PASS);
				 selectValueFromDropDown(Reports_Financial_YR,Year);
			  Thread.sleep(3000);
			 Reports_View.click();
			 System.out.println("view is clicked");
			 report.updateTestLog("View verification", "View button is clicked in reports", Status.PASS);
			 //Thread.sleep(2000);
			 	 
			 //if (table_data.isDisplayed())
			 /*{
				 ToFindall_status("Uploaded","Published","SentBack");
			 }*/
			 		 
			 //report.updateTestLog("report message verification", "Report verfied for the financial year", Status.PASS);
	 
			   
			 if (isAlertPresent())
			 //try
			 {



			                         Thread.sleep(5000);
			                         //report.updateTestLog("Alert message verification", "No data available message displayed", Status.PASS);

			                     Alert alert = driver.switchTo().alert();         
			                     //report.updateTestLog(stepName, stepDescription, stepStatus);



			                     // Capturing alert message.    

			                     //String alertMessage= driver.switchTo().alert().getText();           



			                     // Displaying alert message       



			                     //report.updateTestLog("Alert verification " , "No data available error message displayed", Status.PASS);

			                     Thread.sleep(2000);

			                     // Accepting alert          

			                     alert.accept();

			                     //System.out.println(alertMessage);

			                         }



			                         /*catch (UnhandledAlertException e){Alert alert = driver.switchTo().alert();          



			                         // Capturing alert message.    

			                         String alertMessage= driver.switchTo().alert().getText();         



			                         // Displaying alert message         

			                         report.updateTestLog("Alert - " , alertMessage+" is captured", Status.PASS);

			                         Thread.sleep(2000);

			                         // Accepting alert            

			                         alert.accept();   

			                         System.out.println(alertMessage);

			                         }
*/
			 else if(table_data.isDisplayed())
				 
			 //catch (NoSuchElementException e)
			 {

			  Thread.sleep(3000);
			 String filePath=dataTable.getData("General_Data", "DownloadFilePath");
			 DeleteFile(filePath);
			 Reports_Download.click();
			 report.updateTestLog("File download verification", "File downloaded successfully", Status.PASS);
			 ViewLatestFile(filePath);
			 }
	         
	        
				    
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void VerifyEmailSent()
	{
		try {
		//UploadFile();
		//VerifyPublish();
		select_Reports();
		String Year=dataTable.getData("General_Data", "SelectYear");
		selectValueFromDropDown(Reports_Financial_YR,Year); 
		report.updateTestLog("Financial year selection", "Financial year selected as:" +Year, Status.PASS);
		Thread.sleep(3000);
		
		String company = dataTable.getData("General_Data" , "CompanyID");
		selectValueFromDropDown(Company_dropdown_field_Reports, company);
		report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
		//System.out.println("Company ID selected is : ", " "+company+" is selected");

		Reports_Published.click();
		Thread.sleep(2000);
		Reports_View.click();
		Thread.sleep(3000);
		System.out.println("view is clicked");
		 report.updateTestLog("View verification", "View button is clicked in reports", Status.PASS);
		 Thread.sleep(4000);
		 
		 //if (table_data.isDisplayed())
		 /*{
			 ToFindall_status("Uploaded","Published","SentBack");
		 }*/
		 		 
		 //report.updateTestLog("report message verification", "Report verfied for the financial year", Status.PASS);

		   
		 /*//if (isAlertPresent())
		 try
		 {



		                         Thread.sleep(5000);
		                         //report.updateTestLog("Alert message verification", "No data available message displayed", Status.PASS);

		                     Alert alert = driver.switchTo().alert();         
		                     //report.updateTestLog(stepName, stepDescription, stepStatus);



		                     // Capturing alert message.    

		                     //String alertMessage= driver.switchTo().alert().getText();           



		                     // Displaying alert message       



		                     //report.updateTestLog("Alert verification " , "No data available error message displayed", Status.PASS);

		                     Thread.sleep(2000);

		                     // Accepting alert          

		                     alert.accept();

		                     //System.out.println(alertMessage);

		                         }



		                         catch (UnhandledAlertException e){Alert alert = driver.switchTo().alert();          



		                         // Capturing alert message.    

		                         String alertMessage= driver.switchTo().alert().getText();         



		                         // Displaying alert message         

		                         report.updateTestLog("Alert - " , alertMessage+" is captured", Status.PASS);

		                         Thread.sleep(2000);

		                         // Accepting alert            

		                         alert.accept();   

		                         System.out.println(alertMessage);

		                         }

		 //else if(table_data.isDisplayed())
		 catch (NoSuchElementException e)
		 {*/

		 
		//List<WebElement> emaillist=driver.findElements(By.xpath("(@class,'emailTriggerIMG')]"));
		Thread.sleep(4000);
		
		Find_Status_of_EMail_button();
		
		} 
		
		
		 catch (Exception e) {
            e.printStackTrace();
            report.updateTestLog("Verify email sent to the associates", "Verify email sent to the associates having probelm" +e.getMessage(), Status.FAIL);
      }
		
	}

	public void updatevalidation()
	{
		try {
		//UploadFile();
		//VerifyPublish();
		select_Reports();
		String Year=dataTable.getData("General_Data", "SelectYear");
		selectValueFromDropDown(Reports_Financial_YR,Year); 
		report.updateTestLog("Financial year selection", "Financial year selected as:" +Year, Status.PASS);
		Thread.sleep(3000);
		
		String company = dataTable.getData("General_Data" , "CompanyID");
		selectValueFromDropDown(Company_dropdown_field_Reports, company);
		report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
		//System.out.println("Company ID selected is : ", " "+company+" is selected");

		Reports_Updated.click();
		Thread.sleep(2000);
		Reports_View.click();
		Thread.sleep(3000);
		System.out.println("view is clicked");
		 report.updateTestLog("View verification", "View button is clicked in reports", Status.PASS);
		 Thread.sleep(4000);
		 Reports_Download.click();
		 report.updateTestLog("Report download validation", "Report downloaded successfully", Status.PASS);
		 
		 //if (table_data.isDisplayed())
		 /*{
			 ToFindall_status("Uploaded","Published","SentBack");
		 }*/
		 		 
		 //report.updateTestLog("report message verification", "Report verfied for the financial year", Status.PASS);

		   
		 /*//if (isAlertPresent())
		 try
		 {



		                         Thread.sleep(5000);
		                         //report.updateTestLog("Alert message verification", "No data available message displayed", Status.PASS);

		                     Alert alert = driver.switchTo().alert();         
		                     //report.updateTestLog(stepName, stepDescription, stepStatus);



		                     // Capturing alert message.    

		                     //String alertMessage= driver.switchTo().alert().getText();           



		                     // Displaying alert message       



		                     //report.updateTestLog("Alert verification " , "No data available error message displayed", Status.PASS);

		                     Thread.sleep(2000);

		                     // Accepting alert          

		                     alert.accept();

		                     //System.out.println(alertMessage);

		                         }



		                         catch (UnhandledAlertException e){Alert alert = driver.switchTo().alert();          



		                         // Capturing alert message.    

		                         String alertMessage= driver.switchTo().alert().getText();         



		                         // Displaying alert message         

		                         report.updateTestLog("Alert - " , alertMessage+" is captured", Status.PASS);

		                         Thread.sleep(2000);

		                         // Accepting alert            

		                         alert.accept();   

		                         System.out.println(alertMessage);

		                         }

		 //else if(table_data.isDisplayed())
		 catch (NoSuchElementException e)
		 {*/

		 
		//List<WebElement> emaillist=driver.findElements(By.xpath("(@class,'emailTriggerIMG')]"));
		Thread.sleep(4000);
		
		Find_Status_of_update_button();
		
		} 
		
		
		 catch (Exception e) {
            e.printStackTrace();
            //report.updateTestLog("Verify email sent to the associates", "Verify email sent to the associates having probelm" +e.getMessage(), Status.FAIL);
      }
		
	}
	
	public void Find_Status_of_EMail_button1() throws Exception
	 {
		report.addTestLogSubSection("Status of email icon click");
/*		Thread.sleep(7000);
		if (driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
	    
	    System.out.println(rows);
	    int k=3;
	    for(int i=1;i<=rows;i++)
	    {
	    	Thread.sleep(7000);
	    	if(driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).isEnabled())
			{
	    		report.updateTestLog("Email validation", "Email icon is enabled", Status.PASS);

	    		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).click();
	    		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);
				Thread.sleep(6000);
				Alert alert = driver.switchTo().alert();
				System.out.println(alert.getText());
				Thread.sleep(6000);
				alert.accept();*/
				
		try
		{
			 //@SuppressWarnings("unused")
			WebDriverWait wait = new WebDriverWait(driver,30);
			String date = dataTable.getData("General_Data", "period");
			System.out.println("Period in Datatable is: " +date);
			String type = dataTable.getData("General_Data", "Upload_type");
			
			 //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
			 if(driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
			 {
			 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr/td"));
			 int count= rows.size();
			 System.out.println("Count is: " +count);
			 int k=3;
			 for(int i=1;i<rows.size();i++)
			 {
				 //WebElement country = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr/td[1]"));
				    WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td"));
				    WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[3]"));
			 
		/*String Country_name=dataTable.getData("General_Data" , "Country");
		if(country.getText().trim().contains(Country_name.trim()))
		System.out.println("Country selected as :"+ Country_name);
		report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
		*/
		//HighlightElement_green(country);
		
		if(period.getText().trim().contains(date.trim()))
		{
		System.out.println("period selected as :" + date);
		report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
		
		HighlightElement_green(period);
		
		if(upload_type.getText().trim().contains(type.trim()))
		{
		System.out.println("Upload type selected as: "+ type);
		report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
		
		HighlightElement_green(upload_type);
		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr["+i+"]/td[6]/div/input[contains(@class,'emailTriggerIMG')]")).click();
		System.out.println(" Mail icon is clicked");
		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);

		Thread.sleep(5000);
		/*****Handling alert*****/
		checking_alert();
		break;
		}

		}

			 }
		}
		
			 
				
			
	    	
			else
			{
	    		report.updateTestLog("Email validation", "Email icon is not enabled", Status.PASS);

			}
		
		}
		catch(Exception e)
		 {
			   
			   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
			   
		 }
	 
		{
		
	      if(count==i)
	      {
	    	  if(pagination_locator.isDisplayed())
	    	  {	   
	    		  	List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li"));
	    		  	if(pagination_count.size()==k)
	    		  	{
	    		  		
	    		  	}
	    		  	else
	    		  	{
	    			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a"));
	    			 // System.out.println("K value is :"+k);
	    			  if(Page_Number.isEnabled()==false)
	    			  {
	    				  System.out.println("Last button reached");
	    				  
	    			  }
	    			  
	    			  if(Page_Number.isEnabled()==true)
	    			  {   //System.out.println("Page no is displayed");
	    				  driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a")).click();
		    			  k++;  
		    			  /****assigning i value as 0 for the next page table verification*****/
		    			  i=0;
	    			  }
	    			  else
	    			  {
	    				  System.out.println("No more buttons available in Pagination or Button is not enabled");
	    			  } 
	    		  	}
		    	}
		    	  	  
	      	}
	      else
	    	{
	    		System.out.println("No other pages available hereafter");
	    	}  
	      //int rows_final=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size();
	      //rows=rows_final;
	    }
	}
	
	
	
/*	//Normal PDF Automaion

   
	public void OpenPdfFile()
	{
		try {	
	
	
File file = new File("C:\\Users\\269081\\Downloads\\Payslip.pdf");


	
FileInputStream fis = new FileInputStream(file);

PDFParser parser = new PDFParser(fis);

parser.parse();

COSDocument cosDoc = parser.getDocument();

PDDocument pdDoc = new PDDocument(cosDoc);

PDFTextStripper strip = new PDFTextStripper();

String data = strip.getText(pdDoc);

System.out.println(data);

//Verify the text in PDF
if(data.contains("269081"))
{
	System.out.println("Expected text is displayed in the PDF");
}
else
{
	System.out.println("Expected text is not displayed in the PDF");
}

cosDoc.close();

pdDoc.close();

} catch ( IOException e) {
// TODO Auto-generated catch block
e.printStackTrace();
System.out.println("Failed " +e);
}
	}*/
	
	//  Finding Status to click Email icon
	@SuppressWarnings("unchecked")
	public void Find_Status_of_EMail_button() 
	 {
		//driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);	  
		report.addTestLogSubSection("Status of email icon click");
/*		Thread.sleep(7000);
		if (driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
	    System.out.println(rows);
	    int k=3;
	    for(int i=1;i<=rows;i++)
	    {
	    	Thread.sleep(7000);
	    	if(driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).isEnabled())
			{
	    		report.updateTestLog("Email validation", "Email icon is enabled", Status.PASS);

	    		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).click();
	    		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);
				Thread.sleep(6000);
				Alert alert = driver.switchTo().alert();
				System.out.println(alert.getText());
				Thread.sleep(6000);
				alert.accept();*/
				
		try
		{
			 //@SuppressWarnings("unused")
			WebDriverWait wait = new WebDriverWait(driver,30);
			String date = dataTable.getData("General_Data", "period");
			System.out.println("Period in Datatable is: " +date);
			String type = dataTable.getData("General_Data", "Upload_type");
			
			 //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
			 if(driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
			 {
			 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr/td"));
			 int count= rows.size();
			 System.out.println("Count is: " +count);
			 //int k=3;
			 
			 //if(driver.findElement(By.xpath("//*[@id='paginationReports']//ul/li")).size()==0)
				 if(driver.findElements(By.xpath("//*[@id='paginationReports']//ul/li")).size()==0) 
				 
			 {
				 System.out.println("Pagination not displayed");
				 inner:for(int i=1;i<=4;i++)
				 {
					 WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td"));
					 WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[3]"));
				 //}
			 //}
				 //for(int i=1;i<rows.size();i++)
			 //{
				 //WebElement country = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr/td[1]"));
				    //WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td"));
				    //WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[3]"));
			 
		/*String Country_name=dataTable.getData("General_Data" , "Country");
		if(country.getText().trim().contains(Country_name.trim()))
		System.out.println("Country selected as :"+ Country_name);
		report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
		*/
		//HighlightElement_green(country);
		
		if(period.getText().trim().contains(date.trim()))
		{
		System.out.println("period selected as :" + date);
		report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
		
		HighlightElement_green(period);
		
		if(upload_type.getText().trim().contains(type.trim()))
		{
		System.out.println("Upload type selected as: "+ type);
		report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
		
		HighlightElement_green(upload_type);
		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr["+i+"]/td[7]/div/input[contains(@class,'emailTriggerIMG')]")).click();
		System.out.println(" Mail icon is clicked");
		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);

		Thread.sleep(5000);
		/*****Handling alert*****/
		checking_alert();
		//break;
		}

		}

			 }
		}
			 
			 else
			{
				int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationReports']//ul/li")).size();
				System.out.println(num_of_clicks);
				outer: for(int j =1; j< num_of_clicks; j++)
				
				{
					System.out.println("outer");
				inner:for(int O=1;O<=4;O++)
					
				{
					System.out.println("inner");
				WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+O+"]/td"));
				 WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+O+"]/td[3]"));
				 if(rows.size()>4)
					 
					 if(period.getText().trim().contains(date.trim()))
						{
						System.out.println("period selected as :" + date);
						report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
						
						HighlightElement_green(period);
						
						if(upload_type.getText().trim().contains(type.trim()))
						{
						System.out.println("Upload type selected as: "+ type);
						report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
						
						HighlightElement_green(upload_type);
						driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr["+O+"]/td[7]/div/input[contains(@class,'emailTriggerIMG')]")).click();
						System.out.println(" Mail icon is clicked");
						report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);

						Thread.sleep(8000);
						/*****Handling alert*****/
						checking_alert();
						//isAlertPresent1();
						Thread.sleep(2000);
						if(upload_type.getText().trim().contains(type.trim()))
						{
							break inner;
						}
						}
						}
						
				if(rows.size()<=4)
			       {
			    	   break outer;
			    	   
			       }
				}	
				 
			driver.findElement(By.xpath("//div[@id='paginationReports']//div[@id='dirPaginationRight']")).click();
			Thread.sleep(2000);
				//report.updateTestLog("Email validation", "Email icon is not enabled", Status.PASS);

			}}}
		
		

else
{
	System.out.println("Email button clicked");
	report.updateTestLog("Email button click", "Email button is already clicked", Status.PASS);
}}

		catch(Exception e)
		 {
			   
			   //report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
			   
		 }
	 
	 }
	
	public void Find_Status_of_update_button() 
	 {
		//driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);	  
		report.addTestLogSubSection("Status of update");
/*		Thread.sleep(7000)
		if (driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
	    System.out.println(rows);
	    int k=3;
	    for(int i=1;i<=rows;i++)
	    {
	    	Thread.sleep(7000);
	    	if(driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).isEnabled())
			{
	    		report.updateTestLog("Email validation", "Email icon is enabled", Status.PASS);

	    		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).click();
	    		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);
				Thread.sleep(6000);
				Alert alert = driver.switchTo().alert();
				System.out.println(alert.getText());
				Thread.sleep(6000);
				alert.accept();*/
				
		try
		{
			 //@SuppressWarnings("unused")
			WebDriverWait wait = new WebDriverWait(driver,30);
			String date = dataTable.getData("General_Data", "period");
			System.out.println("Period in Datatable is: " +date);
			//report.updateTestLog("Update period status validation", "Period in Datatable is: " +date, Status.PASS);
			String type = dataTable.getData("General_Data", "Upload_type");
			//report.updateTestLog("Update type status validation", "Upload_type in Datatable is: " +date, Status.PASS);
			 //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
			 if(driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
			 {
			 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr/td"));
			 int count= rows.size();
			 System.out.println("Count is: " +count);
			 //int k=3;
			 
			 //if(driver.findElement(By.xpath("//*[@id='paginationReports']//ul/li")).size()==0)
				 if(driver.findElements(By.xpath("//*[@id='paginationReports']//ul/li")).size()==0) 
				 
			 {
				 System.out.println("Pagination not displayed");
				 inner:for(int i=1;i<=4;i++)
				 {
					 WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td"));
					 WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[3]"));
				 //}
			 //}
				 //for(int i=1;i<rows.size();i++)
			 //{
				 //WebElement country = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr/td[1]"));
				    //WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td"));
				    //WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[3]"));
			 
		/*String Country_name=dataTable.getData("General_Data" , "Country");
		if(country.getText().trim().contains(Country_name.trim()))
		System.out.println("Country selected as :"+ Country_name);
		report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
		*/
		//HighlightElement_green(country);
		
		if(period.getText().trim().contains(date.trim()))
		{
		System.out.println("period selected as :" + date);
		report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
		
		HighlightElement_green(period);
		
		if(upload_type.getText().trim().contains(type.trim()))
		{
		System.out.println("Upload type selected as: "+ type);
		report.updateTestLog("Update type selection", "Update type selected as :" +type, Status.PASS);
		
		/*HighlightElement_green(upload_type);
		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr["+i+"]/td[7]/div/input[contains(@class,'emailTriggerIMG')]")).click();
		System.out.println(" Mail icon is clicked");
		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);
*/
		Thread.sleep(5000);
		/*****Handling alert*****/
		//checking_alert();
		//break;
		}

		}

			 }
		}
			 
			 else
			{
				int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationReports']//ul/li")).size();
				System.out.println(num_of_clicks);
				outer: for(int j =1; j< num_of_clicks; j++)
				
				{
					System.out.println("outer");
				inner:for(int O=1;O<=4;O++)
					
				{
					System.out.println("inner");
				WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+O+"]/td"));
				 WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+O+"]/td[3]"));
				 if(rows.size()>4)
					 
					 if(period.getText().trim().contains(date.trim()))
						{
						System.out.println("period selected as :" + date);
						report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
						
						HighlightElement_green(period);
						
						if(upload_type.getText().trim().contains(type.trim()))
						{
						System.out.println("Upload type selected as: "+ type);
						report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
						
						/*HighlightElement_green(upload_type);
						driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr["+O+"]/td[7]/div/input[contains(@class,'emailTriggerIMG')]")).click();
						System.out.println(" Mail icon is clicked");
						report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);
*/
						Thread.sleep(8000);
						/*****Handling alert*****/
						//checking_alert();
						//isAlertPresent1();
						Thread.sleep(2000);
						if(upload_type.getText().trim().contains(type.trim()))
						{
							break inner;
						}
						}
						}
						
				if(rows.size()<=4)
			       {
			    	   break outer;
			    	   
			       }
				}	
				 
			driver.findElement(By.xpath("//div[@id='paginationReports']//div[@id='dirPaginationRight']")).click();
			Thread.sleep(2000);
				//report.updateTestLog("Email validation", "Email icon is not enabled", Status.PASS);

			}}}
		
		

else
{
	System.out.println("Email button clicked");
	report.updateTestLog("Email button click", "Email button is already clicked", Status.PASS);
}}

		catch(Exception e)
		 {
			   
			   //report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
			   
		 }
	 
	 }

	public void DownloadPaySlip()
	{  
		try
        {
		Thread.sleep(1000);	
		View_PaySlip_Tab.click();
		report.updateTestLog("View payslip tab verification", "View payslip tab clicked", Status.PASS);
		String AssociateID = dataTable.getData("General_Data", "AssociateID");
		report.updateTestLog("Associate ID selection", "Payslip download for associate is :"+AssociateID, Status.PASS);
		Thread.sleep(3000);	
		Associate_ID.sendKeys(AssociateID);
		View_PaySlip.click();
		
		
		Thread.sleep(8000);
		select_Monthview();
		
		String payslip = dataTable.getData("General_Data", "Payslip_Type");
		report.updateTestLog("Payslip type selection", "Payslip type selected as:"+payslip , Status.PASS);
		select_payslipFromDropDown(drpdownpayslipType,payslip);
		
		Thread.sleep(3000);
		String filepath = dataTable.getData("General_Data", "file_path");
		report.updateTestLog("File path selection", "File path selected as:"+filepath, Status.PASS);
//		String filepath = "C:\\Users\\806159\\Downloads\\Dubai_Payslip.pdf";
		DeleteFile(filepath);
		Download_Payslip.click();
		report.updateTestLog("Payslip download button selection", "payslip download button is clicked", Status.PASS);
		Thread.sleep(5000);
		Okay_Download.click();
		report.updateTestLog("Password protected message verification", "Message displayed as : your payslip is password protected", Status.PASS);
		Thread.sleep(5000);
        }
		catch(Exception e)
		{
			
		}
	}
	  private void select_payslipFromDropDown(WebElement element, String dropDownvalue) {
		// TODO Auto-generated method stub
		//try {
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.textToBePresentInElement(element, dropDownvalue));
			if (element.isDisplayed() && element.isEnabled()) {
				JavascriptExecutor js = (JavascriptExecutor) driver;
				((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].style.border='2px groove red'", element);
				js.executeScript("arguments[0].style.border=''", element);
				Select dropDown = new Select(element);
				dropDown.selectByVisibleText(dropDownvalue);
				System.out.println("Company ID is selected");
				//report.updateTestLog("payslip type selection", "payslip type selected as :", Status.PASS);
			} else {
				report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
				Assert.fail();
			}
			/*}	
		} catch (Exception exception) {
		
			Assert.fail(exception.getMessage());
			report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
		}*/
	}

	

	public void select_Monthview() 
	  	{
	  		try 
	  		{
	  			Thread.sleep(8000);
	  			MonthView.click();
	  			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
	  			List_Selection(Month_Name, month_xpath, "Calender");
	  			
	  			System.out.println("Month name selected as:" +Month_Name);			
	  			report.updateTestLog("Monthview Calender", "Month selected as:" +Month_Name , Status.PASS);
	  			
	  			
	  		} catch (Exception e) {
	  			// TODO Auto-generated catch block
	  			e.printStackTrace();
	  			report.updateTestLog("Clicking Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
	  		
	  		
	  	}
	  
	public void DeleteFileBeforePaySlipDownload()
	{ 
		String filePath ="C:\\Users\\226346\\Downloads\\Dubai_Payslip.pdf";
		DeleteFile( filePath);
	}
	
		  public void passowordpdf()
          {
                  try
                  {
                  //Open PDF in Chrome driver
       			  // driver.get("file:///D:\\1. MyPay\\1. November -2018\\Test Execution\\Payslip CR\\Payslip.pdf");
                	  Thread.sleep(5000);  
                	  //String filepath = dataTable.getData("General_Data", "file_path");
       			   driver.get("file:///C:\\Users\\226346\\Downloads\\Dubai_Payslip.pdf");
       			   Thread.sleep(5000);
       			
       			   System.out.println("PDF is opened in chrome browser");
       			   report.updateTestLog("Browser selection", "PDF opened in chrome browser", Status.PASS);
                  
                          Thread.sleep(4000);
                          
                        /*  driver.findElement(By.xpath("//*[@id='input']")).sendKeys("2263460501");       
                          driver.findElement(By.xpath("//*[@id='submit']")).click();
                          System.out.println("Password entered and submitted");
                          report.updateTestLog("Keyboard Action", "Enter option is clicked", Status.DONE);*/
                        		  
                        		  Robot rb = new Robot();
                          
                          //Get password from datatable
                          //String pwd = dataTable.getData("General_Data", "Password");
                          String pwd = dataTable.getData("General_Data", "PWD");
                          System.out.println("Password is : " +pwd);
                          report.updateTestLog("Password selection", "Password entered in PDF", Status.PASS);
                          
                           // Enter Passoword
                          
                           StringSelection username = new StringSelection(pwd);
                           
                                  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(username, null);            
                                  rb.keyPress(KeyEvent.VK_CONTROL);
                                  rb.keyPress(KeyEvent.VK_V);
                                  rb.keyRelease(KeyEvent.VK_V);
                                  rb.keyRelease(KeyEvent.VK_CONTROL);
                                  Thread.sleep(5000); 
                                  System.out.println("Password is entered");
                                  report.updateTestLog("Enter Password", "Password is entered", Status.PASS);
                          
                                  //to submit - click enter
                          rb.keyPress(KeyEvent.VK_ENTER);
                          rb.keyRelease(KeyEvent.VK_ENTER);
                          System.out.println("Keyboard Action - Enter Key Press");
                          report.updateTestLog("PDF verification", "Payslip PDF is opened successfully", Status.PASS);
                          Thread.sleep(5000);   
                  }
                  catch(Exception e)
                  {
                          System.out.println("Password entry fails due to : " +e);
                          report.updateTestLog("Enter Password", "Password is not entered due to : " +e, Status.FAIL);
                  }

          
          }
		  
		  
		public void VerifyPayComponentAutoUpdate()
		{   
			try{
			Thread.sleep(1000);	
			String DIname=dataTable.getData("General_Data", "Dname");
			String Cname=dataTable.getData("General_Data", "Cname");		
			EnterDisplayNameAndCompID(DIname,Cname);
			Thread.sleep(1000);
			selectValueFromDropDown(Component_Type,"Earnings");
			String Dname = Display_Name.getAttribute("value");
			Thread.sleep(1000);
			Submit.click();
			Thread.sleep(1000);
			Okay.click();
			Thread.sleep(1000);
			Select_UploadPayslip.click();
			Thread.sleep(1000);
			selectValueFromDropDown(Select_File_Type,"Salary Register");
		    String inputExcelPath = "C:\\Users\\806159\\Downloads\\Dubai_SalaryRegister_Template.xlsx";
		    Thread.sleep(1000);
		   ViewLatestFile(inputExcelPath);	
		   Click_Template.click();
//		   String Dname ="Employee Name";
		   Thread.sleep(1000);
		   System.out.println("check 1");
		   getCellData(inputExcelPath, "Template", 1, Dname);
//			System.out.println("excel value is : "+value);
			
			
			
			}
			catch(Exception e)
            {
				
            }      
		}		
	
	//code to view reports
		
		public boolean isAlertPresent(){
			try{
		    driver.switchTo().alert();
             return true;
			}catch(NoAlertPresentException ex){
	         return false;
			}
		}
		public void ViewAllStatus()
		 {   
			 try{
				 
				 String Year=dataTable.getData("General_Data", "SelectYear");
				 report.updateTestLog("Financial year selection", "Financial year selected as:"+Year, Status.PASS);
			     selectValueFromDropDown(Reports_Financial_YR,Year);
			 /******Checking all status by selecting only year*******/
			 Reports_View.click();
			 System.out.println("view is clicked");
			 report.updateTestLog("View verification", "View button is clicked in reports", Status.PASS);
			 //Thread.sleep(2000);
			 	 
			 //if (table_data.isDisplayed())
			 /*{
				 ToFindall_status("Uploaded","Published","SentBack");
			 }*/
			 		 
			 //report.updateTestLog("report message verification", "Report verfied for the financial year", Status.PASS);
	 
			   
			 if (isAlertPresent())
			 //try
			 {



			                         Thread.sleep(5000);
			                         //report.updateTestLog("Alert message verification", "No data available message displayed", Status.PASS);

			                     Alert alert = driver.switchTo().alert();         
			                     //report.updateTestLog(stepName, stepDescription, stepStatus);



			                     // Capturing alert message.    

			                     //String alertMessage= driver.switchTo().alert().getText();           



			                     // Displaying alert message       



			                     //report.updateTestLog("Alert verification " , "No data available error message displayed", Status.PASS);

			                     Thread.sleep(2000);

			                     // Accepting alert          

			                     alert.accept();

			                     //System.out.println(alertMessage);

			                         }



			                         /*catch (UnhandledAlertException e){Alert alert = driver.switchTo().alert();          



			                         // Capturing alert message.    

			                         String alertMessage= driver.switchTo().alert().getText();         



			                         // Displaying alert message         

			                         report.updateTestLog("Alert - " , alertMessage+" is captured", Status.PASS);

			                         Thread.sleep(2000);

			                         // Accepting alert            

			                         alert.accept();   

			                         System.out.println(alertMessage);

			                         }
*/
			 else if(table_data.isDisplayed())
			 //catch (NoSuchElementException e)
			 {
	ToFindall_status("Uploaded","Published","SentBack");
	
	 WebElement all_status[]={Filter_Uploaded,Filter_Published,Filter_Sentback};
	 int len=all_status.length;
	 System.out.println(len);
	 String Status_data[] = {"Uploaded","Published","SentBack"};
	 int j=1;
	 for(int k=0; k<=len;k++)
	 {
		 //System.out.println(all_status.length+" :size and K is : "+k);
		 Thread.sleep(2000);
		 all_status[k].click();
		 Reports_View.click();
		 Thread.sleep(2000);
		 if(isAlertPresent()){
			 Alert alert = driver.switchTo().alert();
			 Thread.sleep(1000);
			 System.out.println(alert.getText());
			 Thread.sleep(2000);
			 alert.accept();
			 
		 }
		 else if((table_data.isDisplayed()))
		 {
			 //*[@id="paginationReports"]/dir-pagination-controls/ul/li/a[contains(text(),'1')]
			  ToFind_particular_status(Status_data[j]);
			  j++;
		 }
		  else
		  {
			  System.out.println("Verfying uploaded status data having some problem");
			  Assert.fail();
		  }
		  //all_status[k].click();
		  //Thread.sleep(5000);
		  //System.out.println(all_status[k]+"verification comepleted");
		  //report.updateTestLog("Status verification", "Status verification is :"+all_status[k], Status.PASS);
	 }
	 
		 //verifying all the status filter
	     //click to all three buttons
	     //click view button
	  // call to find all status methond
	     

	
}



/*			 else if(isAlertPresent()){
				 Alert alert = driver.switchTo().alert();
				 //String alertmessage = driver.switchTo().alert().getText();
				 //Thread.sleep(4000);
				 //System.out.println(alertmessage);
				 //report.updateTestLog("Report alert verification", "Report alert verification is :" + alertmessage, Status.PASS);
				 //Thread.sleep(4000);
				 //driver.switchTo().alert().accept();
				 alert.accept();*/
			 
			 /*****Checking each status filter for particular year****/
				 
			 }
		 
			 catch(Exception e)
	         {
	                
	         }
		 }
			
		 
		 public void ToFind_particular_status(String value) throws Exception
		 {
			 Thread.sleep(2000);
		    List<WebElement> rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr"));
		   // System.out.println("Row size : "+rows.size());
		    int k=3;
		    for(int i=1;i<=rows.size();i++)
		    {
		      WebElement row = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[4]"));
		      if(row.getText().trim().contains(value))
		      {
		    	  //Highlight green
		    	  HighlightElement_green(row);
		      }
		      else
		      {
		    	  //Highlight Red
		    	  HighlightElement_red(row);
		    	  Assert.fail();
		      }
		      if(rows.size()==i)
		      {
		    	  if(pagination_locator.isDisplayed())
		    	  {	    		  
		    			List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li"));
		    		  	if(pagination_count.size()==k)
		    		  	{
		    		  		
		    		  	}
		    		  	else
		    		  	{
		    			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a"));
		    			 // System.out.println("K value is :"+k);
		    			  if(Page_Number.isEnabled()==false)
		    			  {
		    				  System.out.println("Last button reached");
		    				  break;
		    			  }
		    			  if(Page_Number.isEnabled()==true)
		    			  {   // System.out.println("Page no is displayed");
		    				  driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a")).click();
			    			  k++;  
			    			  /****assigning i value as 0 for the next page table verification*****/
			    			  i=0;
		    			  }
		    			  else
		    			  {
		    				  System.out.println("No more buttons available in Pagination or Button is not enabled");
		    			  } 
		    		  	}
		    		

		    }
		    
		 }
		    }
		 }
		 public void ToFindall_status(String uploaded,String published,String sendback) throws Exception
		 {
			 //if(driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr")).isDisplayed())
			   // {
		    int rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size();
		    System.out.println(rows);
		    	
		    int k=3;
		    for(int i=1;i<=rows;i++)
		    {
		      WebElement row = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[4]"));
		      String status=row.getText();
		      report.updateTestLog("Status verification", "Report status displayed as:"+status, Status.PASS);
		      if(row.getText().trim().contains(uploaded)||row.getText().trim().contains(published)||row.getText().trim().contains(sendback))
		    	  //report.updateTestLog("Upload, Published and sentback records verification", "Upload, Published and sentback records are available", Status.PASS);
		      {
		    	  //Highlight green
		    	  HighlightElement_green(row);
		    	  report.updateTestLog("Highlight verification", "Status highlighted in green:"+ status, Status.PASS);
		      }
		      else
		      {
		    	  //Highlight Red
		    	  HighlightElement_red(row);
		    	  report.updateTestLog("Highlight verification", "Status highlighted in RED:"+ status, Status.FAIL);
				     
		    	  Assert.fail();
		      }
		      if(rows==i)
		      {
		    	  if(pagination_locator.isDisplayed())
		    	  {	   
		    		  	List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li"));
		    		  	/*if(pagination_count.size()==k)
		    		  	{
		    		  		
		    		  	}
		    		  	else
		    		  	{*/
		    			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a"));
		    			 // System.out.println("K value is :"+k);
		    			  if(Page_Number.isEnabled()==false)
		    			  {
		    				  System.out.println("Last button reached");
		    				  break;
		    			  }
		    			  if(Page_Number.isEnabled()==true)
		    			  {   //System.out.println("Page no is displayed");
		    				  driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a")).click();
			    			  k++;  
			    			  /****assigning i value as 0 for the next page table verification*****/
			    			  i=0;
		    			  }}
		    			  else
		    			  {
		    				  System.out.println("No more buttons available in Pagination or Button is not enabled");
		    			  } 
		    		  	}
			    	
			    	  	  
		      	}
		     /* else
		    	{
		    		//System.out.println("No other pages available herafter");
		    	}*/  
		      //int rows_final=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size();
		      //rows=rows_final;
		    }
		    
/*		    else
		    {
		    	System.out.println("No records available ");

		    		    }*/
		 
	 
	 public void HighlightElement_red( WebElement element)  {
			JavascriptExecutor js = (JavascriptExecutor) driver;

			try {
				
				js.executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].setAttribute('style', 'background: red; border: 2px solid red;');",element);
				Thread.sleep(100);
				js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			
		}
		public void HighlightElement_green( WebElement element) throws Exception {
			JavascriptExecutor js = (JavascriptExecutor) driver;

			try {
				js.executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].setAttribute('style', 'background: green; border: 2px solid red;');",element);
				Thread.sleep(100);
				js.executeScript("arguments[0].scrollIntoView(true);", element);
				//Thread.sleep(2000);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
			
		}
	 
	public void SelectStatus()
	{
		driver.findElement(By.xpath("//span[(contains(text(),'+SType+'))]")).click();//span[(contains(text(),'Uploaded'))]"
				
	}
		
public void DownloadPaySlip_validation()
	{  
		
		report.addTestLogSubSection("Download payslip validation");
		try
        {
		Thread.sleep(6000);	
		View_PaySlip_Tab.click();
		report.updateTestLog("View payslip tab verification", "View payslip tab clicked", Status.PASS);
		String AssociateID = dataTable.getData("General_Data", "AssociateID");
		report.updateTestLog("Associate ID selection", "Payslip download for associate is :"+AssociateID, Status.PASS);
		Thread.sleep(3000);	
		Associate_ID.sendKeys(AssociateID);
		View_PaySlip.click();
		
		
		Thread.sleep(8000);
		//select_Monthview();
		select_Month_year_decade();
		String payslip = dataTable.getData("General_Data", "Payslip_Type");
		report.updateTestLog("Payslip type selection", "Payslip type selected as:"+payslip , Status.PASS);
		select_payslipFromDropDown(drpdownpayslipType,payslip);
		
		//Payslip_Field_Validation();
		
		
		Thread.sleep(3000);
		String filepath = dataTable.getData("General_Data", "file_path");
		report.updateTestLog("File path selection", "File path selected as:"+filepath, Status.PASS);
//		String filepath = "C:\\Users\\806159\\Downloads\\Dubai_Payslip.pdf";
		//Verify the download
        /*File theNewestFile = null;
        File dir = new File(filepath);
     String ext = ""+extension+"";
     FileFilter fileFilter = new WildcardFileFilter("*." + ext);
     File[] files = dir.listFiles(fileFilter);

     if (files.length > 0) {
         *//** The newest file comes first **//*
         Arrays.sort(files, LastModifiedFileComparator.LASTMODIFIED_REVERSE);
         theNewestFile = files[0];
     }
          
                 FileInputStream fs = new FileInputStream(theNewestFile);
                 
                 String filename1 = theNewestFile.getName();
                 
            System.out.println("File Downloaded is: " +filename1);
            report.updateTestLog("Downloaded File Name", "File Downloaded is: " +filename1, Status.DONE);*/

		DeleteFile(filepath);
		Download_Payslip.click();
		
		report.updateTestLog("Payslip download button selection", "payslip download button is clicked", Status.PASS);
		Thread.sleep(5000);
		Okay_Download.click();
		report.updateTestLog("Password protected message verification", "Message displayed as : your payslip is password protected", Status.PASS);
		Thread.sleep(5000);
        }
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}

public void Payslip_Field_Validation()
{

	try 
	{
		String BS= dataTable.getData("General_Data", "Basic Salary");
		System.out.println(BS);
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.visibilityOf(Basic_Salary));
		if(Basic_Salary.isDisplayed())
		{
			System.out.println("Basic Salary is displayed in UI");
		}
		
		else
		{
			System.out.println("Basic Salary is not displayed in UI");
		}
		//clickOnButton(view_payslip_button);
	} catch (Exception e) {
		e.printStackTrace();
	}
}


public void select_Month_year_decade() 
{
	report.addTestLogSubSection("Month_Year_Decade selection");
	try 
	{
		Thread.sleep(8000);
        MonthView.click();
        System.out.println("calendar icon clicked");
        report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
        String Month2 = dataTable.getData("General_Data", "Decade");
        System.out.println("Decade selected as "+Month2);
        report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

        //Click on Year Header
        driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
        Thread.sleep(5000);
        driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
        Thread.sleep(5000);
 //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
        driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
        Thread.sleep(5000);
        //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
        //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
        //Thread.sleep(5000);
        //Select Year
        String Year1 = dataTable.getData("General_Data", "Year");
        
        Thread.sleep(2000);
 //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
        driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
        Thread.sleep(2000);
        System.out.println("Year selected as"+Year1);
        report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
        Thread.sleep(3000);
        //Select Month
        String Month1 = dataTable.getData("General_Data", "MonthSelection");
        
        Thread.sleep(2000);
 driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
        System.out.println("Month selected as "+Month1);
        report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

        Thread.sleep(2000);

		
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
	
	
}

public void passowordpdf_Payslip()
          {
			  
			  report.addTestLogSubSection("Payslip Password validation");
                  try
                  {
                  //Open PDF in Chrome driver
       			  // driver.get("file:///D:\\1. MyPay\\1. November -2018\\Test Execution\\Payslip CR\\Payslip.pdf");
                	  Thread.sleep(5000);  
                	  //String filepath = dataTable.getData("General_Data", "file_path");
                	 /* String DwnFilePath= dataTable.getData("General_Data", "file_path");
                	  System.out.println("Download filepath given is: " +DwnFilePath);
                      report.updateTestLog("Download filepath", "Download filepath is:"+DwnFilePath, Status.PASS);
          		    File file= new File(DwnFilePath);
          		  Thread.sleep(4000);
      			boolean flag= false;
      			if(file.exists())
      			{
      			flag= true;
      			}
      			for (int i = 0; i < 10; i++) {
					
      		    	if(file.exists())
      		    	{
      		    	file.delete();
      		    	}
      				}*/
                	  String country = dataTable.getData("General_Data", "Payslip_Country");
                	  String Month = dataTable.getData("General_Data", "Payslip_Month");
                	  String Year = dataTable.getData("General_Data", "Payslip_Year");
       			   driver.get("file:///C:\\Users\\226346\\other\\Downloads\\"+country+"_Payslip_"+Month+"_"+Year+".pdf");
       			   Thread.sleep(5000);
       			
       			   System.out.println("PDF is opened in chrome browser");
       			   report.updateTestLog("Browser selection", "PDF opened in chrome browser", Status.PASS);
                  
                          Thread.sleep(4000);
                          
                        /*  driver.findElement(By.xpath("//*[@id='input']")).sendKeys("2263460501");       
                          driver.findElement(By.xpath("//*[@id='submit']")).click();
                          System.out.println("Password entered and submitted");
                          report.updateTestLog("Keyboard Action", "Enter option is clicked", Status.DONE);*/
                        		  
                        		  Robot rb = new Robot();
                          
                          //Get password from datatable
                          //String pwd = dataTable.getData("General_Data", "Password");
                          String pwd = dataTable.getData("General_Data", "PWD");
                          System.out.println("Password is : " +pwd);
                          report.updateTestLog("Password selection", "Password entered in PDF", Status.PASS);
                          
                           // Enter Passoword
                          
                           StringSelection username = new StringSelection(pwd);
                           
                                  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(username, null);            
                                  rb.keyPress(KeyEvent.VK_CONTROL);
                                  rb.keyPress(KeyEvent.VK_V);
                                  rb.keyRelease(KeyEvent.VK_V);
                                  rb.keyRelease(KeyEvent.VK_CONTROL);
                                  Thread.sleep(5000); 
                                  System.out.println("Password is entered");
                                  report.updateTestLog("Enter Password", "Password is entered", Status.PASS);
                          
                                  //to submit - click enter
                          rb.keyPress(KeyEvent.VK_ENTER);
                          rb.keyRelease(KeyEvent.VK_ENTER);
                          System.out.println("Keyboard Action - Enter Key Press");
                          report.updateTestLog("PDF verification", "Payslip PDF is opened successfully", Status.PASS);
                          Thread.sleep(5000);   
                  }
                  catch(Exception e)
                  {
                          System.out.println("Password entry fails due to : " +e);
                          report.updateTestLog("Enter Password", "Password is not entered due to : " +e, Status.FAIL);
                  }

          
          } 
	public void checking_alert()
	{
		try {
			//System.out.println("Check -1");
			Thread.sleep(8000);
			Alert alert =driver.switchTo().alert();
			//Thread.sleep(8000);
			//System.out.println("Check -2");
			//Thread.sleep(12000);
			//alert.getText();
			Thread.sleep(5000);
			alert.accept();
			Thread.sleep(5000);
			//report.updateTestLog("Alert message verification", "Alert message displayed as :"+alert.getText(), Status.PASS);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
		}
		
	} 
	
}
package pages;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.List;
import java.util.NoSuchElementException;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.UnhandledAlertException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.cognizant.framework.Status;

import supportlibraries.ScriptHelper;

public class HomePage_Australia extends MasterPage_Aus {


	public HomePage_Australia(ScriptHelper scriptHelper) {
		super(scriptHelper);
		// TODO Auto-generated constructor stub
	}


	public String country_setting;
	
	public String downloadPath = "C:\\Users\\806159\\Downloads";
	
	@FindBy(xpath="//div[contains(@class, 'dropdown')  and contains(@class,'btn-group')]")
	public WebElement country_dropdown_button; 
	

	public String country_list_xpath="//a[contains(@class,'ng-binding')]";
	
	@FindBy(id="companyselreports")
	public WebElement Company_dropdown_field_Reports;
	
	@FindBy(xpath="//*[@id='monthviewPage']")
	public WebElement MonthView;
	
	@FindBy(xpath="//*[@id='associateUploadTypeDropDown']") 
	public WebElement drpdownpayslipType;
	
	@FindBy(xpath="//*[@id='addEffectivedate']")
	public WebElement Effectivedate;
	
	@FindBy(xpath = "//input[@id='addcomponentname']")
	public WebElement Component_Displayname;
	
	@FindBy(xpath = "//div[@id='addcomponentModalContainer']//button[@ng-click='EditComponentsubmit()']")
	public WebElement EDITcomponent;
	
	@FindBy(xpath="//button[contains(@id,'uploadmessage')]")
	public WebElement OKAY_button;
	
	@FindBy(xpath="//div[contains(@class,'epayManagePayslipLogo')]")
	public WebElement Manage_payslip_menu; 

	@FindBy(xpath = "//label[contains(text(),'Manage Payslip')]")
	public WebElement Manage_PaySlip;
	
	@FindBy(xpath = "//select[contains(@id,'companyselpayslip')]")
	public WebElement Select_Company;
	
	@FindBy(xpath = "//a[contains(text(),'Upload Pay Slip')]")
	public WebElement Select_UploadPayslip;
	
	@FindBy(xpath = "//select [@id='filetypeselpayslip']")
	public WebElement Select_File_Type;
	
	@FindBy(xpath = "//input[contains(@id,'get_file')]")
	public WebElement Browse;
	
	@FindBy(xpath = "//a[contains(@id,'templateDownloadLink')]")
	public WebElement Click_Template;
	
	
	
	@FindBy(xpath = "//a[contains(text(),'Manage Components')]")
	public WebElement Manage_Components;
	
	@FindBy(xpath = "//input[@id='ComponentIDinput']")
	public WebElement Component_ID;
	
	@FindBy(xpath = "//input[@id='DisplayNameinput']")
	public WebElement Display_Name;
	
	@FindBy(xpath = "//select[@id='componentselect']")
	public WebElement Component_Type;
	
	@FindBy(xpath = "//*[@id='dropdownMenu0']")
	public WebElement Publish_Menu;
	
	@FindBy(xpath = "//li[contains(text(),'PUBLISH')]")
	public WebElement Publish_Publish;
	
	@FindBy(xpath = "//li[contains(text(),'SEND BACK')]")
	public WebElement Publish_Sendback;
	
	@FindBy(xpath = "//button[contains(text(),'Send Back')]")
	public WebElement Publish_Sendback_Button;
	
	@FindBy(xpath = "//a[contains(text(),'Publish/ Send Back')]")
	public WebElement PublishAndSendback;
	
	@FindBy(xpath = "//input[contains(@id,'sendbackreason')]")
	public WebElement Send_Back_Reason;
	
	@FindBy(xpath = "//div[@id='addcomponentModalContainer']//button[@ng-click='submitComponent()']")
	public WebElement Submit;
	
	@FindBy(xpath = "//button[contains(@id,'uploadmessage')]")
	public WebElement Okay;
	
	@FindBy(xpath = "//a[contains(text(),'Reports')]")
	public WebElement Reports;
	
	@FindBy(xpath = "//span[contains(text(),'Uploaded')]")
	public WebElement Reports_Uploaded;
	
	@FindBy(xpath = "//span[contains(text(),'Published')]")
	public WebElement Reports_Published;
	
	@FindBy(xpath = "//span[contains(text(),'Sentback')]")
	public WebElement Reports_Sentback;
	
	@FindBy(xpath = "//input[contains(@id,'reportViewbtn')]")
	public WebElement Reports_View;
	
	@FindBy(xpath = "//select[contains(@id,'financialyrselreports')]")
	public WebElement Reports_Financial_YR;
	
	@FindBy(xpath = "//select[contains(@id,'companyselreports')]")
	public WebElement Reports_Company;
	
	/*@FindBy(xpath = "//div[contains(@title,'Download File')]")
	public WebElement Reports_Download;*/
	
	@FindBy(xpath = "//*[@id='reports']/div/div[2]/div/div[5])]")
	public WebElement Reports_Download;
	
	@FindBy(xpath = "//div[@id='paginationReports']/dir-pagination-controls/ul ")
	public WebElement Reports_Pagination;
	
	@FindBy(xpath = "//span[(contains(text(),'Uploaded'))]")
	public WebElement Filter_Uploaded;
	
	@FindBy(xpath = "//span[(contains(text(),'Published'))]")
	public WebElement Filter_Published;
	
	@FindBy(xpath = "//span[(contains(text(),'Sentback'))]")
	public WebElement Filter_Sentback;
	
	@FindBy(xpath = "//*[@id='paginationReports']/dir-pagination-controls/ul")
	//*[@id="paginationReports"]/dir-pagination-controls/ul
	public WebElement pagination_locator;
	
	@FindBy(xpath = "//*[@id='paginationReports']/dir-pagination-controls/ul/li[8]/a/div")
	public WebElement pagination_right;
	
	@FindBy(id = "dirPaginationLeft;")
	public WebElement pagination_left;
	
	@FindBy(xpath = "//table[@id='reportstbl']/tbody/tr")
	public WebElement table_data;
	
	public String month_xpath="//span[contains(@class,'month')]";
	
	@FindBy(xpath = "//input[contains(@id,'associateIdInput')]")
	public WebElement Associate_ID;
	
	@FindBy(xpath = "//button[contains(@class,'btn btn-success submit')] [contains(@ng-click,'viewAssociatePayslip()')]")
	public WebElement View_PaySlip;
	
	
	@FindBy(xpath = "//a[contains(text(),'View Payslip')]")
	public WebElement View_PaySlip_Tab;
	
	@FindBy(xpath = "//div[contains(@class,'downloadicon')] [@ng-click='downloadPayslip()']")
	public WebElement Download_Payslip;
	
	@FindBy(xpath = "//button[contains(@id,'btnokaydownload')]")
	public WebElement Okay_Download;
	
	@FindBy(xpath = "//input[contains(@class,'emailTriggerIMG')]")
	public WebElement Reports_Email; 
	
	

	
	
//	public void select_country(String country) 
//	{
//		try 
//		{
//			clickOnButton(country_dropdown_button);
//			String country_name= dataTable.getData("General_Data", "country");
//			System.out.println("Country name:" +country_name);
//			List_Selection(country_name, country_list_xpath, "Country");
//			
//			report.updateTestLog("Country selection", "Selected Country : " +country_name, Status.DONE);
//			
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//	}
//	public void All_country_selection(String country) 
//	{
//		try 
//		{
//			clickOnButton(country_dropdown_button);
//			System.out.println("Country name:" +country);
//			List_Selection(country, country_list_xpath, "Country");
//			
//			report.updateTestLog("Country selection", "Selected Country : " +country, Status.DONE);
//			
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		
//		
//	}
//	public void select_Manage_payslip() 
//	{
//		try 
//		{
//			clickOnButton(Manage_payslip_menu);
//			report.updateTestLog("Manage payslip", "Manage payslipe selected ", Status.DONE);
//			
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		
//		
//	}
	

	
	public void E_payHomepage() 
	{
		try 
		{
			Thread.sleep(3000);
			select_country();
			select_Manage_payslip();
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	
	public void ViewCtsInDropdown()
	{
		Select select = new Select(driver.findElement(By.id("companyselpayslip")));
		WebElement sel = driver.findElement(By.id("companyselpayslip"));
		List<WebElement> lists = sel.findElements(By.tagName("option"));
		    for(WebElement element: lists)  
		    {
		    	 if(element.getText().contains("CTS"))
		    	 {
		    		 try {
						Thread.sleep(2000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		        	System.out.println("Option : CTS is displayed in company dropdown");
		        	report.updateTestLog("Company ID verification", "CTS is displayed in company dropdown", Status.PASS);
		  
		        
		    }
        
       
           
               else
        {
        	System.out.println("Option : CTS is Not displayed in company dropdown ---> BUG");
        }
	}
}
	
public void SelectCtsFromDropdown()
{
	try {
		selectValueFromDropDown(Select_Company,"CTS");
		report.updateTestLog("Selecting CTS from Dropdown", "Company ID is selected as CTS" , Status.PASS);
		System.out.println("CTS selection");
	} catch (Exception e) {
		e.printStackTrace();
	}
}
	
// Country selection
	public void select_country() 
	{
		report.addTestLogSubSection("Country selection");
		try 
		{   
			Thread.sleep(5000);
			WebElement count=driver.findElement(By.xpath("//button[@id='countrySelect']"));
			JavascriptExecutor js=(JavascriptExecutor)driver;
			js.executeScript("arguments[0].click();", count);
			//Thread.sleep(5000);
			//clickOnButton(country_dropdown_button);
			System.out.println("Country dropdown selected");
			String country_setting=properties.getProperty("country_setting");
			/*if( country_setting.contains("True"))
			{
				Thread.sleep(3000);
				String Default_country=properties.getProperty("Default_country");
				List_Selection(Default_country, country_list_xpath, "Country");
				System.out.println(" global Country name:" +Default_country);
				report.updateTestLog("Country selection", "Selected Country : " +Default_country, Status.PASS);
			}*/
			//else
			//{
				Thread.sleep(3000);
				String country_name= dataTable.getData("General_Data", "Country");
				List_Selection(country_name, country_list_xpath, "country");
				System.out.println("Country name:" +country_name);
				report.updateTestLog("Country selection", "Selected Country : " +country_name, Status.DONE);
			//}
			
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	// Manage payslip tile selection
	public void select_Manage_payslip() 
	{
		report.addTestLogSubSection("Manage payslip tile selection");
		try 
		{
			Thread.sleep(8000);
			clickOnButton(Manage_PaySlip);
			System.out.println("Manage payslip selected");
			report.updateTestLog("Manage payslip selection", "Manage payslip selected successfully", Status.PASS);
			//report.updateTestLog("Manage payslip", "Manage payslip selected ", Status.DONE);
			Thread.sleep(5000);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	// as an admin trying to select the company ID
	public void Company_IDselection() 
	{
		report.addTestLogSubSection("Company ID selection");
		try 
		{
			Thread.sleep(4000);
			String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
			Thread.sleep(3000);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	public void Company_IDselection_Reports() 
	{
		try 
		{
			Thread.sleep(4000);
			String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field2, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
			Thread.sleep(3000);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	@FindBy(id="companyselpayslip")
	public WebElement Company_dropdown_field;

	/*@FindBy(xpath="//div[@id='reports']//select[@id='companyselpayslip']")
	public WebElement Company_dropdown_field1;*/
	
	@FindBy(xpath="//div[@id='addcomponentModalContainer']//select[@id='companyselpayslip']")
	public WebElement Company_dropdown_field1;
	
	@FindBy(xpath="//div[@id='reports']//select[@id='companyselreports']")
	public WebElement Company_dropdown_field2;
	
	
	private int k;

	private Object count;

	private Object i;
	
      public void ViewCtsInDropdown(String companyid) throws Exception
	{
    	  report.addTestLogSubSection("Company dropdown field validation");
    	  //try
    	  //{
 		  WebElement company_dropdown=driver.findElement(By.id("companyselpayslip"));
 		  Thread.sleep(5000);
 		  System.out.println("Select CTS");
    		selectValueFromDropDown(company_dropdown ,"CTS");
    		System.out.println("CTS is selected in company dropdown");
    		report.updateTestLog("Verify Company_dropdown_field"," CTS is selected in dropdown", Status.PASS);
    		/*selectValueFromDropDown(Company_dropdown_field, "Sasfocus");
    		report.updateTestLog("Verify Company_dropdown_field"," Sasfocus is selected in dropdown", Status.PASS);
    		System.out.println("Select Sasfocus");*/
    		//Select select = new Select(driver.findElement(By.id("companyselpayslip")));
		
		
		//WebElement sel = driver.findElement(By.id("companyselpayslip"));
		
		
		//To get size of dropdown option
//		Thread.sleep(3000);
//		
//		int size = driver.findElements(By.xpath("//*[@id='companyselpayslip']/option")).size();
//	//	int size = driver.findElements(By.xpath("//*[@id='UploadForm']/div/div[1]/div[2]/select/option")).size();
//		System.out.println("Dropdown size is: " +size);
//		
//		for (int i=1; i<=size;i++)
//		{
//			//to get dropdown values 
//			String dropdownvalue = driver.findElement(By.xpath("//*[@id='companyselpayslip']/option["+i+"]")).getText();
//			System.out.println("Dropdown value "+i+" is: " +dropdownvalue);
//			
//			if(dropdownvalue.equalsIgnoreCase(companyid))
//			{
//				System.out.println("Expected dropdown option is displayed");
//				report.updateTestLog("Verify "+dropdownvalue+"",""+dropdownvalue+" is selected in dropdown", Status.PASS);
//				
//				//Select value in dropdown
//				driver.findElement(By.xpath("//*[@id='companyselpayslip']/option["+i+"]")).click();
//				System.out.println(""+dropdownvalue+" is selected in dropdown");
//				//report.updateTestLog("Verify "+dropdownvalue+"", ""+dropdownvalue+" is selected in dropdown", Status.PASS);
//				
//				break;
//			}
//			else
//			{
//				 System.out.println("Dropdown option validation failed due to: " );
//	    		 report.updateTestLog("Verify Dropdown", "Dropdown option validation failed :  " , Status.FAIL);	
//			}
//		}
    	  //}
    	  /*catch(Exception e)
    	  {
    		  System.out.println("Dropdown option validation failed due to: " +e);
    		  report.updateTestLog("Verify Dropdown", "Dropdown option validation failed :  " +e.getMessage(), Status.FAIL);
    		  
    	  }*/
    	  
		/*List<WebElement> lists = sel.findElements(By.tagName("option"));
		    for(WebElement element: lists)  
		    {
		    	 if(element.getText().contains("CTS"))
		    	 {
		    		 String companyid = element.getText();
		    		 System.out.println("Company id in dropdown is: " +companyid);
		    		 
		    		 try {
						Thread.sleep(2000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		        	System.out.println("Option : CTS is displayed in company dropdown");
		        //	report.updateTestLog("Country selection", "Selected Country : " +Default_country, Status.DONE);
		  
		        
		    }    
		    
	
           
             
  	        else
        {
        	System.out.println("Option : CTS is Not displayed in company dropdown ---> BUG");
        }
		    }*/
	}
	
      
      public void ViewSasfocusInDropdown(String companyid) throws Exception
  	{
    	  report.addTestLogSubSection("Company dropdown field validation");
      	  //try
      	  //{
   		  WebElement company_dropdown=driver.findElement(By.id("companyselpayslip"));
   		  Thread.sleep(5000);
   		  System.out.println("Select SaaSfocus");
      		/*selectValueFromDropDown(company_dropdown ,"CTS");
      		System.out.println("CTS is selected in company dropdown");
      		report.updateTestLog("Verify Company_dropdown_field"," CTS is selected in dropdown", Status.PASS);
*/      		selectValueFromDropDown(Company_dropdown_field, "SaaSfocus");
      		report.updateTestLog("Verify Company_dropdown_field"," SaaSfocus is selected in dropdown", Status.PASS);
      		System.out.println("Select Sasfocus");
      		//Select select = new Select(driver.findElement(By.id("companyselpayslip")));
  		
  		
  		//WebElement sel = driver.findElement(By.id("companyselpayslip"));
  		
  		
  		//To get size of dropdown option
//  		Thread.sleep(3000);
//  		
//  		int size = driver.findElements(By.xpath("//*[@id='companyselpayslip']/option")).size();
//  	//	int size = driver.findElements(By.xpath("//*[@id='UploadForm']/div/div[1]/div[2]/select/option")).size();
//  		System.out.println("Dropdown size is: " +size);
//  		
//  		for (int i=1; i<=size;i++)
//  		{
//  			//to get dropdown values 
//  			String dropdownvalue = driver.findElement(By.xpath("//*[@id='companyselpayslip']/option["+i+"]")).getText();
//  			System.out.println("Dropdown value "+i+" is: " +dropdownvalue);
//  			
//  			if(dropdownvalue.equalsIgnoreCase(companyid))
//  			{
//  				System.out.println("Expected dropdown option is displayed");
//  				report.updateTestLog("Verify "+dropdownvalue+"",""+dropdownvalue+" is selected in dropdown", Status.PASS);
//  				
//  				//Select value in dropdown
//  				driver.findElement(By.xpath("//*[@id='companyselpayslip']/option["+i+"]")).click();
//  				System.out.println(""+dropdownvalue+" is selected in dropdown");
//  				//report.updateTestLog("Verify "+dropdownvalue+"", ""+dropdownvalue+" is selected in dropdown", Status.PASS);
//  				
//  				break;
//  			}
//  			else
//  			{
//  				 System.out.println("Dropdown option validation failed due to: " );
//  	    		 report.updateTestLog("Verify Dropdown", "Dropdown option validation failed :  " , Status.FAIL);	
//  			}
//  		}
      	  //}
      	  /*catch(Exception e)
      	  {
      		  System.out.println("Dropdown option validation failed due to: " +e);
      		  report.updateTestLog("Verify Dropdown", "Dropdown option validation failed :  " +e.getMessage(), Status.FAIL);
      		  
      	  }*/
      	  
  		/*List<WebElement> lists = sel.findElements(By.tagName("option"));
  		    for(WebElement element: lists)  
  		    {
  		    	 if(element.getText().contains("CTS"))
  		    	 {
  		    		 String companyid = element.getText();
  		    		 System.out.println("Company id in dropdown is: " +companyid);
  		    		 
  		    		 try {
  						Thread.sleep(2000);
  					} catch (InterruptedException e) {
  						// TODO Auto-generated catch block
  						e.printStackTrace();
  					}
  		        	System.out.println("Option : CTS is displayed in company dropdown");
  		        //	report.updateTestLog("Country selection", "Selected Country : " +Default_country, Status.DONE);
  		  
  		        
  		    }    
  		    
  	
             
               
    	        else
          {
          	System.out.println("Option : CTS is Not displayed in company dropdown ---> BUG");
          }
  		    }*/
  	}
  	  
	public void select_Reports() 
	{
		try 
		{
			
			report.addTestLogSubSection("Reports tab selection");
			clickOnButton(Reports);
			report.updateTestLog("Reports tab selection", "reports tab selected ", Status.DONE);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	
	public void Select_Manage_Components()
	{
		try 
		{
			Thread.sleep(2000);
//			WebDriverWait wait = new WebDriverWait(driver, 15);
//			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//a[contains(text(),'Manage Components')])")));
            //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[contains(text(),'Manage Components')])")));
			Manage_Components.click();
			report.updateTestLog("Manage Components", "Manage Components selected ", Status.DONE);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void Verify_Component_ID(String Text)
	{
	try 
	{  
		Thread.sleep(2000);
		Component_ID.sendKeys(Text);
		
		if(Component_ID.isEnabled()|| Component_ID.getText().equals(Text))
		{
			System.out.println("Componenet id field is in enabled and user will be able to provide ID");
		}
		
	} catch (Exception e) {
		
		e.printStackTrace();
	}
		
	}
	
	public void Verify_Display_Name()
	{
		try {
			Thread.sleep(2000);
			String Text= dataTable.getData("General_Data", "DisplayName");
			Display_Name.sendKeys(Text);

			if(Display_Name.isEnabled()|| Display_Name.getText().equals(Text))
			{
				System.out.println("Display field is in enabled and user will be able to provide Display name ");
			}
		} catch (InterruptedException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
	
	}
	
	
	
	
	public void ViewComponentTypeInDropdown() throws InterruptedException
	{  try{
		
		String[] exp = {"Select","Earnings","Deductions","Employer Contribution" };
		WebElement dropdown = driver.findElement(By.id("componentselect"));  
        Select select = new Select(dropdown);  
        List<WebElement> options = select.getOptions();  
        for(WebElement we:options)  
        {  
         for (int i=0; i<exp.length; i++){
             if (we.getText().equals(exp[i])){
             System.out.println(we.getText()+ " element is displayed");
             } 
           
         }
         }
	}
         catch (Exception e) {
 		e.printStackTrace();
         }
	}
        
	
	public void SelectComponentTpFromDropdown()
	{
		try {
			selectValueFromDropDown(Component_Type,"Earnings");
			Select dropdown = new Select(driver.findElement(By.xpath("//select[contains(@id,'componentselect')]")));
			WebElement option = dropdown.getFirstSelectedOption();
			String text = option.getText();
			if(text.equals("Earnings"))
			{
				System.out.println("Selected Option   "+option.getText()+"   option is selected");
			}
			else
			{
				System.out.println("Failure:As no option is selected");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void EnterDisplayNameAndCompID(String ComponentID, String DisplayName)
	{
		Component_ID.sendKeys(ComponentID);
		Display_Name.sendKeys(DisplayName);
	}
	
	public void SubmitComponent_Deductions() 
	{
		
		report.addTestLogSubSection("Manage Component Submit validation");
		try {
			
			//clicks on manage components tab
  		  driver.findElement(By.xpath("//*[@id='AdminTab6']/a")).click();
  		  System.out.println("Manage components tab is clicked");
  		  report.updateTestLog("Click on Manage components tab", "Manage components tab is clicked", Status.PASS);
  		  Thread.sleep(9000);
  		  
			//clickOnButton(Addcomponent);
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
  		  
  		  Thread.sleep(5000);
			
			/*String company = dataTable.getData("General_Data" , "CompanyID");
  			selectValueFromDropDown(Company_dropdown_field1, company);
  			System.out.println("Company id selected as:"+company);
  			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
			Thread.sleep(1000);
			String E_ComponentID = dataTable.getData("General_Data", "E_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+E_ComponentID, Status.PASS);
            String E_DisplayName =dataTable.getData("General_Data", "E_DisplayName");
            report.updateTestLog("Component ID selection", "Component ID selected as "+E_DisplayName, Status.PASS);
            EnterDisplayNameAndCompID( E_ComponentID, E_DisplayName);
			Thread.sleep(2000);
			selectValueFromDropDown(Component_Type,"Earnings");
			Submit.click();
			Thread.sleep(3000);
			Okay.click();
			System.out.println("Component with the component type as Earnings is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Earnings and submitted successfully", Status.PASS);
			
			*/
			

			/*//clickOnButton(Addcomponent);
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
  		  
  		  Thread.sleep(5000);*/
  		  
  		String company1 = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field1, company1);
			System.out.println("Company id selected as:"+company1);
			report.updateTestLog("Verify Company_dropdown_field"," "+company1+" is selected in dropdown", Status.PASS);
		Thread.sleep(1000);
			//Adding with type as Deductions
			Thread.sleep(2000);
			//selectValueFromDropDown(Select_Company,"CTS");
			String D_ComponentID =dataTable.getData("General_Data", "D_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+D_ComponentID, Status.PASS);
            String D_DisplayName =dataTable.getData("General_Data", "D_DisplayName");
            report.updateTestLog("Component ID selection", "Component ID selected as "+D_DisplayName, Status.PASS);
			EnterDisplayNameAndCompID( D_ComponentID, D_DisplayName);
			selectValueFromDropDown(Component_Type,"Deductions");
			Submit.click();
			Thread.sleep(3000);
			Okay.click();
			System.out.println("Component with the component type as Deductions is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Deductions and submitted successfully", Status.PASS);

			

			/*//clickOnButton(Addcomponent);
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
  		  
  		  Thread.sleep(5000);
  		String company2 = dataTable.getData("General_Data" , "CompanyID");
		selectValueFromDropDown(Company_dropdown_field1, company2);
		System.out.println("Company id selected as:"+company2);
		report.updateTestLog("Verify Company_dropdown_field"," "+company2+" is selected in dropdown", Status.PASS);
			//Adding component with type as Employer Contribution
			Thread.sleep(2000);
			//selectValueFromDropDown(Select_Company,"CTS");
			String EC_ComponentID =dataTable.getData("General_Data", "Ec_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+EC_ComponentID, Status.PASS);
			String EC_DisplayName =dataTable.getData("General_Data", "Ec_DisplayName");
			report.updateTestLog("Component ID selection", "Component ID selected as "+EC_DisplayName, Status.PASS);
			EnterDisplayNameAndCompID( EC_ComponentID, EC_DisplayName);
			selectValueFromDropDown(Component_Type,"Employer Contribution");
			Submit.click();
			Thread.sleep(3000);
			Okay.click();
			System.out.println("Component with the component type as Employer Contribution is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Employer Contribution and submitted successfully", Status.PASS);
*/
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			
		}	
	}
	
	// to select the Earnings dropdown in component type
	public void SubmitComponent_earnings() 
	{
		
		report.addTestLogSubSection("Manage Component Submit validation");
		try {
			
			//clicks on manage components tab
  		  driver.findElement(By.xpath("//*[@id='AdminTab6']/a")).click();
  		  System.out.println("Manage components tab is clicked");
  		  report.updateTestLog("Click on Manage components tab", "Manage components tab is clicked", Status.PASS);
  		  Thread.sleep(9000);
  		  
			//clickOnButton(Addcomponent);
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
  		  
  		  Thread.sleep(5000);
			
			String company = dataTable.getData("General_Data" , "CompanyID");
  			selectValueFromDropDown(Company_dropdown_field1, company);
  			System.out.println("Company id selected as:"+company);
  			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
			Thread.sleep(1000);
			String E_ComponentID = dataTable.getData("General_Data", "E_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+E_ComponentID, Status.PASS);
            String E_DisplayName =dataTable.getData("General_Data", "E_DisplayName");
            report.updateTestLog("Component ID selection", "Component ID selected as "+E_DisplayName, Status.PASS);
            EnterDisplayNameAndCompID( E_ComponentID, E_DisplayName);
			Thread.sleep(2000);
			selectValueFromDropDown(Component_Type,"Earnings");
			Submit.click();
			Thread.sleep(3000);
			Okay.click();
			System.out.println("Component with the component type as Earnings is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Earnings and submitted successfully", Status.PASS);
			
			
			

			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
  		  
  		  Thread.sleep(5000);
  		  
  		/*String company1 = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field1, company1);
			System.out.println("Company id selected as:"+company1);
			report.updateTestLog("Verify Company_dropdown_field"," "+company1+" is selected in dropdown", Status.PASS);
		Thread.sleep(1000);
			//Adding with type as Deductions
			Thread.sleep(2000);
			//selectValueFromDropDown(Select_Company,"CTS");
			String D_ComponentID =dataTable.getData("General_Data", "D_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+D_ComponentID, Status.PASS);
            String D_DisplayName =dataTable.getData("General_Data", "D_DisplayName");
            report.updateTestLog("Component ID selection", "Component ID selected as "+D_DisplayName, Status.PASS);
			EnterDisplayNameAndCompID( D_ComponentID, D_DisplayName);
			selectValueFromDropDown(Component_Type,"Deductions");
			Submit.click();
			Thread.sleep(3000);
			Okay.click();
			System.out.println("Component with the component type as Deductions is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Deductions and submitted successfully", Status.PASS);
*/
			

			/*//clickOnButton(Addcomponent);
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
  		  
  		  Thread.sleep(5000);
  		String company2 = dataTable.getData("General_Data" , "CompanyID");
		selectValueFromDropDown(Company_dropdown_field1, company2);
		System.out.println("Company id selected as:"+company2);
		report.updateTestLog("Verify Company_dropdown_field"," "+company2+" is selected in dropdown", Status.PASS);
			//Adding component with type as Employer Contribution
			Thread.sleep(2000);
			//selectValueFromDropDown(Select_Company,"CTS");
			String EC_ComponentID =dataTable.getData("General_Data", "Ec_ComponentID");
			report.updateTestLog("Component ID selection", "Component ID selected as "+EC_ComponentID, Status.PASS);
			String EC_DisplayName =dataTable.getData("General_Data", "Ec_DisplayName");
			report.updateTestLog("Component ID selection", "Component ID selected as "+EC_DisplayName, Status.PASS);
			EnterDisplayNameAndCompID( EC_ComponentID, EC_DisplayName);
			selectValueFromDropDown(Component_Type,"Employer Contribution");
			Submit.click();
			Thread.sleep(3000);
			Okay.click();
			System.out.println("Component with the component type as Employer Contribution is added successfully");
			report.updateTestLog("Component type selection", "Component type selected as Employer Contribution and submitted successfully", Status.PASS);
*/
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			
		}	
	}
	
	// to select the Earnings dropdown in component type
		public void SubmitComponent_EC() 
		{
			
			report.addTestLogSubSection("Manage Component Submit validation");
			try {
				
				//clicks on manage components tab
	  		  driver.findElement(By.xpath("//*[@id='AdminTab6']/a")).click();
	  		  System.out.println("Manage components tab is clicked");
	  		  report.updateTestLog("Click on Manage components tab", "Manage components tab is clicked", Status.PASS);
	  		  Thread.sleep(9000);
	  		  
				//clickOnButton(Addcomponent);
				driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
	  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
	  		  
	  		  Thread.sleep(5000);
				
				/*String company = dataTable.getData("General_Data" , "CompanyID");
	  			selectValueFromDropDown(Company_dropdown_field1, company);
	  			System.out.println("Company id selected as:"+company);
	  			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
				Thread.sleep(1000);
				String E_ComponentID = dataTable.getData("General_Data", "E_ComponentID");
				report.updateTestLog("Component ID selection", "Component ID selected as "+E_ComponentID, Status.PASS);
	            String E_DisplayName =dataTable.getData("General_Data", "E_DisplayName");
	            report.updateTestLog("Component ID selection", "Component ID selected as "+E_DisplayName, Status.PASS);
	            EnterDisplayNameAndCompID( E_ComponentID, E_DisplayName);
				Thread.sleep(2000);
				selectValueFromDropDown(Component_Type,"Earnings");
				Submit.click();
				Thread.sleep(3000);
				Okay.click();
				System.out.println("Component with the component type as Earnings is added successfully");
				report.updateTestLog("Component type selection", "Component type selected as Earnings and submitted successfully", Status.PASS);
				
				*/
				

				/*//clickOnButton(Addcomponent);
				driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
	  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
	  		  
	  		  Thread.sleep(5000);*/
	  		  
	  		/*String company1 = dataTable.getData("General_Data" , "CompanyID");
				selectValueFromDropDown(Company_dropdown_field1, company1);
				System.out.println("Company id selected as:"+company1);
				report.updateTestLog("Verify Company_dropdown_field"," "+company1+" is selected in dropdown", Status.PASS);
			Thread.sleep(1000);
				//Adding with type as Deductions
				Thread.sleep(2000);
				//selectValueFromDropDown(Select_Company,"CTS");
				String D_ComponentID =dataTable.getData("General_Data", "D_ComponentID");
				report.updateTestLog("Component ID selection", "Component ID selected as "+D_ComponentID, Status.PASS);
	            String D_DisplayName =dataTable.getData("General_Data", "D_DisplayName");
	            report.updateTestLog("Component ID selection", "Component ID selected as "+D_DisplayName, Status.PASS);
				EnterDisplayNameAndCompID( D_ComponentID, D_DisplayName);
				selectValueFromDropDown(Component_Type,"Deductions");
				Submit.click();
				Thread.sleep(3000);
				Okay.click();
				System.out.println("Component with the component type as Deductions is added successfully");
				report.updateTestLog("Component type selection", "Component type selected as Deductions and submitted successfully", Status.PASS);
	*/
				

				//clickOnButton(Addcomponent);
				/*driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
	  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
	  		  */
	  		  Thread.sleep(5000);
	  		String company2 = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field1, company2);
			System.out.println("Company id selected as:"+company2);
			report.updateTestLog("Verify Company_dropdown_field"," "+company2+" is selected in dropdown", Status.PASS);
				//Adding component with type as Employer Contribution
				Thread.sleep(2000);
				//selectValueFromDropDown(Select_Company,"CTS");
				String EC_ComponentID =dataTable.getData("General_Data", "Ec_ComponentID");
				report.updateTestLog("Component ID selection", "Component ID selected as "+EC_ComponentID, Status.PASS);
				String EC_DisplayName =dataTable.getData("General_Data", "Ec_DisplayName");
				report.updateTestLog("Component ID selection", "Component ID selected as "+EC_DisplayName, Status.PASS);
				EnterDisplayNameAndCompID( EC_ComponentID, EC_DisplayName);
				selectValueFromDropDown(Component_Type,"Employer Contribution");
				Submit.click();
				Thread.sleep(3000);
				Okay.click();
				System.out.println("Component with the component type as Employer Contribution is added successfully");
				report.updateTestLog("Component type selection", "Component type selected as Employer Contribution and submitted successfully", Status.PASS);
	
				
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				
			}	
		}
		
	// Admin should able to click on the Edit button in Manage component
		public void Managecomponent_Pencil_edit() 
		{
			
			report.addTestLogSubSection("Manage Component edit validation");
			try {
				
				
				// Company ID selection
				WebDriverWait wait = new WebDriverWait(driver,30);
				String company_name = dataTable.getData("General_Data" , "CompanyID");
	  			System.out.println(company_name);
	  			//report.updateTestLog("Company id selection","Company name selected as"+ company_name,Status.PASS);
				String Component_text = dataTable.getData("General_Data", "E_ComponentID");
				System.out.println(Component_text);
				//report.updateTestLog("Component ID selection", "Component ID selected as "+ Component_text, Status.PASS);
	            String DisplayName_text =dataTable.getData("General_Data", "E_DisplayName");
	            System.out.println(DisplayName_text);
	            //report.updateTestLog("Component ID selection", "Component ID selected as "+ DisplayName_text, Status.PASS);
	            String Componenttype_text =dataTable.getData("General_Data", "Component_type");
	            System.out.println(Componenttype_text);
	            //report.updateTestLog("Component ID selection", "Component ID selected as "+ Componenttype_text, Status.PASS);
	            Thread.sleep(2000);
	            
	            
	            if(driver.findElements(By.xpath("//table[@id='manageusrtbl']/tbody/tr")).size()!=0)
	       	 {
	       		     	      
	       		 
	       	 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='manageusrtbl']/tbody/tr/td"));
	       	int count=rows.size();
	       	System.out.println("Count is:"+count);
	       	//int K=3;

	        if(driver.findElements(By.xpath("//*[@id='paginationmanageComponent']//ul/li")).size()==0)
	        	
	        {
	        	System.out.println("Pagination not displayed");
	        	report.updateTestLog("Company name selection", "Company name selected as :" +company_name, Status.PASS);

	        	inner:for(int i=1;i<=4;i++)
	       	 {
	        		
	        		
	        	WebElement CompanyID = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+i+"]/td[1]"));
	          	WebElement E_ComponentID = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+i+"]/td[2]"));
	          	WebElement E_DisplayName = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+i+"]/td[3]"));
	          	WebElement Component_type = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+i+"]/td[4]"));
	          	
	          	if(CompanyID.getText().trim().contains(company_name.trim()))
	       		{
	       			
	       		System.out.println("Company selected as :"+ company_name);
	       		//report.updateTestLog("Company selection", "Company selected as :" +company_name, Status.PASS);		
	       		HighlightElement_green(CompanyID);
	       				

	       		if(E_ComponentID.getText().trim().contains(Component_text.trim()))
	       	    {
	       	    System.out.println("Component code selected as :" + Component_text);
	       	    report.updateTestLog("Component code selection", "Component code selected as :" +Component_text, Status.PASS);
	       	    HighlightElement_green(E_ComponentID);
	       	    
	       	    if(E_DisplayName.getText().trim().contains(DisplayName_text.trim()))
	       	    {
	       	    System.out.println("Display name selected as :" + DisplayName_text);
	       	    report.updateTestLog("Display name selection", "Display name selected as :" +DisplayName_text, Status.PASS);
	       	    HighlightElement_green(E_DisplayName);
	       	    
	       	    if(Component_type.getText().trim().contains(Componenttype_text.trim()))
	       	    {
	       	    System.out.println("Component Type selected as :" + Componenttype_text);
	       	    report.updateTestLog("Component Type selection", "Component Type selected as :" +Componenttype_text, Status.PASS);
	       	    HighlightElement_green(Component_type);
	       	    
	       	    driver.findElement(By.xpath("//table[@id='manageusrtbl']/tbody/tr["+i+"]/td[5]/div")).click();
	       	    System.out.println("Action Pencil EDIT button is clicked");
				report.updateTestLog("click on action button", "Action Pencil Edit button is clicked", Status.PASS);
				Thread.sleep(8000);
	       	    }
	       	    
	       	    }
	       	    
	       	    }
	       		
	       		}
	          	
	       	 	}}
	        	
	        	else
	            {
	        	int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationmanageComponent']//ul/li")).size();
	        	System.out.println(num_of_clicks);
	        	report.updateTestLog("Company selection", "Company selected as :" +company_name, Status.PASS);	
	        	outer: for(int j =1; j< num_of_clicks; j++)
	        	{
	        	inner:for(int O=1;O<=4;O++)
	        	{
	        	WebElement CompanyID1 = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+O+"]/td[1]"));
	        	System.out.println(CompanyID1.getText());
		        WebElement E_ComponentID1 = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+O+"]/td[2]"));
		        System.out.println(E_ComponentID1.getText());
		        WebElement E_DisplayName1 = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+O+"]/td[3]"));
		        System.out.println(E_DisplayName1.getText());
		        WebElement Component_type1 = driver.findElement(By.xpath("//*[@id='managecomponent']//table[@id='manageusrtbl']/tbody/tr["+O+"]/td[4]"));
		        System.out.println(Component_type1.getText());
		        if(rows.size()>4)
		        	
		        
		        	
		        if(CompanyID1.getText().trim().contains(company_name.trim()))
		       	{
		       			
		       	System.out.println("Company selected as :"+ company_name);
		       		
		       	HighlightElement_green(CompanyID1);
		       				

		       	if(E_ComponentID1.getText().trim().contains(Component_text.trim()))
		       	{
		       		System.out.println("Component code selected as :" + Component_text);
		       	    report.updateTestLog("Component code selection", "Component code selected as :" +Component_text, Status.PASS);
		       	    HighlightElement_green(E_ComponentID1);
		       	    
		       	if(E_DisplayName1.getText().trim().contains(DisplayName_text.trim()))
		       	{
		       		System.out.println("Display name selected as :" + DisplayName_text);
		       	    report.updateTestLog("Display name selection", "Display name selected as :" +DisplayName_text, Status.PASS);
		       	    HighlightElement_green(E_DisplayName1);
		       	    
		       	if(Component_type1.getText().trim().contains(Componenttype_text.trim()))
		       	{
		       		System.out.println("Component Type selected as :" + Componenttype_text);
		       	    report.updateTestLog("Component Type selection", "Component Type selected as :" +Componenttype_text, Status.PASS);
		       	    HighlightElement_green(Component_type1);
		       	   
		       	driver.findElement(By.xpath("//table[@id='manageusrtbl']/tbody/tr["+O+"]/td[5]/div")).click();
		        System.out.println("Action Pencil EDIT button is clicked");
				report.updateTestLog("click on action button", "Action Pencil Edit button is clicked", Status.PASS);
		       	Thread.sleep(8000);
				
		       	
				if(Component_type1.getText().trim().contains(Componenttype_text.trim()))
				{
				break inner;
				}

				}

					 }
				}
		       	}
					     
					
				       if(rows.size()<=4)
				       {
				    	   break outer;
				    	   
				       }
					 }
					 driver.findElement(By.xpath("//*[@id='paginationmanageComponent']//div[@id='dirPaginationRight']")).click();
					 Thread.sleep(2000);
				   }}}
				   	 
				      
					 else
					 {
						 System.out.println("Edit icon not available");
						 report.updateTestLog("Edit icon validation", "Edit icon is not available", Status.FAIL);

					 }}

				
			
			
			catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				report.updateTestLog("Component code validation", "Component code is not displayed", Status.PASS);
				
			}	
				}
	
	
	
	
	
	public void VerifyPublish()
	{   
		try {
		Thread.sleep(2000);
		PublishAndSendback.click();
		Thread.sleep(5000);
		Publish_Menu.click();
		Thread.sleep(5000);
		Publish_Publish.click();
		Thread.sleep(5000);
		 Alert Alert = driver.switchTo().alert();
		String Text=Alert.getText();
		if(Text.equals("Payslip Published successfully."))
		{
			System.out.println("Payslip Published successfully.");
		}
		
		else
		{
			System.out.println("Payslip is not Published");

		}
	    Alert.accept();
		
	    report.updateTestLog("Verify Publish", "Payslip Publish completed Successfully" , Status.PASS);
		} catch (Exception e) {
            e.printStackTrace();
            report.updateTestLog("Verify publish", "Vrfy publish having probelm" +e.getMessage(), Status.FAIL);
      }

		}
	
	
	// Admin can able to edit the display name in Manage component
	public void Managecomponent_Displayname_Edit() 
	{
	report.addTestLogSubSection("Display name Component edit validation");
	try
	{
	WebDriverWait wait = new WebDriverWait(driver,30);
	String DisplayName_textmsg =dataTable.getData("General_Data", "E_DisplayNameedit");
	
	System.out.println(DisplayName_textmsg);

	WebElement E_DisplayNameedit = driver.findElement(By.xpath("//*[@id='addcomponentname']"));
	Component_Displayname.click();
	Component_Displayname.clear();
	Thread.sleep(2000);
	Component_Displayname.sendKeys(DisplayName_textmsg);
	//if(actualString.contains(E_DisplayNameedit))
	System.out.println(E_DisplayNameedit.getText().trim());
	System.out.println(DisplayName_textmsg.trim());
	
	//if(E_DisplayNameedit.getText().trim().contains(DisplayName_textmsg.trim()))
	
		if(DisplayName_textmsg.trim().trim().contains(E_DisplayNameedit.getText()))
		{
	System.out.println("Display name edit as :" + DisplayName_textmsg);
	report.updateTestLog("Component Display name Edit validation", "Display name Edited as :" +DisplayName_textmsg, Status.PASS);
	
	}
	else
	{
	System.out.println("System not allowed to edit the display name");
	report.updateTestLog("Display name edit validation","System not allowed to edit the display name", Status.FAIL);
	}
	
	select_Month_year_decade_managecomponent();
	
	
	EDITcomponent.click();
	//clickOnButton(Manage_component_submit_button);
	Thread.sleep(2000);
	
	System.out.println("Edit component click successfully");
	report.updateTestLog("Edit component click", "Component Edited successfully", Status.PASS);
	
	clickOnButton(OKAY_button);
	}
	catch (Exception e) {
        e.printStackTrace();
        report.updateTestLog("Component code validation", "Component code is not available for edit", Status.PASS);
  }}
	
	// effective date selection in manage component
	public void select_Month_year_decade_managecomponent() 
	{
		report.addTestLogSubSection("Month_Year_Decade selection in manage component");
		try 
		{
			Thread.sleep(4000);
			Effectivedate.click();
            System.out.println("calendar icon clicked");
            report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
            String Month2 = dataTable.getData("General_Data", "Decade");
            System.out.println("Decade selected as "+Month2);
            report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

            //Click on Year Header
            driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
            Thread.sleep(5000);
            driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
            Thread.sleep(5000);
     //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
            driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
            Thread.sleep(5000);
            //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
            //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
            //Thread.sleep(5000);
            //Select Year
            String Year1 = dataTable.getData("General_Data", "Year");
            
            Thread.sleep(2000);
     //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
            driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
            Thread.sleep(2000);
            System.out.println("Year selected as"+Year1);
            report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
            Thread.sleep(3000);
            //Select Month
            String Month1 = dataTable.getData("General_Data", "MonthSelection");
            
            Thread.sleep(2000);
     driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
            System.out.println("Month selected as "+Month1);
            report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

            Thread.sleep(2000);

			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
		
		
	}
	public void VerifySendback()
	{   
		try {
			Thread.sleep(2000);
		PublishAndSendback.click();
		Thread.sleep(3000);
		Publish_Menu.click();
		Thread.sleep(2000);
		Publish_Sendback.click();
		Thread.sleep(2000);
		Send_Back_Reason.sendKeys("Test reason");
		Publish_Sendback_Button.click();
		Thread.sleep(2000);
		Alert Alert = driver.switchTo().alert();
		Alert.accept();
		
		report.updateTestLog("Verify SendBack", "Payslip Sendback completed Successfully" , Status.PASS);
		
	    } catch (Exception e) {
            e.printStackTrace();
            report.updateTestLog("Verify sendback", "Verifying sendback having probelm" +e.getMessage(), Status.FAIL);
      }

		}
	public void ViewReports()
	{
	   select_Reports();
		if(Reports_Financial_YR.isDisplayed()||Reports_Company.isDisplayed())
		{
			System.out.println("Financial year and company dropdowns are dispalyed");
			//report.updateTestLog("Financial  Year and Company dropdown verification", "Financial year and company dropdowns are dispalyed", Status.PASS);
		}
		else
		{
			System.out.println("Financial year and company dropdowns are not dispalyed :BUG");
		//report.updateTestLog("Financial  Year and Company dropdown verification", "Financial year and company dropdowns are not dispalyed", Status.FAIL);
		}
		
		
		if(Reports_Uploaded.isDisplayed()||Reports_Published.isDisplayed()||Reports_Sentback.isDisplayed()||Reports_View.isDisplayed())
		{
			System.out.println("Uploaded,Published,SendBack filters and view button is dispalyed");
		report.updateTestLog("Status verification", "Uploaded,Published,SendBack filters and view button is dispalyed", Status.PASS);
		}
		
		else
		{
			System.out.println("Uploaded,Puished,SendBack filters and view button are not displayed : BUG");
			report.updateTestLog("Status verification", "Uploaded,Published,SendBack filters and view button is not dispalyed", Status.FAIL);

		}
	}
	public void DeleteFile(String filePath)
	{   try {
		File file= new File(filePath);
	    Thread.sleep(3000);
		for (int i = 0; i < 10; i++) {
			
	    	if(file.exists())
	    	{
	    	file.delete();
	    	}
		}
	}
		catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void ViewLatestFile(String filePath)
	{  
		try {
		File file= new File(filePath);
	    Thread.sleep(3000);
		boolean flag= false;
		if(file.exists())
		{
		flag= true;
		}
		if (flag) {
			
			System.out.println("Latest file");
			report.updateTestLog("Report file", "Report file exists", Status.PASS);
			
		} else {
			System.out.println("FAILURE");
			report.updateTestLog("Failure", "File download filed", Status.FAIL);
		}
		/*//for (int i = 0; i < 10; i++) {
				
    	if(file.exists())
    	{
    	file.delete();
    	}
		}*/
		  }
		catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		

	}
	public void ViewDownloadedFile()
	{
		
		try {
			  select_Reports();
			  Company_IDselection_Reports();
			  String Year=dataTable.getData("General_Data", "SelectYear");
				 report.updateTestLog("Financial year selection", "Financial year selected as:"+Year, Status.PASS);
				 selectValueFromDropDown(Reports_Financial_YR,Year);
			  Thread.sleep(3000);
			 Reports_View.click();
			 System.out.println("view is clicked");
			 report.updateTestLog("View verification", "View button is clicked in reports", Status.PASS);
			 //Thread.sleep(2000);
			 	 
			 //if (table_data.isDisplayed())
			 /*{
				 ToFindall_status("Uploaded","Published","SentBack");
			 }*/
			 		 
			 //report.updateTestLog("report message verification", "Report verfied for the financial year", Status.PASS);
	 
			   
			 if (isAlertPresent())
			 //try
			 {



			                         Thread.sleep(5000);
			                         //report.updateTestLog("Alert message verification", "No data available message displayed", Status.PASS);

			                     Alert alert = driver.switchTo().alert();         
			                     //report.updateTestLog(stepName, stepDescription, stepStatus);



			                     // Capturing alert message.    

			                     //String alertMessage= driver.switchTo().alert().getText();           



			                     // Displaying alert message       



			                     //report.updateTestLog("Alert verification " , "No data available error message displayed", Status.PASS);

			                     Thread.sleep(2000);

			                     // Accepting alert          

			                     alert.accept();

			                     //System.out.println(alertMessage);

			                         }



			                         /*catch (UnhandledAlertException e){Alert alert = driver.switchTo().alert();          



			                         // Capturing alert message.    

			                         String alertMessage= driver.switchTo().alert().getText();         



			                         // Displaying alert message         

			                         report.updateTestLog("Alert - " , alertMessage+" is captured", Status.PASS);

			                         Thread.sleep(2000);

			                         // Accepting alert            

			                         alert.accept();   

			                         System.out.println(alertMessage);

			                         }
*/
			 else if(table_data.isDisplayed())
				 
				 {
				 ToFindall_status("Uploaded","Published","SentBack");
			 
				 
			 //catch (NoSuchElementException e)
			 

			  Thread.sleep(3000);
			 String filePath=dataTable.getData("General_Data", "DownloadFilePath");
			 System.out.println("filePath");
			 DeleteFile(filePath);
			 Reports_Download.click();
			 report.updateTestLog("File download verification", "File downloaded successfully", Status.PASS);
			 ViewLatestFile(filePath);
				 }
	         
	        
				    
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void VerifyEmailSent()
	{
		try 
		{
		//UploadFile();
		//VerifyPublish();
		select_Reports();
		
		
		String Year=dataTable.getData("General_Data", "SelectYear");
		selectValueFromDropDown(Reports_Financial_YR,Year); 
		report.updateTestLog("Financial year selection", "Financial year selected as:" +Year, Status.PASS);
		Thread.sleep(3000);
		Company_IDselection_Reports();
		/*String company = dataTable.getData("General_Data" , "CompanyID");
		selectValueFromDropDown(Company_dropdown_field_Reports, company);
		report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
		//System.out.println("Company ID selected is : ", " "+company+" is selected");
*/
		Reports_Published.click();
		Thread.sleep(5000);
		Reports_View.click();
		Thread.sleep(5000);
		System.out.println("view is clicked");
		 report.updateTestLog("View verification", "View button is clicked in reports", Status.PASS);
		 Thread.sleep(4000);
		 
		 if (table_data.isDisplayed())
		 {
			 //ToFindall_status("Uploaded","Published","SentBack");
			 
			 Find_Status_of_EMail_button();
			 System.out.println("table is displayed");
		 }
		 		 
		 //report.updateTestLog("report message verification", "Report verfied for the financial year", Status.PASS);

		   
		 else if (isAlertPresent())
		 
		 try
		 {



		                         Thread.sleep(5000);
		                         //report.updateTestLog("Alert message verification", "No data available message displayed", Status.PASS);

		                     Alert alert = driver.switchTo().alert();         
		                     //report.updateTestLog(stepName, stepDescription, stepStatus);



		                     // Capturing alert message.    

		                     //String alertMessage= driver.switchTo().alert().getText();           



		                     // Displaying alert message       



		                     //report.updateTestLog("Alert verification " , "No data available error message displayed", Status.PASS);

		                     Thread.sleep(2000);

		                     // Accepting alert          

		                     alert.accept();

		                     //System.out.println(alertMessage);

		                         }



		                         catch (UnhandledAlertException e){Alert alert = driver.switchTo().alert();          
		                         {


		                         // Capturing alert message.    

		                         //String alertMessage= driver.switchTo().alert().getText();         



		                         // Displaying alert message         

		                       //  report.updateTestLog("Alert - " , " is captured", Status.PASS);

		                         Thread.sleep(2000);

		                         // Accepting alert            

		                         alert.accept();   

		                        // System.out.println(alertMessage);

		                         }}

		 //else if(table_data.isDisplayed())
		 
			 //catch (NoSuchElementException e)
		/* {

		 
		//List<WebElement> emaillist=driver.findElements(By.xpath("(@class,'emailTriggerIMG')]"));
		Thread.sleep(8000);
		System.out.println("table is displayed");
		Find_Status_of_EMail_button();
		
		} */
		}
		
		 catch (Exception e) {
            e.printStackTrace();
            report.updateTestLog("Verify email sent to the associates", "Verify email sent to the associates having probelm" +e.getMessage(), Status.FAIL);
		 }
		}
		
		
	
	
	public void Find_Status_of_EMail_button() throws Exception
	 {
/*		Thread.sleep(7000);
		if (driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
	    System.out.println(rows);
	    int k=3;
	    for(int i=1;i<=rows;i++)
	    {
	    	Thread.sleep(7000);
	    	if(driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).isEnabled())
			{
	    		report.updateTestLog("Email validation", "Email icon is enabled", Status.PASS);

	    		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr/td/div/input[contains(@class,'emailTriggerIMG')]")).click();
	    		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);
				Thread.sleep(6000);
				Alert alert = driver.switchTo().alert();
				System.out.println(alert.getText());
				Thread.sleep(6000);
				alert.accept();*/
				
		try
		{
			 //@SuppressWarnings("unused")
			WebDriverWait wait = new WebDriverWait(driver,30);
			String date = dataTable.getData("General_Data", "period");
			System.out.println("Period in Datatable is: " +date);
			String type = dataTable.getData("General_Data", "Upload_type");
			
			 //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
			 if(driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size()!=0)
			 {
			 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr/td"));
			 int count= rows.size();
			 System.out.println("Count is: " +count);
			 //int k=3;
			 int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationReports']//ul/li")).size();
			 System.out.println(num_of_clicks);
			 outer: for(int i=1;i<num_of_clicks;i++)
			 {
				 
				 inner:for(int j=1;j<=4;j++)
				 {
				 //WebElement country = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr/td[1]"));
				    WebElement period = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+j+"]/td"));
				    WebElement upload_type = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+j+"]/td[3]"));
				    if(rows.size()>4)
		/*String Country_name=dataTable.getData("General_Data" , "Country");
		if(country.getText().trim().contains(Country_name.trim()))
		System.out.println("Country selected as :"+ Country_name);
		report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
		*/
		//HighlightElement_green(country);
		
		if(period.getText().trim().contains(date.trim()))
		{
		System.out.println("period selected as :" + date);
		report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
		
		HighlightElement_green(period);
		
		if(upload_type.getText().trim().contains(type.trim()))
		{
		System.out.println("Upload type selected as: "+ type);
		report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
		
		HighlightElement_green(upload_type);
		driver.findElement(By.xpath("//*[@id='reportstbl']/tbody/tr["+j+"]/td[7]/div/input[contains(@class,'emailTriggerIMG')]")).click();
		System.out.println(" Mail icon is clicked");
		report.updateTestLog("Email icon validation", "Email icon clicked and mail sent to associate", Status.PASS);

		Thread.sleep(5000);
		/*****Handling alert*****/
		checking_alert();
		Thread.sleep(2000);
		{
		break inner;
		}
		}
		

			 }
		}
		
			 
			 if(rows.size()<=4)
		       {
		          break outer;
		          
		       }
		       }
			 	driver.findElement(By.xpath("//*[@id='dirPaginationRight']")).click();
		       Thread.sleep(2000);
	
		}
	    	
			else
			{
	    		report.updateTestLog("Email validation", "Email icon is not enabled", Status.PASS);

			}
		
		}
		catch(Exception e)
		 {
			   
			   //report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
			   
		 }
	 
		/*{
		
	      if(count==i)
	      {
	    	  if(pagination_locator.isDisplayed())
	    	  {	   
	    		  	List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li"));
	    		  	if(pagination_count.size()==k)
	    		  	{
	    		  		
	    		  	}
	    		  	else
	    		  	{
	    			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a"));
	    			 // System.out.println("K value is :"+k);
	    			  if(Page_Number.isEnabled()==false)
	    			  {
	    				  System.out.println("Last button reached");
	    				  
	    			  }
	    			  
	    			  if(Page_Number.isEnabled()==true)
	    			  {   //System.out.println("Page no is displayed");
	    				  driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a")).click();
		    			  k++;  
		    			  *//****assigning i value as 0 for the next page table verification*****//*
		    			  i=0;
	    			  }
	    			  else
	    			  {
	    				  System.out.println("No more buttons available in Pagination or Button is not enabled");
	    			  } 
	    		  	}
		    	}
		    	  	  
	      	}
	      else
	    	{
	    		System.out.println("No other pages available hereafter");
	    	}  
	      //int rows_final=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size();
	      //rows=rows_final;
	    }*/
	}
	
	
	
/*	//Normal PDF Automaion

   
	public void OpenPdfFile()
	{
		try {	
	
	
File file = new File("C:\\Users\\269081\\Downloads\\Payslip.pdf");


	
FileInputStream fis = new FileInputStream(file);

PDFParser parser = new PDFParser(fis);

parser.parse();

COSDocument cosDoc = parser.getDocument();

PDDocument pdDoc = new PDDocument(cosDoc);

PDFTextStripper strip = new PDFTextStripper();

String data = strip.getText(pdDoc);

System.out.println(data);

//Verify the text in PDF
if(data.contains("269081"))
{
	System.out.println("Expected text is displayed in the PDF");
}
else
{
	System.out.println("Expected text is not displayed in the PDF");
}

cosDoc.close();

pdDoc.close();

} catch ( IOException e) {
// TODO Auto-generated catch block
e.printStackTrace();
System.out.println("Failed " +e);
}
	}*/
	
	public void DownloadPaySlip()
	{  
		
		report.addTestLogSubSection("Download payslip validation");
		try
        {
		Thread.sleep(1000);	
		View_PaySlip_Tab.click();
		report.updateTestLog("View payslip tab verification", "View payslip tab clicked", Status.PASS);
		String AssociateID = dataTable.getData("General_Data", "AssociateID");
		report.updateTestLog("Associate ID selection", "Payslip download for associate is :"+AssociateID, Status.PASS);
		Thread.sleep(3000);	
		Associate_ID.sendKeys(AssociateID);
		View_PaySlip.click();
		
		
		Thread.sleep(8000);
		//select_Monthview();
		select_Month_year_decade1();
		String payslip = dataTable.getData("General_Data", "Payslip_Type");
		report.updateTestLog("Payslip type selection", "Payslip type selected as:"+payslip , Status.PASS);
		select_payslipFromDropDown(drpdownpayslipType,payslip);
		
		Thread.sleep(3000);
		String filepath = dataTable.getData("General_Data", "file_path");
		report.updateTestLog("File path selection", "File path selected as:"+filepath, Status.PASS);
//		String filepath = "C:\\Users\\806159\\Downloads\\Dubai_Payslip.pdf";
		DeleteFile(filepath);
		Download_Payslip.click();
		report.updateTestLog("Payslip download button selection", "payslip download button is clicked", Status.PASS);
		Thread.sleep(5000);
		Okay_Download.click();
		report.updateTestLog("Password protected message verification", "Message displayed as : your payslip is password protected", Status.PASS);
		Thread.sleep(5000);
        }
		catch(Exception e)
		{
			
		}
	}
	  private void select_payslipFromDropDown(WebElement element, String dropDownvalue) {
		// TODO Auto-generated method stub
		//try {
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.textToBePresentInElement(element, dropDownvalue));
			if (element.isDisplayed() && element.isEnabled()) {
				JavascriptExecutor js = (JavascriptExecutor) driver;
				((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].style.border='2px groove red'", element);
				js.executeScript("arguments[0].style.border=''", element);
				Select dropDown = new Select(element);
				dropDown.selectByVisibleText(dropDownvalue);
				System.out.println("Company ID is selected");
				//report.updateTestLog("payslip type selection", "payslip type selected as :", Status.PASS);
			} else {
				report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
				Assert.fail();
			}
			/*}	
		} catch (Exception exception) {
		
			Assert.fail(exception.getMessage());
			report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
		}*/
	}

	

	public void select_Monthview() 
	  	{
	  		try 
	  		{
	  			Thread.sleep(8000);
	  			MonthView.click();
	  			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
	  			List_Selection(Month_Name, month_xpath, "Calender");
	  			
	  			System.out.println("Month name selected as:" +Month_Name);			
	  			report.updateTestLog("Monthview Calender", "Month selected as:" +Month_Name , Status.PASS);
	  			
	  			
	  		} catch (Exception e) {
	  			// TODO Auto-generated catch block
	  			e.printStackTrace();
	  			report.updateTestLog("Clicking Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
	  		
	  		
	  	}
	  
	public void DeleteFileBeforePaySlipDownload()
	{ 
		String filePath ="C:\\Users\\226346\\Downloads\\Dubai_Payslip.pdf";
		DeleteFile( filePath);
	}
	
		  public void passowordpdf()
          {
			  
			  report.addTestLogSubSection("Payslip Password validation");
                  try
                  {
                  //Open PDF in Chrome driver
       			  // driver.get("file:///D:\\1. MyPay\\1. November -2018\\Test Execution\\Payslip CR\\Payslip.pdf");
                	  Thread.sleep(5000);  
                	  //String filepath = dataTable.getData("General_Data", "file_path");
                	  String country = dataTable.getData("General_Data", "Country");
       			   driver.get("file:///C:\\Users\\226346\\other\\Downloads\\"+country+"_Payslip.pdf");
       			   Thread.sleep(5000);
       			
       			   System.out.println("PDF is opened in chrome browser");
       			   report.updateTestLog("Browser selection", "PDF opened in chrome browser", Status.PASS);
                  
                          Thread.sleep(4000);
                          
                        /*  driver.findElement(By.xpath("//*[@id='input']")).sendKeys("2263460501");       
                          driver.findElement(By.xpath("//*[@id='submit']")).click();
                          System.out.println("Password entered and submitted");
                          report.updateTestLog("Keyboard Action", "Enter option is clicked", Status.DONE);*/
                        		  
                        		  Robot rb = new Robot();
                          
                          //Get password from datatable
                          //String pwd = dataTable.getData("General_Data", "Password");
                          String pwd = dataTable.getData("General_Data", "PWD");
                          System.out.println("Password is : " +pwd);
                          report.updateTestLog("Password selection", "Password entered in PDF", Status.PASS);
                          
                           // Enter Passoword
                          
                           StringSelection username = new StringSelection(pwd);
                           
                                  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(username, null);            
                                  rb.keyPress(KeyEvent.VK_CONTROL);
                                  rb.keyPress(KeyEvent.VK_V);
                                  rb.keyRelease(KeyEvent.VK_V);
                                  rb.keyRelease(KeyEvent.VK_CONTROL);
                                  Thread.sleep(5000); 
                                  System.out.println("Password is entered");
                                  report.updateTestLog("Enter Password", "Password is entered", Status.PASS);
                          
                                  //to submit - click enter
                          rb.keyPress(KeyEvent.VK_ENTER);
                          rb.keyRelease(KeyEvent.VK_ENTER);
                          System.out.println("Keyboard Action - Enter Key Press");
                          report.updateTestLog("PDF verification", "Payslip PDF is opened successfully", Status.PASS);
                          Thread.sleep(5000);   
                  }
                  catch(Exception e)
                  {
                          System.out.println("Password entry fails due to : " +e);
                          report.updateTestLog("Enter Password", "Password is not entered due to : " +e, Status.FAIL);
                  }

          
          }
		  
		  
		public void VerifyPayComponentAutoUpdate()
		{   
			try{
			Thread.sleep(1000);	
			String DIname=dataTable.getData("General_Data", "Dname");
			String Cname=dataTable.getData("General_Data", "Cname");		
			EnterDisplayNameAndCompID(DIname,Cname);
			Thread.sleep(1000);
			selectValueFromDropDown(Component_Type,"Earnings");
			String Dname = Display_Name.getAttribute("value");
			Thread.sleep(1000);
			Submit.click();
			Thread.sleep(1000);
			Okay.click();
			Thread.sleep(1000);
			Select_UploadPayslip.click();
			Thread.sleep(1000);
			selectValueFromDropDown(Select_File_Type,"Salary Register");
		    String inputExcelPath = "C:\\Users\\806159\\Downloads\\Dubai_SalaryRegister_Template.xlsx";
		    Thread.sleep(1000);
		   ViewLatestFile(inputExcelPath);	
		   Click_Template.click();
//		   String Dname ="Employee Name";
		   Thread.sleep(1000);
		   System.out.println("check 1");
		   getCellData(inputExcelPath, "Template", 1, Dname);
//			System.out.println("excel value is : "+value);
			
			
			
			}
			catch(Exception e)
            {
				
            }      
		}		
	
	//code to view reports
		
		public boolean isAlertPresent(){
			try{
		    driver.switchTo().alert();
             return true;
			}catch(NoAlertPresentException ex){
	         return false;
			}
		}
		public void ViewAllStatus()
		 {   
			 try{
				 
				 String Year=dataTable.getData("General_Data", "SelectYear");
				 report.updateTestLog("Financial year selection", "Financial year selected as:"+Year, Status.PASS);
			     selectValueFromDropDown(Reports_Financial_YR,Year);
			 /******Checking all status by selecting only year*******/
			 Reports_View.click();
			 System.out.println("view is clicked");
			 report.updateTestLog("View verification", "View button is clicked in reports", Status.PASS);
			 //Thread.sleep(2000);
			 	 
			 //if (table_data.isDisplayed())
			 /*{
				 ToFindall_status("Uploaded","Published","SentBack");
			 }*/
			 		 
			 //report.updateTestLog("report message verification", "Report verfied for the financial year", Status.PASS);
	 
			   
			 if (isAlertPresent())
			 //try
			 {



			                         Thread.sleep(5000);
			                         //report.updateTestLog("Alert message verification", "No data available message displayed", Status.PASS);

			                     Alert alert = driver.switchTo().alert();         
			                     //report.updateTestLog(stepName, stepDescription, stepStatus);



			                     // Capturing alert message.    

			                     //String alertMessage= driver.switchTo().alert().getText();           



			                     // Displaying alert message       



			                     //report.updateTestLog("Alert verification " , "No data available error message displayed", Status.PASS);

			                     Thread.sleep(2000);

			                     // Accepting alert          

			                     alert.accept();

			                     //System.out.println(alertMessage);

			                         }



			                         /*catch (UnhandledAlertException e){Alert alert = driver.switchTo().alert();          



			                         // Capturing alert message.    

			                         String alertMessage= driver.switchTo().alert().getText();         



			                         // Displaying alert message         

			                         report.updateTestLog("Alert - " , alertMessage+" is captured", Status.PASS);

			                         Thread.sleep(2000);

			                         // Accepting alert            

			                         alert.accept();   

			                         System.out.println(alertMessage);

			                         }
*/
			 else if(table_data.isDisplayed())
			 //catch (NoSuchElementException e)
			 {
	ToFindall_status("Uploaded","Published","SentBack");
	
	 WebElement all_status[]={Filter_Uploaded,Filter_Published,Filter_Sentback};
	 int len=all_status.length;
	 System.out.println(len);
	 String Status_data[] = {"Uploaded","Published","SentBack"};
	 int j=1;
	 for(int k=0; k<=len;k++)
	 {
		 //System.out.println(all_status.length+" :size and K is : "+k);
		 Thread.sleep(2000);
		 all_status[k].click();
		 Reports_View.click();
		 Thread.sleep(2000);
		 if(isAlertPresent()){
			 Alert alert = driver.switchTo().alert();
			 Thread.sleep(1000);
			 System.out.println(alert.getText());
			 Thread.sleep(2000);
			 alert.accept();
			 
		 }
		 else if((table_data.isDisplayed()))
		 {
			 //*[@id="paginationReports"]/dir-pagination-controls/ul/li/a[contains(text(),'1')]
			  ToFind_particular_status(Status_data[j]);
			  j++;
		 }
		  else
		  {
			  System.out.println("Verfying uploaded status data having some problem");
			  Assert.fail();
		  }
		  //all_status[k].click();
		  //Thread.sleep(5000);
		  //System.out.println(all_status[k]+"verification comepleted");
		  //report.updateTestLog("Status verification", "Status verification is :"+all_status[k], Status.PASS);
	 }
	 
		 //verifying all the status filter
	     //click to all three buttons
	     //click view button
	  // call to find all status methond
	     

	
}



/*			 else if(isAlertPresent()){
				 Alert alert = driver.switchTo().alert();
				 //String alertmessage = driver.switchTo().alert().getText();
				 //Thread.sleep(4000);
				 //System.out.println(alertmessage);
				 //report.updateTestLog("Report alert verification", "Report alert verification is :" + alertmessage, Status.PASS);
				 //Thread.sleep(4000);
				 //driver.switchTo().alert().accept();
				 alert.accept();*/
			 
			 /*****Checking each status filter for particular year****/
				 
			 }
		 
			 catch(Exception e)
	         {
	                
	         }
		 }
			
		 
		 public void ToFind_particular_status(String value) throws Exception
		 {
			 Thread.sleep(2000);
		    List<WebElement> rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr"));
		   // System.out.println("Row size : "+rows.size());
		    int k=3;
		    for(int i=1;i<=rows.size();i++)
		    {
		      WebElement row = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[4]"));
		      if(row.getText().trim().contains(value))
		      {
		    	  //Highlight green
		    	  HighlightElement_green(row);
		      }
		      else
		      {
		    	  //Highlight Red
		    	  HighlightElement_red(row);
		    	  Assert.fail();
		      }
		      if(rows.size()==i)
		      {
		    	  if(pagination_locator.isDisplayed())
		    	  {	    		  
		    			List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li"));
		    		  	if(pagination_count.size()==k)
		    		  	{
		    		  		
		    		  	}
		    		  	else
		    		  	{
		    			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a"));
		    			 // System.out.println("K value is :"+k);
		    			  if(Page_Number.isEnabled()==false)
		    			  {
		    				  System.out.println("Last button reached");
		    				  break;
		    			  }
		    			  if(Page_Number.isEnabled()==true)
		    			  {   // System.out.println("Page no is displayed");
		    				  driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a")).click();
			    			  k++;  
			    			  /****assigning i value as 0 for the next page table verification*****/
			    			  i=0;
		    			  }
		    			  else
		    			  {
		    				  System.out.println("No more buttons available in Pagination or Button is not enabled");
		    			  } 
		    		  	}
		    		

		    }
		    
		 }
		    }
		 }
		 public void ToFindall_status(String uploaded,String published,String sendback) throws Exception
		 {
			 //if(driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr")).isDisplayed())
			   // {
		    int rows=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size();
		    System.out.println(rows);
		    	
		    int k=3;
		    for(int i=1;i<=rows;i++)
		    {
		      WebElement row = driver.findElement(By.xpath("//table[@id='reportstbl']/tbody/tr["+i+"]/td[4]"));
		      String status=row.getText();
		      report.updateTestLog("Status verification", "Report status displayed as:"+status, Status.PASS);
		      if(row.getText().trim().contains(uploaded)||row.getText().trim().contains(published)||row.getText().trim().contains(sendback))
		    	  //report.updateTestLog("Upload, Published and sentback records verification", "Upload, Published and sentback records are available", Status.PASS);
		      {
		    	  //Highlight green
		    	  HighlightElement_green(row);
		    	  report.updateTestLog("Highlight verification", "Status highlighted in green:"+ status, Status.PASS);
		      }
		      else
		      {
		    	  //Highlight Red
		    	  HighlightElement_red(row);
		    	  report.updateTestLog("Highlight verification", "Status highlighted in RED:"+ status, Status.FAIL);
				     
		    	  Assert.fail();
		      }
		      if(rows==i)
		      {
		    	  if(pagination_locator.isDisplayed())
		    	  {	   
		    		  	List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li"));
		    		  	/*if(pagination_count.size()==k)
		    		  	{
		    		  		
		    		  	}
		    		  	else
		    		  	{*/
		    			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a"));
		    			 // System.out.println("K value is :"+k);
		    			  if(Page_Number.isEnabled()==false)
		    			  {
		    				  System.out.println("Last button reached");
		    				  break;
		    			  }
		    			  if(Page_Number.isEnabled()==true)
		    			  {   //System.out.println("Page no is displayed");
		    				  driver.findElement(By.xpath("//*[@id='paginationReports']/dir-pagination-controls/ul/li["+k+"]/a")).click();
			    			  k++;  
			    			  /****assigning i value as 0 for the next page table verification*****/
			    			  i=0;
		    			  }}
		    			  else
		    			  {
		    				  System.out.println("No more buttons available in Pagination or Button is not enabled");
		    			  } 
		    		  	}
			    	
			    	  	  
		      	}
		     /* else
		    	{
		    		//System.out.println("No other pages available herafter");
		    	}*/  
		      //int rows_final=driver.findElements(By.xpath("//table[@id='reportstbl']/tbody/tr")).size();
		      //rows=rows_final;
		    }
		    
/*		    else
		    {
		    	System.out.println("No records available ");

		    		    }*/
		 
	 
	 public void HighlightElement_red( WebElement element)  {
			JavascriptExecutor js = (JavascriptExecutor) driver;

			try {
				
				js.executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].setAttribute('style', 'background: red; border: 2px solid red;');",element);
				Thread.sleep(100);
				js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			
		}
		/*public void HighlightElement_green( WebElement element) throws Exception {
			JavascriptExecutor js = (JavascriptExecutor) driver;

			try {
				js.executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].setAttribute('style', 'background: green; border: 2px solid red;');",element);
				Thread.sleep(100);
				js.executeScript("arguments[0].scrollIntoView(true);", element);
				//Thread.sleep(2000);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
			
		}*/
	 
	 
	 public void HighlightElement_green( WebElement element) throws Exception {
			JavascriptExecutor js = (JavascriptExecutor) driver;

			try {
				js.executeScript("arguments[0].setAttribute('style', 'background: green; border: 2px solid red;');",element);
//				js.executeScript("arguments[0].scrollIntoView(true);", element);
				Thread.sleep(2000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
			
		}
	 
	public void SelectStatus()
	{
		driver.findElement(By.xpath("//span[(contains(text(),'+SType+'))]")).click();//span[(contains(text(),'Uploaded'))]"
				
	}
		 
	public void checking_alert()
	{
		try {
			//System.out.println("Check -1");
			Thread.sleep(8000);
			Alert alert =driver.switchTo().alert();
			//Thread.sleep(8000);
			//System.out.println("Check -2");
			//Thread.sleep(12000);
			//alert.getText();
			Thread.sleep(5000);
			alert.accept();
			Thread.sleep(5000);
			//report.updateTestLog("Alert message verification", "Alert message displayed as :"+alert.getText(), Status.PASS);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
		}
		
	} 
	public void select_Month_year_decade1() 
  	{
    	  
    	  report.addTestLogSubSection("Month Year and Decade selection");
  		try 
  		{
  			Thread.sleep(4000);
              MonthView.click();
              System.out.println("calendar icon clicked");
              report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
              String Month2 = dataTable.getData("General_Data", "Decade");
              System.out.println("Decade selected as "+Month2);
              report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

              //Click on Year Header
              driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
              Thread.sleep(5000);
              driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
              Thread.sleep(5000);
              //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
              Thread.sleep(5000);
              //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
              //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
              //Thread.sleep(5000);
              //Select Year
              String Year1 = dataTable.getData("General_Data", "Year");
              
              Thread.sleep(2000);
       //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
              Thread.sleep(2000);
              System.out.println("Year selected as"+Year1);
              report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
              Thread.sleep(3000);
              //Select Month
              String Month1 = dataTable.getData("General_Data", "MonthSelection");
              
              Thread.sleep(2000);
       driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
              System.out.println("Month selected as "+Month1);
              report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

              Thread.sleep(2000);

  			
  		} catch (Exception e) {
  			// TODO Auto-generated catch block
  			e.printStackTrace();
  			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
  		
  		
  	}

}

package pages; 

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.HashMap; 
import java.io.FileOutputStream; 

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook; 
 


import org.apache.commons.io.comparator.LastModifiedFileComparator;
import org.apache.commons.io.filefilter.WildcardFileFilter;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.cognizant.framework.Status;

import functionallibraries.FunctionalLibrary;
import supportlibraries.ScriptHelper;

public class LoginPage_Australia extends MasterPage_Aus 
{

	private static final By ChooseFile = null;



	private static final By Level = null;



	private static final By Download = null;

	public LoginPage_Australia(ScriptHelper scriptHelper)
	{
		super(scriptHelper);
	}
	
	 FunctionalLibrary functionalLibrary = new FunctionalLibrary(scriptHelper);
	
	
	
By Country = By.xpath("//*[@id='arrowImg']");

@FindBy(xpath="//*[@id='uploadmessage']")
public WebElement Ok_button;

@FindBy(xpath="//div[@id='addcomponentModalContainer']//select[@id='companyselpayslip']")
public WebElement Company_dropdown_field;

@FindBy(id="uploadbtn")
public WebElement upload_button;

@FindBy(id = "ComponentIDinput")
public WebElement Component_ID;

@FindBy(xpath = "//a[contains(text(),'Add Component')]")
public WebElement Addcomponent;

public String month_xpath="//span[contains(@class,'month')]";

@FindBy(id="updatebtn")
public WebElement update_button;

@FindBy(xpath="//*[@id='RequestPublish']")
public WebElement btnRequestPublish;

@FindBy(xpath="//*[@id='uploadmessage']")
public WebElement OKAYbutton;

@FindBy(xpath="//*[@id='monthview']")
public WebElement MonthView;

@FindBy(xpath="//div[@class='calendaricon']")
public WebElement MonthView1;

@FindBy(xpath = "//a[contains(text(),'Manage Components')]")
public WebElement Manage_Components;

public void HighlightElement_green( WebElement element) throws Exception {
	JavascriptExecutor js = (JavascriptExecutor) driver;

	try {
		js.executeScript("arguments[0].setAttribute('style', 'background: green; border: 2px solid red;');",element);
		js.executeScript("arguments[0].scrollIntoView(true);", element);
		Thread.sleep(2000);
	} catch (InterruptedException e) {
		
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
	
}
//**************Select Drop Down element*****************//

		public void selectDropDownWebElement(WebElement drpdown, String visibletextvalue) 
		{
			try
			{
				Thread.sleep(4000);
				Select sel = new Select(drpdown);
				sel.selectByVisibleText(visibletextvalue);
				System.out.println(visibletextvalue);
				
			}
			catch (Exception e)
			{
				report.updateTestLog("Drop Down", "Dropdown '"+visibletextvalue+"' is not selected", Status.FAIL);
				System.out.println("Exception - " +e.getMessage());
			}
			functionalLibrary.sleep(2000);
			
		  }
		String RowNumber="";
		public void ToFindRowNumber(String value, String table_xpath) throws Exception
		{
			//String table="//*[@id='backfillAssociates']/tbody/tr";
			//Thread.sleep(3000);
			
			WebDriverWait wait = new WebDriverWait(driver,30);
			wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(table_xpath+"/td")));
			System.out.println("Check -1");
		   List<WebElement> rows=driver.findElements(By.xpath(table_xpath));
		   for(int i=1;i<=rows.size();i++)
		   {
		     WebElement row = driver.findElement(By.xpath(table_xpath+"["+i+"]/td[7]/div[contains(@class,'dropdown')]"));
		     if(row.getText().trim().contains(value))
		     {
		    	 RowNumber=Integer.toString(i);
		    	 //HighlightElement_green(row);
		    	 break;
		     }
		     else
		     {
		    	 //HighlightElement_red(row);
		     }
		   }
		}
		
		
		
				  
					public void checking_alert()
					{
						try {
							System.out.println("Check -1");
							Thread.sleep(3000);
							Alert alert =driver.switchTo().alert();
							System.out.println("Check -2");
							alert.getText();
							alert.accept();
						} catch (InterruptedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						
					} 
				 

		
//public void setClipboardData(String string)
//{
//	StringSelection stringSelection = new StringSelection(string);
//	Toolkit.getDefaultToolkit().getSystemClipboard().setContents(stringSelection,null);
//}
		 
					
	
public void DownloadValidation(String linkname, String linkid,String text,String extension)
	       {
	              try
	              {
	                     //Get the File name to download to download
	                 //   String text = driver.findElement(By.xpath(txtxpath)).getText();
	                 //  String text = dataTable.getData("General_Data", ""+filename+"");
	                     
	                     System.out.println("Text is: " +text);
	                     
	                     //click link/option
	                     try
	                     { 
	                           if(driver.findElement(By.id(linkid)).isEnabled())
	                           {
	                            driver.findElement(By.id(linkid)).click();
	                            
	                            
	                            System.out.println(""+linkname+" is clicked ");
	                            report.updateTestLog("Click "+linkname+"", ""+linkname+" is clicked", Status.DONE);
	                            
	                            
	          	    		   
	                           }else
	                           {
	                                  System.out.println(""+linkname+" is not enabled ");
	                               report.updateTestLog(""+linkname+"", ""+linkname+" is not enabled", Status.DONE);
	                           }
	                     }
	                     catch(Exception e)
	                     {
	                           if(driver.findElement(By.xpath(linkid)).isEnabled())
	                           {
	                             driver.findElement(By.xpath(linkid)).click();
	                             System.out.println(""+linkname+" xpath  is clicked ");
	                             report.updateTestLog("Click "+linkname+"", ""+linkname+" is clicked", Status.DONE);
	                           }else
	                           {
	                                  System.out.println(""+linkname+" is not enabled ");
	                               report.updateTestLog(""+linkname+"", ""+linkname+" is not enabled", Status.DONE);
	                           }
	                     }
	                     Thread.sleep(10000);
	                     
	                     String filepath = dataTable.getData("General_Data", "DownloadFilePath");
	                     System.out.println("Download filepath given is: " +filepath);
	                     
	                     //Verify the download
	                         File theNewestFile = null;
	                         File dir = new File(filepath);
	                      String ext = ""+extension+"";
	                      FileFilter fileFilter = new WildcardFileFilter("*." + ext);
	                      File[] files = dir.listFiles(fileFilter);

	                      if (files.length > 0) {
	                          /** The newest file comes first **/
	                          Arrays.sort(files, LastModifiedFileComparator.LASTMODIFIED_REVERSE);
	                          theNewestFile = files[0];
	                      }
	                           
	                                  FileInputStream fs = new FileInputStream(theNewestFile);
	                                  
	                                  String filename1 = theNewestFile.getName();
	                                  
	                             System.out.println("File Downloaded is: " +filename1);
	                             report.updateTestLog("Downloaded File Name", "File Downloaded is: " +filename1, Status.DONE);
	                             
	                             //Compare downloaded file name with text
	                             if(filename1.contains(text))
	                             {
	                                  System.out.println("Downloaded File is Success");
	                                  report.updateTestLog("File Download", "File "+filename1+" downloaded is as expected", Status.PASS);
	                                  
	                                  Thread.sleep(3000);
	                             }
	                             else
	                             {
	                                  System.out.println("File downloaded is "+filename1+" not as expected "+text+"");
	                                  report.updateTestLog("File Download", "File downloaded is "+filename1+" not as expected "+text+"", Status.FAIL);
	                             }
	              }
	              catch(Exception e)
	              {
	                     System.out.println("Download Fails due to: " +e);
	                     report.updateTestLog("File Download", "Download Fails due to: " +e, Status.FAIL);
	              }
	       }
	



public void DownloadValidation_xpath(String linkname, String linkid,String text,String extension)
{
       try
       {
              //Get the File name to download to download
          //   String text = driver.findElement(By.xpath(txtxpath)).getText();
          //  String text = dataTable.getData("General_Data", ""+filename+"");
              
              System.out.println("Text is: " +text);
              
              //click link/option
              try
              { 
                    if(driver.findElement(By.xpath(linkid)).isEnabled())
                    {
                     driver.findElement(By.xpath(linkid)).click();
                     System.out.println(""+linkname+" is clicked ");
                     report.updateTestLog("Click "+linkname+"", ""+linkname+" is clicked", Status.PASS);
                     
                   /*//click on okay button(your payslip is password protected)
                       Thread.sleep(2000);
    	      		   driver.findElement(By.xpath("//*[@id='downloadPayslip']//button[@id='btnokaydownload']")).click();
    	    		   System.out.println("Your payslip is password protected message is displayed");
    	    		   report.updateTestLog("click on okay button in payslip", "okay button is clicked in payslip", Status.PASS);
                     
                     */
                     
                    }else
                    {
                           System.out.println(""+linkname+" is not enabled ");
                        report.updateTestLog(""+linkname+"", ""+linkname+" is not enabled", Status.FAIL);
                    }
              }
              catch(Exception e)
              {
                    if(driver.findElement(By.xpath(linkid)).isEnabled())
                    {
                      driver.findElement(By.xpath(linkid)).click();
                      System.out.println(""+linkname+" xpath  is clicked ");
                      report.updateTestLog("Click "+linkname+"", ""+linkname+" is clicked", Status.DONE);
                    }else
                    {
                           System.out.println(""+linkname+" is not enabled ");
                        report.updateTestLog(""+linkname+"", ""+linkname+" is not enabled", Status.DONE);
                    }
              }
              Thread.sleep(10000);
              
              String filepath = dataTable.getData("General_Data", "DownloadFilePath");
              System.out.println("Download filepath given is: " +filepath);
              report.updateTestLog("Download filepath", "Download filepath is:"+filepath, Status.PASS);
              
              //Verify the download
                  File theNewestFile = null;
                  File dir = new File(filepath);
               String ext = ""+extension+"";
               FileFilter fileFilter = new WildcardFileFilter("*." + ext);
               File[] files = dir.listFiles(fileFilter);

               if (files.length > 0) {
                   /** The newest file comes first **/
                   Arrays.sort(files, LastModifiedFileComparator.LASTMODIFIED_REVERSE);
                   theNewestFile = files[0];
               }
                    
                           FileInputStream fs = new FileInputStream(theNewestFile);
                           
                           String filename1 = theNewestFile.getName();
                           
                      System.out.println("File Downloaded is: " +filename1);
                      report.updateTestLog("Downloaded File Name", "Payslip Downloaded is in pdf format: " +filename1, Status.PASS);
                      
                      //Compare downloaded file name with text
                      if(filename1.contains(text))
                      {
                           System.out.println("Downloaded File is Success and viewed in pdf format");
                           report.updateTestLog("File Download", "File "+filename1+" downloaded is as expected", Status.PASS);
                           
                           Thread.sleep(3000);
                      }
                      else
                      {
                           System.out.println("File downloaded is "+filename1+" not as expected "+text+"");
                           report.updateTestLog("File Download", "File downloaded is "+filename1+" not as expected "+text+"", Status.FAIL);
                      }
       }
       catch(Exception e)
       {
              System.out.println("Download Fails due to: " +e);
              report.updateTestLog("File Download", "Download Fails due to: " +e, Status.FAIL);
       }
}

	    	   //  1.1 login to page select country and click on manage pay slip
	       
	    	   	       public void select_country_and_managePayslip()

	    	   	       {
	    	   	    	   
	    	   	    	   report.addTestLogSubSection("Country selection and Manage payslip tile validation");
	    	   	    	try 
	    	   			{
	    	   				ArrayList<String> List= new ArrayList<String>();
	    	   				
	    	   				List.add("Australia");
/*	    	   				List.add("Dubai");
	    	   				List.add("Abu Dhabi");
	    	   				List.add("Japan");
	    	   				List.add("New Zealand");
	    	   				List.add("Philippines");
	    	   				List.add("Saudi Arabia");
	    	   				List.add("South Korea");
	    	   				List.add("Thailand");*/
	    	   					    	   				//clickOnButton(country_dropdown_button);
	    	   				//String country_name= "Philippines";
	    	   				
	    	   				for (int j = 0; j < List.size(); j++) {
	    	   				String country_name = List.get(j);
	    	   				
	    	   				driver.findElement(By.id("arrowImg")).click();
	    	   	   			System.out.println("Country arrow clicked");
	    	   	   			Thread.sleep(1000);
	    	   	   			
	    	   	   			List<WebElement> country_name1 = driver.findElements(By.xpath("//ul[@class='dropdown-menu dropdown220']/li"));
	    	   	   			
	    	   	   			
	    	   	   			for (WebElement CC : country_name1) {
	    	   	   				if (CC.getText().equals(country_name)) {
	    	   	   					System.out.println(CC.getText());
	    	   	   					report.updateTestLog("Country Name", "Country Name selected is: " + CC.getText(), Status.DONE);
	    	   	   					CC.click();
	    	   	   					Thread.sleep(2000);
	    	   	   					break;
	    	   	   				}
	    	   	   				else
	    	   	   				{
	    	   	   					//Do nothing
	    	   	   				}
	    	   	   			}
	    	   			
	    	   			//To click on the manage pay slip
	    	   	   	
	    	   			//driver.findElement(By.xpath("//*[@id='tileContainer']/div[6]")).click();
	    	   			driver.findElement(By.xpath("//label[contains(text(),'Manage Payslip')]")).click();
	    	   			System.out.println("Manage payslip is clicked");
	    	   			report.updateTestLog("Click on manage payslip", "User have access to this country", Status.PASS);
	    	   			
	    	   			//*[@id='tileContainer']/div[2]/label
	    	   			//*[@id='tileContainer']/div[3]
	    	   			Thread.sleep(3000);
	    	   				}
	    	   		   }
	    	   		   catch(Exception e)
	    	   			{
	    	   				System.out.println("Exception in Login page - " +e.getMessage());
	    	   				report.updateTestLog("Exception ", "Exception in Login page - " +e.getMessage(), Status.FAIL);
	    	   			}
	    	   	       } 
	    	    

//6.Method to upload page should contain the below following contents
	       
	      public void UploadType()
	    {
	    	  report.addTestLogSubSection("Upload type validation");
		try
		{
			
			
  		  Thread.sleep(3000);
  		  
			driver.findElement(By.xpath("//*[@id='AdminTab1']/a")).click();
			System.out.println("upload page is clicked");
			
			//Method to know contents are present in upload type dropdown
			
			  
			 
					Select sel= new Select(driver.findElement(By.xpath("//*[@id='uploadtypeselpayslip']")));
							int i=1;
							for (WebElement DD : sel.getOptions())
							{
								WebElement selectedcountry=driver.findElement(By.xpath("//*[@id='countrySelect']"));
								String selectedcountrys=selectedcountry.getText().trim();
								if(selectedcountrys.contains("Philippines"))
								{
									String P_DDvalue= dataTable.getData("General_Data" , "P_DDvalue"+i);
									if(DD.getText().contains(P_DDvalue))
									{
										System.out.println("Drop down Values are - " + DD.getText());
										report.updateTestLog("drop down values in Upload type", "Drop down Values are - " + DD.getText(), Status.PASS);
										
									}
								}
								else
								{
									String DDvalue= dataTable.getData("General_Data" , "DDvalue"+i);
									if(DD.getText().contains(DDvalue))
									{
										System.out.println("Drop down Values are - " + DD.getText());
										report.updateTestLog("drop down values in Upload type", "Drop down Values are - " + DD.getText(), Status.PASS);
										
									}
									
								}
								i++;
							
							
							}  
				 

			
		}
		catch(Exception e)
		{
			System.out.println("Exception in Upload Type - " +e.getMessage());
			report.updateTestLog("Exception ", "Exception in Upload Type - " +e.getMessage(), Status.FAIL);
		}
	    }

//7.Upload template displays when salary register is selected
	      
          public void FileType()
      {
        	  report.addTestLogSubSection("File type validation");
	   try
	  {
		/*//select the "salary register" from file type
		   String selectedcoutry_value=dataTable.getData("General_Data","country"); 
		   //System.out.println("Dubai");
		   //report.updateTestLog("dubai", "dubai",Status.PASS);
		   report.updateTestLog("Country selection", "Country selected as" + selectedcoutry_value, Status.PASS);
		   //select_country_and_managePayslip();
		  // select_Manage_payslip();
*/
		     Thread.sleep(2000);
		     String selectedcoutry_value=dataTable.getData("General_Data","Country"); 
		String FileType= dataTable.getData("General_Data" , "File_Type");
		System.out.println("File Type is - " +FileType);
		Thread.sleep(3000);
		selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
		report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS);
		
		
		Thread.sleep(3000);
		//System.out.println("selectedcoutry  as" +selectedcoutry_value);
		String str=driver.findElement(By.xpath("//*[@id='templateDownloadLink']")).getText();
		//view the upload template
		
		if(driver.findElement(By.xpath("//*[@id='templateDownloadLink']")).getText().contains(selectedcoutry_value))
		{
			
			System.out.println("Upload Template is displayed  as" +str);
			report.updateTestLog("Upload template is", "Upload Template displayed as :" +str, Status.PASS);
		}
		
    
		
    }
	catch(Exception e)
	{
		System.out.println("Exception in File Type - " +e.getMessage());
		report.updateTestLog("Exception ", "Exception in File Type - " +e.getMessage(), Status.FAIL);
	}
    } 
          
        

//9.user has access to select all the countries
     
          private void select_Mothview() {
			// TODO Auto-generated method stub
			
		}

		public void AccessToCountries(String countryName)
          {
		    report.addTestLogSubSection("Countries selection");
       	   try
       	   {
       		   
       		   System.out.println("Country Name - " +countryName);
      			
      			driver.findElement(By.id("arrowImg")).click();
      			
      			Thread.sleep(1000);
      			
      			List<WebElement> country_name = driver.findElements(By.xpath("//ul[@class='dropdown-menu dropdown220']/li"));
      			
      			
      			for (WebElement CC : country_name) {
      				if (CC.getText().equals(countryName)) {
      					System.out.println("user has access to the country :"+countryName);
      					report.updateTestLog("Country Name", "Country Name selected is: " + CC.getText(), Status.PASS);
      					CC.click();
      					Thread.sleep(2000);
      					//check whether manage pay slip is displayed
      					
      					driver.findElement(By.xpath("//div[contains(@class,'epayManagePayslipLogo')] "));
      					System.out.println("Manage payslip is displayed in Main page");
      					report.updateTestLog("Display the manage payslip", "Manage Payslip is Displayed", Status.PASS);
      					
      					
      					break;
      				}
      				else
      				{
      					//Do nothing
      				}
      			 
      			} 
         
       	   }
          
   				
       
       catch(Exception e)
   	{
   		System.out.println("Exception in File Type - " +e.getMessage());
   		report.updateTestLog("Exception ", "Exception in File Type - " +e.getMessage(), Status.FAIL);
   	}
       } 
       
//Template should be downloaded to local PC and it should be as attached format  
       
          public void uploadpayslip_downloadTeamplate()
       {
        	  
        	  report.addTestLogSubSection("Uploadpayslip_downloadTeamplate validation");
    	   try
    	   {
    		   //select_country_and_managePayslip();
    		   
    		   Thread.sleep(2000);
   			
   			String FileType= dataTable.getData("General_Data" , "File_Type");
   			System.out.println("File Type is - " +FileType);
   			
   			selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
   			report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS); 
   			Thread.sleep(10000);
   			  
   			 String selectedcoutry1=driver.findElement(By.xpath("//*[@id='countrySelect']")).getText().trim();
   			    			
   			 DownloadValidation("UploadPayslip Download teamplate", "templateDownloadLink",selectedcoutry1+"_Salary Register_Template", "xlsx"); 
   			 
    	   }
    	   catch(Exception e)
    	   {
    		   System.out.println("template downloaded as expected: " +e);
               report.updateTestLog("File not Download", "Download Fails due to: " +e, Status.FAIL);  
    	   }
       }
 
          // to check manage components on the upload payslip template
          public void Managecomponentsverification_uploadpaysliptemp()
          {
        	  
           report.addTestLogSubSection("Manage Component validation in upload payslip");
       	   try
       	   {
       		   //select_country_and_managePayslip();
       		   
       		   Thread.sleep(2000);
      			
      			String FileType= dataTable.getData("General_Data" , "File_Type");
      			System.out.println("File Type is - " +FileType);
      			
      			selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
      			report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS); 
      			Thread.sleep(10000);
      			  
      			 String selectedcoutry1=driver.findElement(By.xpath("//*[@id='countrySelect']")).getText().trim();
      			    			
      			 DownloadValidation("UploadPayslip Download template", "templateDownloadLink",selectedcoutry1+"_Salary Register_Template", "xlsx"); 
      			 
       	   }
       	   catch(Exception e)
       	   {
       		   System.out.println("template downloaded as expected: " +e);
                  report.updateTestLog("File not Download", "Download Fails due to: " +e, Status.FAIL);  
       	   }
          }
       
          
 //20. Upload type as 'Additional Payroll 3' and Set the File types as 'Salary Register'
       
         public void Additional_payroll()
       {
    	   try
    	   {
    		   select_country_and_managePayslip(); 
    		   
    		   //click on 19 button arrow
    		   
    		   driver.findElement(By.id("monthview")).click();
    		   driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/thead/tr[2]/th[1]")).click();
    		  
    		   //select november month from calender
    		   
    		  
    		   driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/tbody/tr/td/span[10]")).click();
    		   
    		   
    		 /*//selecting regular payroll from the dropdown
      		   String regular_payroll= dataTable.getData("General_Data" , "Upload_regular_payroll");
			   System.out.println("Upload Type is - " +regular_payroll);
	
			   
			   selectDropDownWebElement(driver.findElement(By.id("uploadtypeselpayslip")),regular_payroll);
			   report.updateTestLog("Selected File Type is", "File Type is - " +regular_payroll, Status.PASS); */
    		   
    		   //select additional payroll from dropdown
    		   String add_payroll= dataTable.getData("General_Data" , "Upload_type");
			   System.out.println("Browser File for additional payroll3 - " +add_payroll);
	
			   
			   selectDropDownWebElement(driver.findElement(By.id("uploadtypeselpayslip")),add_payroll);
			   report.updateTestLog("Selected File Type is", "File Type is - " +add_payroll, Status.PASS);
			   
			   
               //select salary register from dropdown
			   
				String FileType= dataTable.getData("General_Data" , "File_Type");
				System.out.println("File Type is - " +FileType);
				
				selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
				report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS);
				
				Thread.sleep(3000);
				
   			  //click on broswer and goto downlaods and select the .xlsx file and click on update payroll
              //Click on Browse button
			   driver.findElement(By.id("get_file")).click();
			   System.out.println("Browse button is clicked");
			   report.updateTestLog("Click on Browse button", "Browse button is clicked", Status.DONE);
			   
			   //getting the file path from excel sheet
			    
			   String country_name= dataTable.getData("General_Data" , "Country_Name");
			   System.out.println("Browser File for additional payroll3 - "+country_name);
		       Thread.sleep(2000);
		       String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx"; 

			   StringSelection stringSelection = new StringSelection(file_path);
			   Toolkit.getDefaultToolkit().getSystemClipboard().setContents(stringSelection,null);
			   Robot robot = new Robot(); 

			   //To press ctrl+v
			   robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
			   robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			   robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
			   robot.keyPress(java.awt.event.KeyEvent.VK_V);
			   robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);

			   Thread.sleep(2000);
			   
			   //Press Enter
			   robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
			
			   Thread.sleep(3000);
			    
			  //this is to click on upload button
			  driver.findElement(By.xpath("//input[@id='updatebtn']")).click();
			  
			  Thread.sleep(3000);
			  
			  //this is to check the success message pop up
			  //Data has been uploaded successfully
			 String modal=driver.findElement(By.xpath("//*[@id='message']")).getText();
			 System.out.println("success message" +modal);
			 
			 Thread.sleep(5000);
			 if(modal.equals("Data has been Uploaded Successfully"))
			 {
				 System.out.println("PASS");
				 report.updateTestLog("Verify the success mesage", "Success message displayed- " +modal, Status.PASS);
			 }
				
			 else
			 {
				 System.out.println("FAIL");
//				 report.updateTestLog("Verify the success mesage", "Success message is not displayed- ", Status.FAIL); 
			 }
			 
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.visibilityOf(Ok_button)); 
			 driver.findElement(By.xpath("//*[@id='uploadmessage']")).click();
			 report.updateTestLog("Click on Ok button", "Ok button is clicked", Status.DONE);
			 
    	   }
    	   catch(Exception e)
    	   {
    		   
    		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
    		   
    		   
    	   }
       }
       
       //21.Upload type as 'Additional Payroll 3' and Set the File types as 'Salary Register'
       //verify the unable to process message
       
       
      
          public void Additional_payroll_unabletoprocess_display()
               {
        	  report.addTestLogSubSection("Additional_payroll_unabletoprocess_display validation");
                     try
                     {
                        /* //method to select country and click on manage pay slip tab
                    
                    //select_country_and_managePayslip();
                         Thread.sleep(2000);
                         
                         driver.findElement(By.id("monthview")).click();
                        driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/thead/tr[2]/th[1]")).click();
                         
                           //select november month from calender
                           
                          
                           driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/tbody/tr/td/span[11]")).click();
                           
                          
                         //if country is phillipines
                         String countrycontains= dataTable.getData("General_Data" , "Country_Name");
                     if(countrycontains.equals("Philippines")){
                          
                     String phillip_payroll= dataTable.getData("General_Data" , "P_DDvalue1");
                           System.out.println("Upload Type is - " +phillip_payroll);
            
                           selectDropDownWebElement(driver.findElement(By.id("uploadtypeselpayslip")),phillip_payroll);
                           report.updateTestLog("Selected File Type is", "File Type is - " +phillip_payroll, Status.PASS);  
                    }
            */         //else
                     {
                           //select additional payroll from dropdown
                           String add_payroll= dataTable.getData("General_Data" , "Upload_type");
                           System.out.println("Browser File for additional payroll3 - " +add_payroll);
            
                           
                           selectDropDownWebElement(driver.findElement(By.id("uploadtypeselpayslip")),add_payroll);
                           report.updateTestLog("Selected Upload Type is", "Upload Type is - " +add_payroll, Status.PASS);
                     }
                     
                       //select salary register from dropdown
                           
                              String FileType= dataTable.getData("General_Data" , "File_Type");
                              System.out.println("File Type is - " +FileType);
                              
                              selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
                              report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS);
                              
                             
                              Thread.sleep(3000);
               				 String selectedcoutry1=driver.findElement(By.xpath("//*[@id='countrySelect']")).getText().trim();
               				DownloadValidation("UploadPayslip Download teamplate", "templateDownloadLink",selectedcoutry1+"_Salary Register_Template", "xlsx"); 
               				
               				
               			//Get the latest downloaded file
                            String filepath = dataTable.getData("General_Data", "DownloadFilePath");
                            System.out.println("Download filepath given is: " +filepath);
                              
                              //Verify the download
                              File theNewestFile1 = null;
                              File dir1 = new File(filepath);
                              String ext1 = "xlsx";
                              FileFilter fileFilter1 = new WildcardFileFilter("*." + ext1);
                              File[] files1 = dir1.listFiles(fileFilter1);

                              if (files1.length > 0) 
                              {
                              /** The newest file comes first **/
                              Arrays.sort(files1, LastModifiedFileComparator.LASTMODIFIED_REVERSE);
                              theNewestFile1 = files1[0];
                               }
                                    
                              FileInputStream fs1 = new FileInputStream(theNewestFile1);
                              System.out.println(fs1);
                                          
                              String filename2 = theNewestFile1.getName();
                                          
                              System.out.println("File Downloaded is: " +filename2);
                             report.updateTestLog("Downloaded File Name", "File Downloaded is: " +filename2, Status.DONE);

                              String Finalfilename = filepath + filename2 ; 
                              System.out.println("Final updated file - " + Finalfilename);
                              report.updateTestLog("Final updated File Name", "Final updated File Name: " +Finalfilename, Status.DONE);

                         //click on broswer and goto downlaods and select the .xlsx file and click on update payroll
                      //Click on Browse button
                           driver.findElement(By.id("get_file")).click();
                           System.out.println("Browse button is clicked");
                           report.updateTestLog("Click on Browse button", "Browse button is clicked", Status.DONE);
                        /*   
                           //getting the file path from excel sheet
                         String country_name= dataTable.getData("General_Data" , "Country_Name");
                           System.out.println("Browser File for additional payroll3 - "+country_name);
                         Thread.sleep(2000);
                         String file_path = System.getProperty("user.dir")+ "\\invalidtemplates\\"+country_name+"_Salary Register_Template21.xlsx"; 
                        */   Thread.sleep(5000);
                           StringSelection stringSelection = new StringSelection(Finalfilename);
                           Toolkit.getDefaultToolkit().getSystemClipboard().setContents(stringSelection,null);
                           Robot robot = new Robot();
                         
                           //To press ctrl+v
                           robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
                           robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
                           robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
                           robot.keyPress(java.awt.event.KeyEvent.VK_V);
                           robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);

                           Thread.sleep(3000);
                           
                           //Press Enter
                           robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
                        
                           Thread.sleep(3000);
                           
                          //this is to click on upload button
                           if(upload_button.isDisplayed())
                            {
                                 upload_button.click();
                            }
                            else if(update_button.isDisplayed())
                            {
                              update_button.click();
                            }
                            else
                            {
                              System.out.println("Already a template is pending for Request Publish, Please proceed accordingly");
                              Assert.fail();
                            } 
                          
                          Thread.sleep(3000);
                          
                          //this is to check the success message pop up
                          //Data has been uploaded successfully
                         String modal2=driver.findElement(By.xpath("//*[@id='noDataPopup']//*[@id='message']")).getText();
                         System.out.println("Error message"  +modal2);
                         
                         if(modal2.equals("Unable to process the request"))
                         {
                               System.out.println("PASS");
                               report.updateTestLog("Verify the Error mesage", "Error message displayed- " +modal2, Status.PASS);
                         }
                              
                         else
                         {
                               System.out.println("FAIL");
                               report.updateTestLog("Verify the Error mesage", "Error message is not displayed- ", Status.FAIL); 
                         }
                         OKAYbutton.click();
                     

                     }
                     catch(Exception e)
                     {
                           
                           report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
                           
                           
                     }
               }

         //22. select regular payroll and salary register and click on update payroll button
         //verify pleas choose the required file and click upload should display
         
         public void please_chooseRequiredFile_message()
         {
        	 report.addTestLogSubSection("please_chooseRequiredFile_message validation");
      	   try
      	   {   
      		   Thread.sleep(2000);
               //selecting regular payroll from the dropdown
      		   String regular_payroll= dataTable.getData("General_Data" , "Upload_type");
			   System.out.println("Upload Type is - " +regular_payroll);
	
			   
			   selectDropDownWebElement(driver.findElement(By.id("uploadtypeselpayslip")),regular_payroll);
			   report.updateTestLog("Selected upload Type is", "upload Type is - " +regular_payroll, Status.PASS); 
      		   
			   //select salary register from dropdown
			   Thread.sleep(1000);
 				String FileType= dataTable.getData("General_Data" , "File_Type");
 				System.out.println("File Type is - " +FileType);
 				
 				selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
 				report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS);
 				
 				
 				 //this is to click on upload button
 				if(upload_button.isDisplayed())
 			    {
 					
 			     clickOnButton(upload_button);
 			    }
 			    else if(update_button.isDisplayed())
 			    {
 			    	
 			     clickOnButton(update_button);
 			    }
 			    else
 			    {
 			     System.out.println("Already a template is pending for Request Publish, Please proceed accordingly");
 			     Assert.fail();
 			    }
 	  			  
 	  			  Thread.sleep(3000);
 	  			  
 	  			 String message_modal=driver.findElement(By.xpath("//*[@id='message']")).getText();
 	  			 System.out.println("Error message: "  +message_modal);
 	  			 
 	  			 if(message_modal.equals("Please choose the required file and click the upload"))
 	  			 {
 	  				 System.out.println("PASS");
 	  				 report.updateTestLog("Verify the Error mesage", "Error message displayed- " +message_modal, Status.PASS);
 	  			 }
 	  				
 	  			 else
 	  			 {
 	  				 System.out.println("FAIL");
 	  				 report.updateTestLog("Verify the Error mesage", "Error message is not displayed- ", Status.FAIL); 
 	  			 }
 	  			Thread.sleep(3000);
 			    OKAYbutton.click();
 			    
 	  			 
 	      	   
      		   
    	   }
      
       catch(Exception e)
  	   {
  		   
  		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
  		   
  	   }
    
         }
     
         //27.upload excel sheet and click on request publish button
        
         
         
         //To find particular row text and click
         public void To_Find_Row_number()
         {	
         try
         {
        	 WebDriverWait wait = new WebDriverWait(driver,30);
        	 String Country_name=dataTable.getData("General_Data" , "Country");
        		System.out.println(Country_name);
        		String date = dataTable.getData("General_Data", "period");
        		System.out.println(date);
        		String type = dataTable.getData("General_Data", "Upload_type");
        		System.out.println(type);
        	  

        	 //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
        	 if(driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr")).size()!=0)
        	 {
        	 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td"));
        	 int count=rows.size();
        		System.out.println("Count is:"+count);
        		
        		int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']//ul/li")).size();
        		System.out.println(num_of_clicks);
        		outer: for(int j =1; j< num_of_clicks; j++)
        		{
        			
        			inner:for(int i=1;i<=4;i++)
        			 {

	

        		 WebElement country = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[1]"));
        		    WebElement period = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[2]"));
        		    WebElement upload_type = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[4]"));
        		    
//String Country_name=dataTable.getData("General_Data" , "Country");
if(country.getText().trim().contains(Country_name.trim()))
{
	System.out.println("country selected as :"+ Country_name);
report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);

	HighlightElement_green(country);
//	String date = dataTable.getData("General_Data", "period");
    if(period.getText().trim().contains(date.trim()))
    {
    	System.out.println("period selected as :" + date);
    report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
    
    HighlightElement_green(period);
    //String type = dataTable.getData("General_Data", "Upload_type");
    
    if(upload_type.getText().trim().contains(type.trim()))
    {
    	System.out.println("Upload type selected as: "+ type);
    report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
    
    HighlightElement_green(upload_type);
    driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[7]/div/div[contains(@class,'moreicon')]")).click();
    System.out.println("Action button is clicked");
    report.updateTestLog("click on action button", "Action button is clicked", Status.PASS);
    Thread.sleep(3000);
    //driver.findElement(By.xpath("//ul[@class='dropdown-menu customdropmenu']/li[contains(text(),'PUBLISH')]")).click();
    driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[7]//ul/li[contains(text(),'PUBLISH')]")).click();
    System.out.println("Publish button is clicked");
    report.updateTestLog("Publish on action button", "Publish button is clicked", Status.PASS);
    Thread.sleep(3000);
    /*****Handling alert*****/
    checking_alert();
    Thread.sleep(3000);
    if(upload_type.getText().trim().contains(type.trim()))
    {
    break inner;
    }

}

        	 }
         }
if(rows.size()<=4)
{
	break outer;
}
        	 }
         
        	 driver.findElement(By.xpath("//*[@id='dirPaginationRight']")).click();
        	 Thread.sleep(2000);
          
        	 }
        	 }
        	 else
        	 {
        		 System.out.println("All the reports are published");
        		 report.updateTestLog("Validate published records", "All the reports are published", Status.PASS);
        	 }
         }
         catch(Exception e)
   	   {
   		   
   		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
   		   
   	   }}
     
/*         if(count==i)
         {
         	  if(pagination_locator.isDisplayed())
         	  {	   
         		  	List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul/li"));
         		  	if(pagination_count.size()==k)
         		  	{
         		  		
         		  	}
         		  	else
         		  	{
         			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul/li["+k+"]/a"));
         			 // System.out.println("K value is :"+k);
         			  if(Page_Number.isEnabled()==false)
         			  {
         				  System.out.println("Last button reached");
         				  
         			  }
         			  
         			  if(Page_Number.isEnabled()==true)
         			  {   //System.out.println("Page no is displayed");
         				  driver.findElement(By.xpath("//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul/li["+k+"]/a")).click();
           			  k++;  
           			  *//****assigning i value as 0 for the next page table verification*****//*
           			  i=0;
         			  }
         			  else
         			  {
         				  System.out.println("No more buttons available in Pagination or Button is not enabled");
         			  } 
         		  	}
           	}
           	  	  
         	}
         else
         	{
         		System.out.println("No other pages available hereafter");
         	}
}
*/

         
	public void request_publish()
      {
    	  try
    	  {
    		  //HomePage();  
    		//Additional_payroll();
    		
    		Thread.sleep(4000);
    		
    		//click on the request publish button
    		/*driver.findElement(By.id("RequestPublish")).click();
    		 System.out.println("RequestPublish button is clicked");
    		 report.updateTestLog("RequestPublish button", "RequestPublish button is clicked", Status.PASS);
    		 
    		 driver.navigate().refresh();
    		*/ 
    		//HomePage();
    		driver.navigate().refresh();
    		 Thread.sleep(3000);
    		 select_Manage_payslip();
    		 Thread.sleep(6000);
    		 //click on publish/send back tab
    		 driver.findElement(By.xpath("//a[text()='Publish/ Send Back']")).click();
    		 System.out.println("Publish/Send back tab is clicked");
    		 report.updateTestLog("click on publish/send back tab", "publish/send back tab is clicked", Status.DONE);
    		 
    		
    		
    		 Thread.sleep(3000);
    		
    		 To_Find_Row_number();
    		
    	  
      
    		 Thread.sleep(3000);
    		 
    		
    		 
			
				//*[@id="updatebtn"]
				//is displayed or npot check
    		 
    		 //click on that upload pay slip tab
    		 
    		 driver.findElement(By.xpath("//*[@id='AdminTab1']/a")).click();
    		 System.out.println("upload pay slip tab is clicked");
    		 report.updateTestLog("click on upload payslip tab", "upload payslip tab is clicked", Status.DONE);
    		 
    		//select november month from calender
  		   Thread.sleep(2000);
  		   /*driver.findElement(By.id("monthview")).click();
  		   driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/tbody/tr/td/span[11]")).click();*/
  		   Month_Year_Selection();
  		     		   
  		  Thread.sleep(2000);
		   //select additional payroll from dropdown
		   String add_payroll= dataTable.getData("General_Data" , "Upload_type");
		   System.out.println("Browser File for additional payroll3 - " +add_payroll);

		   Thread.sleep(2000);
		   selectDropDownWebElement(driver.findElement(By.id("uploadtypeselpayslip")),add_payroll);
		   report.updateTestLog("Selected File Type is", "File Type is - " +add_payroll, Status.PASS);
		   
		   
           //select salary register from dropdown
		   
		   Thread.sleep(2000);
			String FileType= dataTable.getData("General_Data" , "File_Type");
			System.out.println("File Type is - " +FileType);
			
			selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
			report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS);
			
  		   
    		 
				 Thread.sleep(3000);
				 
				WebElement Dis =driver.findElement(By.id("updatebtn"));
				if(Dis.isDisplayed())
				{
					System.out.println("updatebtn button is displayed");
					report.updateTestLog("updatebtn button should be displayed ", "updatebtn button is displayed", Status.DONE);
				}
				else
				{
					System.out.println("updatebtn button is not displayed");
					report.updateTestLog("updatebtn button not displayed ", "updatebtn button is not displayed", Status.DONE);
				}
    	  }
      
      catch(Exception e)
 	   {
 		   
 		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
 		   
 	   }
   
        }   
      
	
	private void Month_Year_Selection() {
		// TODO Auto-generated method stub
		try 
		{
			/*Thread.sleep(2000);
			MonthView.click();
			System.out.println("calendar icon clicked");
			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
			List_Selection(Month_Name, month_xpath, "Calender");
			
			System.out.println("Selected Month:" +Month_Name);			
			report.updateTestLog("verify Monthview Calender", "Previous Month selected as:" +Month_Name , Status.DONE);
		*/	
			Thread.sleep(5000);
			MonthView.click();
			System.out.println("calendar icon clicked");
			report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
			String Month2 = dataTable.getData("General_Data", "Decade");
			System.out.println("Decade selected as "+Month2);
			report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.DONE);
			//Click on Year Header
			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
			//System.out.println("1 click");
			Thread.sleep(5000);
			driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
			//System.out.println("2 click");
			Thread.sleep(5000);
			driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
			//System.out.println("3 click");
			String Year1 = dataTable.getData("General_Data", "Year");
			System.out.println("Year selected as"+Year1);
			report.updateTestLog("Year selection", "Year selected as"+Year1, Status.DONE);
			driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[@class='year focused']")).click();
			//System.out.println("2020 clicked");
			Thread.sleep(5000);
			/*driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
			System.out.println("4 click");*/
			/*Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).getText();
			System.out.println("4 click");
			Thread.sleep(2000);
			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
			Thread.sleep(2000);*/
			//Select Year
			/*String Year1 = dataTable.getData("General_Data", "Year");
			System.out.println("Year selected as "+Year1);
			Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
			Thread.sleep(2000);*/

			//Select Month
			String Month1 = dataTable.getData("General_Data", "MonthSelection");
			System.out.println("Month selected as "+Month1);
			report.updateTestLog("Month selection", "Month selected as "+Month1, Status.DONE);
			Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
			Thread.sleep(2000);
	
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("verify Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
		
		
	}

		
	

	
	@FindBy(xpath="//div[contains(@class,'epayManagePayslipLogo')]")
	public WebElement Manage_payslip_menu; 
	
	public void select_Manage_payslip() 
	{
		try 
		{
			clickOnButton(Manage_payslip_menu);
			//Thread.sleep(5000);
			System.out.println("Manage Payslip selected");
			report.updateTestLog("Manage payslip", "Manage payslipe selected ", Status.DONE);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Click on Managepayslip button", "Clicking manage payslip having probelm" +e.getMessage() , Status.FAIL);
		}
		
		
	}
	
	//28.Click on update payroll without making changes in the existing template
      
	

	public void payroll_without_making_changes()
{
		try
		{
		request_publish();
			
		
		 //this is to click on update button
			  driver.findElement(By.xpath("//*[@id='updatebtn']")).click();
			  
		
		 //error message : Please choose the required file and click upload\
			 Thread.sleep(3000); 
			 String message_modal=driver.findElement(By.xpath("//*[@id='message']")).getText();
			 System.out.println("Error message"  +message_modal);
			 
			 if(message_modal.equals("Please choose the required file and click the upload"))
			 {
				 System.out.println("PASS");
				 report.updateTestLog("Verify the Error mesage", "Error message displayed- " +message_modal, Status.PASS);
			 }
				
			 else
			 {
				 System.out.println("FAIL");
				 report.updateTestLog("Verify the Error mesage", "Error message is not displayed- ", Status.FAIL); 
			 }
 	       //Click on that okay button in choose the required file pop up
			 
			 driver.findElement(By.xpath("//button[contains(text(),'Okay')]")).click();
			 System.out.println("Okay button is clicked in choose required file pop up");
			 report.updateTestLog("click oon okay button", "okay button is clicked in please choose file pop up", Status.DONE);
			 
			 Thread.sleep(2000);
			 
			 
			 
			 
			 
			 
			 
			 
			 
		}

			  catch(Exception e)
		 	   {
		 		   
		 		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
		 		   
		 	   }

	   
}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
      //34.Verify whether user can able to access with Mange components page
      
      public void Access_manageComponents_page()
      {
    	  report.addTestLogSubSection(" Manage component access page validation");
    	  try
    	  {
    		  //Method to Login the app
    		  //select_country_and_managePayslip();
    		  
    		  //clicks on manage components tab
    		  driver.findElement(By.xpath("//*[@id='AdminTab6']/a")).click();
    		  System.out.println("Manage components tab is clicked");
    		  report.updateTestLog("Click on Manage components tab", "Manage components tab is clicked", Status.PASS);
    		  Thread.sleep(9000);
    		  //Company_IDselection();
    		  driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
    		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
    		  //clickOnButton(Addcomponent);
    		  Thread.sleep(5000);
    		  
    		  String company = dataTable.getData("General_Data" , "CompanyID");
  			selectValueFromDropDown(Company_dropdown_field, company);
  			System.out.println("Company id selected as:"+company);
  			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);

    		  /*String company = dataTable.getData("General_Data" , "CompanyID");
    		  System.out.println("print"+company);
    			//driver.findElement(By.xpath("//*[@id='companyselpayslip']"));
    		  selectValueFromDropDown(Company_dropdown_field, company);
    			System.out.println("Company id selected as:"+company);
    			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
    		  *///System.out.println("Company ID selection");
    		  Thread.sleep(2000);
    		  
    		  //check whether company field is displayed
    		  //WebElement comp=driver.findElement(By.xpath("//div[@class='row partsmanagecm marginBottom20']/div/label[contains(text(),'Company')]"));
    		  WebElement comp=driver.findElement(By.xpath("//div[@id='addcomponentModalContainer']//select[@id='companyselpayslip']"));
    		      		  if(comp.isDisplayed())
    		  {
    			  System.out.println("Company ID field is displayed in manage components");
    			  report.updateTestLog("Company ID ", "Company ID is displayed", Status.PASS);
    		  }
    		  else
    		  {
    			  System.out.println("Company ID is not displayed in manage components");
    			  report.updateTestLog("Company ID ", "Company ID is not displayed", Status.PASS);
    		  }
    		  //Thread.sleep(3000);
    		  
    		  Thread.sleep(2000);
    		//check whether Component ID field is displayed
    		  WebElement compID=driver.findElement(By.xpath("//div[@class='row partsmanagecmpnt marginBottom20']/div/label[contains(text(),'Component ID')]"));
    		  if(compID.isDisplayed())
    		  {
    			  System.out.println("Component ID field is displayed in manage components");
    			  report.updateTestLog("Component ID ", "Component ID field is displayed", Status.PASS);
    		  }
    		  else
    		  {
    			  System.out.println("Component ID is not displayed in manage components");
    			  report.updateTestLog("Component ID ", "Company ID field is not available", Status.FAIL);
    		  }
    		  
    		  Thread.sleep(2000);
      		//check whether Display Name field is displayed
      		  WebElement Display_name=driver.findElement(By.xpath("//div[@class='row partsmanagecmpnt marginBottom20']/div/label[contains(text(),'Display Name')]"));
      		  if(Display_name.isDisplayed())
      		  {
      			  System.out.println("Display Name field is  displayed in manage components");
      			  report.updateTestLog("Display Name ", "Display Name field is displayed", Status.PASS);
      		  }
      		  else
      		  {
      			  System.out.println("Display Name is not displayed in manage components");
      			  report.updateTestLog("Display Name ", "Display Name field is not available", Status.FAIL);
      		  }
      		  
    		  
      		Thread.sleep(2000);
      		
      		//check whether component type field is displayed
      		  WebElement Comp_type=driver.findElement(By.xpath("//div[@class='row partsmanagecmpnt marginBottom20']/div/label[contains(text(),'Component Type')]"));
      		  if(Comp_type.isDisplayed())
      		  {
      			  System.out.println("component type field is displayed in manage components");
      			  report.updateTestLog("component type ", "component type is displayed", Status.PASS);
      		  }
      		  else
      		  {
      			  System.out.println("component type is not displayed in manage components");
      			  report.updateTestLog("component type", "component type is not displayed", Status.FAIL);
      		  }
      		  
      		//Manage_Components.click();
			Thread.sleep(2000);
			Comp_type.click();
			String Comp_type1 = dataTable.getData("General_Data", "Component_type");
			System.out.println("Component type is:" +Comp_type1);
			report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type1, Status.PASS);
			String Comp_type2 = dataTable.getData("General_Data", "Component_type1");
			System.out.println("Component type is:" +Comp_type2);
			report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type2, Status.PASS);
			String Comp_type3 = dataTable.getData("General_Data", "Component_type2");
			System.out.println("Component type is:" +Comp_type3);
			report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type3, Status.PASS);
			/*Component_ID.sendKeys(ComponentID);
			System.out.println("Component ID entered");*/

      		//*[@id="accordion"]/div[1]/div[1]/h4/a
    	  }
      
      catch(Exception e)
	   {
		   
		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
		   
	   }
  
      }     
      
      public void Company_IDselection() 
  	{
  		try 
  		{
  			Thread.sleep(4000);
  			String company = dataTable.getData("General_Data" , "CompanyID");
  			selectValueFromDropDown(Company_dropdown_field, company);
  			System.out.println("Company id selected as:"+company);
  			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
  			Thread.sleep(3000);
  		} catch (Exception e) {
  			// TODO Auto-generated catch block
  			e.printStackTrace();
  		}
  		
  		
  	}
	//35. Verify user is able to select CTS in company ID
      
      public void Company_CTS()
      {
    	  try
    	  {
    		 
    		  
    		  //Check whether all fields are displayed in manage components tab
    		  Access_manageComponents_page();
    		  
    		  //select CTS from company ID field
    		  String Com_ID_CTS= dataTable.getData("General_Data" , "Company_ID");
  			  System.out.println("Company_ID is Clicked as - " +Com_ID_CTS);
  			
  			  selectDropDownWebElement(driver.findElement(By.xpath("//*[@id='UploadForm']/div/div[1]/div[2]//select[@id='companyselpayslip']")),Com_ID_CTS);
  			  report.updateTestLog("Company_ID should be clicked", "Company_ID is - " +Com_ID_CTS, Status.PASS);
  			
    	  }
    	  
    	  catch(Exception e)
   	   {
   		   
   		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
   		   
   	   }
     
      } 
      
      //45.verify whether approver has access and can able view the uploaded data

      public void Approver_access(){
    	  try
    	  {
    		  /*Thread.sleep(5000);
    		  btnRequestPublish.click();
     		 System.out.println("RequestPublish button is clicked");
     		 report.updateTestLog("btnRequestPublish", "RequestPublish button is clicked", Status.PASS);
     		 */
     		 driver.navigate().refresh();
     		
     		 //click on publish/send back tab
     		 driver.findElement(By.xpath("//a[text()='Publish/ Send Back']")).click();
     		 System.out.println("Publish/Send back tab is clicked");
     		 report.updateTestLog("click on publish/send back tab", "publish/send back tab is clicked", Status.DONE);
     		 
     		 //check whether approver has access to publish/sentback tab
     		 Thread.sleep(2000);
     		  WebElement Approv_access=driver.findElement(By.xpath("//a[text()='Publish/ Send Back']"));
     		  if(Approv_access.isDisplayed())
     		  {
     			  System.out.println("approver has access to publish/sentback tab");
     			  report.updateTestLog("publish/sentback tab ", "approver has access to publish/sentback tab", Status.DONE);
     		  }
     		  else
     		  {
     			  System.out.println("approver has No access to publish/sentback tab");
     			  report.updateTestLog("publish/sentback tab", "approver has No access to publish/sentback tab", Status.DONE);
     		  }
     		
     		 WebElement Country=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[1]"));
     		 if(Country.isDisplayed())
     		 {
     			 System.out.println("Admin is able to view Country");
     		 }
     		 
     		 else
     		 {
     			 System.out.println("Admin has no access for Country field ");
     		 }
     		 
     		 WebElement Period=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[2]"));
     		 if(Period.isDisplayed())
     		 {
     			 System.out.println("Admin is able to view Period");
     		 }
     		 else
     		 {
     			 System.out.println("Admin has no access for Period field ");
     		 }
     		 
     		WebElement Type=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[3]"));
    		 if(Type.isDisplayed())
    		 {
    			 System.out.println("Admin is able to view Type");
    		 }
    		 else
    		 {
    			 System.out.println("Admin has no access for Period Type ");
    		 }
     		 
    		 WebElement Upload_Type=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[4]"));
    		 if(Upload_Type.isDisplayed())
    		 {
    			 System.out.println("Admin is able to view Upload Type");
    		 }
    		 else
    		 {
    			 System.out.println("Admin has no access for Upload Type ");
    		 }
     		 
    		 WebElement Associate_Count=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[5]"));
    		 if(Associate_Count.isDisplayed())
    		 {
    			 System.out.println("Admin is able to view Associate Count");
    		 }
    		 else
    		 {
    			 System.out.println("Admin has no access for Associate Count tab");
    		 }
     		 
    		 WebElement Net_Pay=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[6]"));
    		 if(Net_Pay.isDisplayed())
    		 {
    			 System.out.println("Admin is able to view Net Pay");
    		 }
    		 else
    		 {
    			 System.out.println("Admin has no access for Net Pay tab");
    		 }
     		 
    		 WebElement Action=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[7]"));
    		 if(	Action.isDisplayed())
    		 {
    			 System.out.println("Admin is able to view 	Action");
    		 }
    		 else
    		 {
    			 System.out.println("Admin has no access for Action tab");
    		 }
     		 
     		 
     		 
     		 
     		 
     		 
     		 
     		 
    	  }
     
	  catch(Exception e)
  	   {
  		   
  		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
  		   
  	   }
    
     } 
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      //53.navigate to view payslip and view payslip with below informations like Associate information,earnings and deductions
      
      public void payslip_tile_infirmations()
      {
    	  report.addTestLogSubSection("Payslip tile Information validation");
    	  //try
    	  {
    	
    		  //select_country_and_managePayslip(); 
    		  
    		//click on View payslip tile  
    		  functionalLibrary.sleep(3000);
              if(driver.findElement(By.xpath("//*[@id='tileContainer']/div[5]")).isDisplayed())
              {
            	  driver.findElement(By.xpath("//*[@id='tileContainer']/div[5]")).click(); 
                  System.out.println("View payslip tile is clicked");
                  report.updateTestLog("Click on View payslip tile   ", "View payslip tile is clicked", Status.PASS);
              
              
              }
              else
              {
            	  System.out.println("View payslip tile is not Displayed");
            	  report.updateTestLog("Click on View payslip tile   ", "View payslip tile is not Displayed", Status.FAIL);
              }
             
              
              functionalLibrary.sleep(5000);
              //select_Monthview();   
              //Month_Year_Selection_Viewpayslip();
              //select_Month_year_decade_payslip();
              select_Month_year_decade1();
              
              functionalLibrary.sleep(3000);

                    //selecting regular payroll from the dropdown
                 String regular_payroll1= dataTable.getData("General_Data" , "Payslip_Type");
                       System.out.println("Upload Type is - " +regular_payroll1);
        
                       
                       selectDropDownWebElement(driver.findElement(By.id("associateUploadTypeDropDown")),regular_payroll1);
                       report.updateTestLog("Selected Pay Slip File Type is", "File Type is - " +regular_payroll1, Status.PASS); 
                       
                       functionalLibrary.sleep(5000);
                       //select_Monthview();   
                       //Month_Year_Selection_Viewpayslip();
                       //select_Month_year_decade1();
                       
                       //functionalLibrary.sleep(3000);
                       
                       
                // }
              //Thread.sleep(3000);
                       

                //select november month from calender
                 //driver.findElement(By.id("monthview")).click();
                // Thread.sleep(3000);
                     //driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/thead/tr[2]/th[1]")).click();
                    
                    //Thread.sleep(3000);
                 //driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/tbody/tr/td/span[11]")).click();
                 
                 //this is know year and month get text
                 //String Month_Year1 =driver.findElement(By.xpath("//*[@id='UploadForm']/div/div[1]/div[3]/div[2]")).getText();
                 //System.out.println("Year and Month is :"+Month_Year1);
                
                       //check whether Associate Information tab is displayed
                       //((FunctionalLibrary) Thread).sleep(3000);
                       report.addTestLogSubSection("Payslip Details view tab validation");
                            WebElement Associ_Info=driver.findElement(By.xpath("//*[@id='accordion']/div[1]/div[1]/h4/a"));
                            if(Associ_Info.isDisplayed())
                            {
                                  System.out.println("Associate Information tab is displayed in View Payslip");
                                  report.updateTestLog("Associate Information tab ", "Associate Information tab is displayed", Status.PASS);
                            }
                            else
                            {
                                  System.out.println("Associate Information tab is not displayed in View Payslip");
                                  report.updateTestLog("Associate Information tab", "Associate Information tab is not displayed", Status.FAIL);
                            }
                            functionalLibrary.sleep(2000);
                          //check whether Earnings and Deductions tab is displayed
                            
                           WebElement Earnings=driver.findElement(By.xpath("//*[@id='accordion']/div[2]/div[1]/h4/a"));
                            if(Earnings.isDisplayed())
                            {
                                  System.out.println("Earnings and Deductions tab is displayed in View Payslip");
                                  report.updateTestLog("Earnings and Deductions tab ", "Earnings and Deductions tab is displayed", Status.PASS);
                            }
                            else
                            {
                                  System.out.println("Earnings and Deductions tab is not displayed in View Payslip");
                                  report.updateTestLog("Earnings and Deductions tab", "Earnings and Deductions tab is not displayed", Status.FAIL);
                            }
                
                            functionalLibrary.sleep(2000);
                            //Check whether Beneficiary Data is displayed or not
                            
                          WebElement Beneficiary=driver.findElement(By.xpath("//*[@id='beneficiaryTab']/div[1]/h4/a"));
                            if(Beneficiary.isDisplayed())
                            {
                                  System.out.println("Beneficiary Data tab is displayed in View Payslip");
                                  report.updateTestLog("Beneficiary Data tab ", "Beneficiary Data tab is displayed", Status.PASS);
                            }
                            else
                            {
                                  System.out.println("Beneficiary Data tab is not displayed in View Payslip");
                                  report.updateTestLog("Beneficiary Data tab", "Beneficiary Data is not displayed", Status.FAIL);
                            }
                            functionalLibrary.sleep(2000);
                          //Check whether Year to Date is displayed or not 
                            
                          
                          WebElement YTD=driver.findElement(By.xpath("//*[@id='YTDTabPanel']/div[1]/h4/a"));
                            if(YTD.isDisplayed())
                            {
                                  System.out.println("Year to Date is displayed in View Payslip");
                                  report.updateTestLog("Year to Date tab ", "Year to Date tab is displayed", Status.PASS);
                            }
                            else
                            {
                                  System.out.println("Year to Date tab is not displayed in View Payslip");
                                  report.updateTestLog("Year to Date tab", "Year to Date is not displayed", Status.FAIL);
                            } 
                                  
     }  
        


/*catch(Exception e)
{
     
     report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
     
    }*/

} 
      public void select_Month_year_decade1() 
  	{
    	  
    	  report.addTestLogSubSection("Month Year and Decade selection");
  		try 
  		{
  			Thread.sleep(4000);
              MonthView.click();
              System.out.println("calendar icon clicked");
              report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
              String Month2 = dataTable.getData("General_Data", "Decade");
              System.out.println("Decade selected as "+Month2);
              report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

              //Click on Year Header
              driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
              Thread.sleep(5000);
              driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
              Thread.sleep(5000);
              //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
              Thread.sleep(5000);
              //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
              //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
              //Thread.sleep(5000);
              //Select Year
              String Year1 = dataTable.getData("General_Data", "Year");
              
              Thread.sleep(2000);
       //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
              Thread.sleep(2000);
              System.out.println("Year selected as"+Year1);
              report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
              Thread.sleep(3000);
              //Select Month
              String Month1 = dataTable.getData("General_Data", "MonthSelection");
              
              Thread.sleep(2000);
       driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
              System.out.println("Month selected as "+Month1);
              report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

              Thread.sleep(2000);

  			
  		} catch (Exception e) {
  			// TODO Auto-generated catch block
  			e.printStackTrace();
  			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
  		
  		
  	}

      public void select_Month_year_decade_payslip() 
    	{
    		//try 
    		{
    			functionalLibrary.sleep(4000);
                MonthView.click();
                System.out.println("calendar icon clicked");
                report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
                String Month2 = dataTable.getData("General_Data", "Decade");
                System.out.println("Decade selected as "+Month2);
                report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

                //Click on Year Header
                driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[@class='datepicker-switch']")).click();
                functionalLibrary.sleep(5000);
                driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
                functionalLibrary.sleep(5000);
         //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
                driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
                functionalLibrary.sleep(5000);
                //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
                //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
                //Thread.sleep(5000);
                //Select Year
                String Year1 = dataTable.getData("General_Data", "Year");
                
                functionalLibrary.sleep(2000);
         //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
                driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
                functionalLibrary.sleep(2000);
                System.out.println("Year selected as"+Year1);
                report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
                functionalLibrary.sleep(3000);
                //Select Month
                String Month1 = dataTable.getData("General_Data", "MonthSelection");
                
                functionalLibrary.sleep(2000);
         driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
                System.out.println("Month selected as "+Month1);
                report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

                functionalLibrary.sleep(2000);
    		}
    			
    		} /*catch (Exception e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
    		
    		
    	}
*/
	public void payslip_tile_Download_button()

      
      {
		
		report.addTestLogSubSection("payslip_tile_Download_button validation");
          try
          {
                Thread.sleep(2000);
                
                 // click on Download payslip button 
                      driver.findElement(By.xpath("//*[@id='HomeContainer']/div[1]/form/div[2]/section/div[5]/div")).click();
                     System.out.println("Download button is clicked in view payslip tab");
                     report.updateTestLog("Click on download button", "Download button is clicked", Status.PASS);
                     
                      
                    //*[@id='viewpayslip']/div/section/div[5]/div
                   //*[@id='downloadPayslip']//button[@id='btnokaydownload']
                     Thread.sleep(4000);
                     
                      
                      //click on okay button(your payslip is password protected)
                      driver.findElement(By.xpath("//*[@id='noDataPopup']/div//*[@id='btnokay']")).click();
                System.out.println("Your payslip is password protected message is displayed");
                report.updateTestLog("Payslip password protected message verification", "Your payslip is password protected message is displayed", Status.PASS);
              
               
                 
                
          }
         
          catch(Exception e)
           {
                 
                 report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
                 
           }
      }

    	  
    	  
    	  
    	  
    
    	//55.Associate has to view the payslip in PDF format  
          
      public void Payslip_PDF_Format()
      {
        try
        {
              Thread.sleep(2000);

              //String selectedcoutry_1=driver.findElement(By.xpath("//*[@id='countrySelect']")).getText().trim();
              //System.out.println("selected country:"+selectedcoutry_1);
               
              String selectedcoutry_1=dataTable.getData ("General_data","Country");
              
               if(selectedcoutry_1.contains(" "))
               {
                 String[] country_split=selectedcoutry_1.split(" ");
                 
                    String first=country_split[0];
                    String second=country_split[1];
                    if(country_split.length==1)
                    {
                          DownloadValidation_xpath("Download Payslip", "//div[@class='downloadicon']",selectedcoutry_1+"_Payslip", "pdf");
                    }
                    
                    else
                    {
                    DownloadValidation_xpath("Download Payslip", "//div[@class='downloadicon']",first+"+"+second+"_Payslip", "pdf");
                    
              }
               }
               else
               {
                 DownloadValidation_xpath("Download Payslip", "//div[@class='downloadicon']",selectedcoutry_1+"_Payslip", "pdf");
               }
              
              /*String[] country_split=selectedcoutry_1.split(" ");
              String first=country_split[0];
              String second=country_split[1];
              if(country_split.length==1)
              {
                    DownloadValidation_xpath("Download Payslip", "//div[@class='downloadicon']",selectedcoutry_1+"_Payslip", "pdf");
              }
              
              else
              {
              DownloadValidation_xpath("Download Payslip", "//div[@class='downloadicon']",first+"+"+second+"_Payslip", "pdf");
              
        }*/
               driver.findElement(By.xpath("//*[@id='noDataPopup']/div//*[@id='btnokay']")).click();
        }
        catch(Exception e)
        {
              System.out.println("template downloaded not as expected: " +e);
              report.updateTestLog("File not Download", "Download Fails due to: " +e, Status.FAIL);  
        }
      }
      public void Month_Year_Selection_Viewpayslip(){
    		try 
    		{
    			/*Thread.sleep(2000);
    			MonthView.click();
    			System.out.println("calendar icon clicked");
    			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
    			List_Selection(Month_Name, month_xpath, "Calender");
    			
    			System.out.println("Selected Month:" +Month_Name);			
    			report.updateTestLog("verify Monthview Calender", "Previous Month selected as:" +Month_Name , Status.DONE);
    		*/	
    			Thread.sleep(5000);
    			MonthView.click();
    			System.out.println("calendar icon clicked");
    			report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
    			String Month2 = dataTable.getData("General_Data", "Decade");
    			System.out.println("Decade selected as "+Month2);
    			report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.DONE);
    			Thread.sleep(5000);
    			//Click on Year Header
    			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
    			System.out.println("1 click");
    			Thread.sleep(5000);
    			driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
    			//System.out.println("2 click");
    			Thread.sleep(5000);
    			driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
    			//System.out.println("3 click");
    			String Year1 = dataTable.getData("General_Data", "Year");
    			System.out.println("Year selected as"+Year1);
    			report.updateTestLog("Year selection", "Year selected as"+Year1, Status.DONE);
    			driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[@class='year focused']")).click();
    			//System.out.println("2020 clicked");
    			Thread.sleep(5000);
    			/*driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
    			System.out.println("4 click");*/
    			/*Thread.sleep(2000);
    			driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).getText();
    			System.out.println("4 click");
    			Thread.sleep(2000);
    			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
    			Thread.sleep(2000);*/
    			//Select Year
    			/*String Year1 = dataTable.getData("General_Data", "Year");
    			System.out.println("Year selected as "+Year1);
    			Thread.sleep(2000);
    			driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
    			Thread.sleep(2000);*/

    			//Select Month
    			String Month1 = dataTable.getData("General_Data", "MonthSelection");
    			System.out.println("Month selected as "+Month1);
    			report.updateTestLog("Month selection", "Month selected as "+Month1, Status.DONE);
    			Thread.sleep(2000);
    			driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
    			Thread.sleep(2000);

    			
    		} catch (Exception e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    			report.updateTestLog("verify Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
    		
    		
    	}
      
      public void select_Monthview() 
  	{
  		try 
  		{
  			Thread.sleep(5000);
  			MonthView.click();
  			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
  			List_Selection(Month_Name, month_xpath, "Calender");
  			
  			System.out.println("Month name selected as:" +Month_Name);			
  			report.updateTestLog("Monthview Calender", "Month selected as:" +Month_Name , Status.PASS);
  			
  			
  		} catch (Exception e) {
  			// TODO Auto-generated catch block
  			e.printStackTrace();
  			report.updateTestLog("Clicking Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
  		
  		
  	}
  
      public void selectValueFromDropDown(WebElement element, String dropDownvalue) throws Exception {

  		//try {
  			WebDriverWait wait = new WebDriverWait(driver,10);
  			wait.until(ExpectedConditions.textToBePresentInElement(element, dropDownvalue));
  			if (element.isDisplayed() && element.isEnabled()) {
  				JavascriptExecutor js = (JavascriptExecutor) driver;
  				((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
  				js.executeScript("arguments[0].style.border='2px groove red'", element);
  				js.executeScript("arguments[0].style.border=''", element);
  				Select dropDown = new Select(element);
  				dropDown.selectByVisibleText(dropDownvalue);
  				//System.out.println("Company ID is selected");
  				//report.updateTestLog("Company ID verification", "CTS is selected", Status.PASS);
  			} else {
  				report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
  				Assert.fail();
  			}
}
      
      public void select_Month_year_decade() 
  	{
  		report.addTestLogSubSection("Selection of Month_year_decade by clicking Calendar Icon");
  		try 
  		{
  			Thread.sleep(4000);
              MonthView.click();
              System.out.println("calendar icon clicked");
              report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
              String Month2 = dataTable.getData("General_Data", "Decade");
              System.out.println("Decade selected as "+Month2);
              report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

              //Click on Year Header
              driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
              Thread.sleep(5000);
              driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
              Thread.sleep(5000);
       //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
              
              Thread.sleep(5000);
              //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
              //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
              //Thread.sleep(5000);
              //Select Year
              String Year1 = dataTable.getData("General_Data", "Year");
              	
              Thread.sleep(2000);
       //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
              Thread.sleep(2000);
              System.out.println("Year selected as"+Year1);
              report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
              Thread.sleep(3000);
              //Select Month
              String Month1 = dataTable.getData("General_Data", "MonthSelection");
              
              Thread.sleep(2000);
       driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
              System.out.println("Month selected as "+Month1);
              report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

              Thread.sleep(2000);

  			
  		} catch (Exception e) {
  			// TODO Auto-generated catch block
  			e.printStackTrace();
  			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
  		
  		
  	}}

 package pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.cognizant.framework.Status;

import supportlibraries.ScriptHelper;

public class Manage_components_under_Manage_payslip_page_Australia extends MasterPage_Aus {
	
	public Manage_components_under_Manage_payslip_page_Australia(ScriptHelper scriptHelper) {
		super(scriptHelper);
		// TODO Auto-generated constructor stub
	}



	@FindBy(id="AdminTab6")
	public WebElement Manage_component_tab; 
	
	@FindBy(xpath = "//select[@id='componentselect']")
	public WebElement Component_Type;

	@FindBy(xpath="//div[contains(@class,'submitmanagecmdiv')]/button[contains(@class,'submit')]")
	public WebElement Manage_component_submit_button; 
	
	@FindBy(xpath="//div[@id='addcomponentModalContainer']//select[@id='companyselpayslip']")
	public WebElement Company_dropdown_field1;
	
	@FindBy(xpath = "//a[contains(text(),'Manage Components')]")
	public WebElement Manage_Components;

	@FindBy(id="noDataPopup")
	public WebElement errorpopup;
	
	@FindBy(id="//div[@id='noDataPopup']/div/div/div/div[contains(@id,'message')]")
	public WebElement errorpopup_message;
	
	@FindBy(xpath="//button[contains(@id,'uploadmessage')]")
	public WebElement Error_ok_button;
	
/*	@FindBy(id="ComponentIDinput")
	public WebElement ComponentID_field;*/
	
	@FindBy(xpath = "//*[@id='ComponentIDinput']")
	public WebElement ComponentID_field;
	
	/*@FindBy(id="DisplayNameinput")
	public WebElement DisplayName_field;*/
	
	@FindBy(xpath = "//div[@id='addcomponentModalContainer']//button[@ng-click='submitComponent()']")
	public WebElement Submit;
	
	@FindBy(xpath = "//input[@id='DisplayNameinput']")
	public WebElement DisplayName_field;
	
	@FindBy(id="componentselect")
	public WebElement componentselect_dropdown;
	
	
	/****Clicking on Manage Components tab*****/
	public void selecting_manage_component()
	{
		report.addTestLogSubSection("Manage component tab validation");
		try {
			clickOnButton(Manage_component_tab);
			report.updateTestLog("Verify able to click on Manage components", "Manage components tab is clicked successfully", Status.PASS);
		
			String company = dataTable.getData("General_Data" , "CompanyID");
  			selectValueFromDropDown(Company_dropdown_field1, company);
  			System.out.println("Company id selected as:"+company);
  			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
		
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void Verifying_mandatory_alert()
	{
		try {
			
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
	  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
	  		  
	  		  Thread.sleep(5000);
	  		String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field1, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
			Thread.sleep(1000);
			
			
			Submit.click();
			//clickOnButton(Manage_component_submit_button);
			Thread.sleep(2000);
			System.out.println("Mandatory alert message is displayed as:"+errorpopup.getText());
			report.updateTestLog("Mandatory alert message", "Mandatory alert message is displayed as:"+errorpopup.getText(), Status.PASS);
			
			String actualString=errorpopup.getText();
			
			String comp_erro_mesg= dataTable.getData("General_Data", "Component_id_Mandatory_error");
			if(actualString.contains(comp_erro_mesg))
			{
				System.out.println("Error Message displayed as Expected");
				report.updateTestLog("Error Message verification", "Error Message displayed as Expected", Status.PASS);
			}
			else
			{
				System.out.println("Error Message NOT displayed as Expected");
				report.updateTestLog("Error Message verification", "Error Message not displayed as Expected", Status.FAIL);
			}
			Assert.assertTrue(actualString.contains("Component ID should not be empty"));
			clickOnButton(Error_ok_button);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void check_special_charater()
	{
		
		report.addTestLogSubSection("Special character validation in Manage components tab");
		
		try
		{
			
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
	  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
	  		  
	  		  Thread.sleep(5000);
	  		String company = dataTable.getData("General_Data" , "CompanyID");
  			selectValueFromDropDown(Company_dropdown_field1, company);
  			System.out.println("Company id selected as:"+company);
  			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
			Thread.sleep(1000);
			
			Thread.sleep(2000);
			String Component_IDV =dataTable.getData("General_Data", "ComponentID_Special_char");
			//ComponentID_field.click();
			ComponentID_field.sendKeys(Component_IDV);
			//System.out.println("CID is :"+Component_IDV);
			report.updateTestLog("Component ID display", "Component ID provided as : "+Component_IDV, Status.PASS);
			String Display_Name = dataTable.getData("General_Data", "Display_Name");
			DisplayName_field.sendKeys(Display_Name);
			report.updateTestLog("Display Name", "Display name provided as : "+Display_Name , Status.PASS);
			String Component_type = dataTable.getData("General_Data", "Component_type");
			selectValueFromDropDown(componentselect_dropdown, Component_type);
			report.updateTestLog("Component type selection", "Component type selected as : "+Component_type, Status.PASS);
			Submit.click();
			//clickOnButton(Manage_component_submit_button);
			/*Thread.sleep(2000);
			System.out.println("Incorrect data alert message is displayed as:"+errorpopup.getText());
			report.updateTestLog("Incorrect data alert message", "Incorrect data alert message is displayed as :" +errorpopup.getText(), Status.PASS);
			*/
			
			String actualString=errorpopup.getText();
			String ComponentID_spec= dataTable.getData("General_Data", "Component_id_special_char_error");
			if(actualString.contains(ComponentID_spec))
			{
				System.out.println("As Expected Error Message is displayed for special characters in ComponentID");
				report.updateTestLog("Manage Components", "Special Charater validation successfuly completed", Status.PASS);
			}
			else
			{
				Assert.fail("Expected error message is not displayed");
			}
			//Assert.assertTrue(actualString.contains("Component ID should not be empty"));
			clickOnButton(Error_ok_button);
		} 
		catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
	public void Mandatory_check_component_type()
	{
		
		try
		{
			
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
	  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
	  		  
	  		  Thread.sleep(5000);
	  		String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field1, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
			
			
			Thread.sleep(2000);
			String Component_ID_valid= dataTable.getData("General_Data", "Component_ID_valid");		
			ComponentID_field.sendKeys(Component_ID_valid);
			
			String Display_Name= dataTable.getData("General_Data", "Display_Name");
			DisplayName_field.sendKeys(Display_Name);
			
			//Manage_Components.click();
			Thread.sleep(2000);
			selectValueFromDropDown(Component_Type,"Employer Contribution");
			//WebElement Comp_type=driver.findElement(By.xpath("//div[@class='row partsmanagecmpnt marginBottom20']/div/label[contains(text(),'Component Type')]"));
			//Comp_type.click();
			//driver.findElement(By.xpath("//*[@id='componentselect']"));
			//String Comp_type1 = dataTable.getData("General_Data", "Component_type");
			//System.out.println("Component type );
			//report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type1, Status.PASS);
			/*String Comp_type2 = dataTable.getData("General_Data", "Component_type1");
			System.out.println("Component type is:" +Comp_type2);
			report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type2, Status.PASS);
			String Comp_type3 = dataTable.getData("General_Data", "Component_type2");
			System.out.println("Component type is:" +Comp_type3);
			report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type3, Status.PASS);*/
			
			/*String Component_type= dataTable.getData("General_Data", "Component_type");
			report.updateTestLog("Component type selection", "Component type selected as : "+Component_type, Status.PASS);
			selectValueFromDropDown(componentselect_dropdown, Component_type);*/
			Submit.click();
			//clickOnButton(Manage_component_submit_button);
			Thread.sleep(2000);

			
			if(errorpopup.isDisplayed())
			{
				System.out.println("Component type mandatory validation message is displayed as:"+errorpopup.getText());
			report.updateTestLog("component type error message validation", "component type error message displayed as :"+errorpopup.getText(), Status.PASS);
			}
			
			String actualString=errorpopup.getText();
			String Component_type_error= dataTable.getData("General_Data", "Component_type_mandatory_error");
			if(actualString.contains(Component_type_error))
			{
				System.out.println("As Expected Error Message is displayed for Component_type_mandatory");
				report.updateTestLog("Manage Components", "Component type mandatory validation successfuly completed", Status.PASS);
			}
			
			else
			{
				Assert.fail("Expected error message is not displayed");
			}
			//Assert.assertTrue(actualString.contains(Component_type_error));
			clickOnButton(Error_ok_button);
		
		} 
		catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void Mandatory_check_component_type_Ctype()
	{
		
		try
		{
			
			driver.findElement(By.xpath("//*[@id='managecomponent']//button")).click();
	  		  report.updateTestLog("Click on Add component tab", "Add component tab is clicked", Status.PASS);
	  		  
	  		  Thread.sleep(5000);
	  		String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field1, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
			
			
			Thread.sleep(2000);
			String Component_ID_valid= dataTable.getData("General_Data", "Cname");		
			ComponentID_field.sendKeys(Component_ID_valid);
			
			String Display_Name= dataTable.getData("General_Data", "Dname");
			DisplayName_field.sendKeys(Display_Name);
			
			//Manage_Components.click();
			Thread.sleep(2000);
			selectValueFromDropDown(Component_Type,"Employer Contribution");
			//WebElement Comp_type=driver.findElement(By.xpath("//div[@class='row partsmanagecmpnt marginBottom20']/div/label[contains(text(),'Component Type')]"));
			//Comp_type.click();
			//driver.findElement(By.xpath("//*[@id='componentselect']"));
			//String Comp_type1 = dataTable.getData("General_Data", "Component_type");
			//System.out.println("Component type );
			//report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type1, Status.PASS);
			/*String Comp_type2 = dataTable.getData("General_Data", "Component_type1");
			System.out.println("Component type is:" +Comp_type2);
			report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type2, Status.PASS);
			String Comp_type3 = dataTable.getData("General_Data", "Component_type2");
			System.out.println("Component type is:" +Comp_type3);
			report.updateTestLog("Component type selection", "Component type selected as :"+Comp_type3, Status.PASS);*/
			
			/*String Component_type= dataTable.getData("General_Data", "Component_type");
			report.updateTestLog("Component type selection", "Component type selected as : "+Component_type, Status.PASS);
			selectValueFromDropDown(componentselect_dropdown, Component_type);*/
			Submit.click();
			//clickOnButton(Manage_component_submit_button);
			Thread.sleep(2000);

			
			if(errorpopup.isDisplayed())
			{
				System.out.println("Component type mandatory validation message is displayed as:"+errorpopup.getText());
			report.updateTestLog("component type error message validation", "component type error message displayed as :"+errorpopup.getText(), Status.PASS);
			}
			
			String actualString=errorpopup.getText();
			String Component_type_error= dataTable.getData("General_Data", "Component_type_mandatory_error");
			if(actualString.contains(Component_type_error))
			{
				System.out.println("As Expected Error Message is displayed for Component_type_mandatory");
				report.updateTestLog("Manage Components", "Component type mandatory validation successfuly completed", Status.PASS);
			}
			
			else
			{
				Assert.fail("Expected error message is not displayed");
			}
			//Assert.assertTrue(actualString.contains(Component_type_error));
			clickOnButton(Error_ok_button);
		
		} 
		catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	

}


package pages;

import static org.testng.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.Set;

import org.apache.poi.hssf.usermodel.HSSFDateUtil;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.junit.Assert;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import supportlibraries.DriverScript;

import supportlibraries.ReusableLibrary_MC;
import supportlibraries.ScriptHelper;




























































import com.cognizant.framework.Status;
import com.thoughtworks.selenium.Selenium;
import com.thoughtworks.selenium.Wait;

import functionallibraries.FunctionalLibrary_MC;


/**
 * Functional Library class
 * @author Cognizant
 */
public class ManageContribution extends ReusableLibrary_MC {


	/**
	 * Constructor to initialize the functional library
	 * @param scriptHelper The {@link ScriptHelper} object passed from the {@link DriverScript}
	 */


	public ManageContribution(ScriptHelper scriptHelper) {
		super(scriptHelper);
	}

	//User ID and Role
	String UploadTransaction_Type = dataTable.getData("General_Data", "UploadTransaction_Type");
	String Report_Month = dataTable.getData("General_Data", "Report_Month");
	String Report_Year = dataTable.getData("General_Data", "Report_Year");

	String Filepath = dataTable.getData("General_Data", "Filepath");
	
	String Filename = dataTable.getData("General_Data", "Filename");
	String Filename1 = dataTable.getData("General_Data", "Filename1");
	String Extension = dataTable.getData("General_Data", "Extension");
	String TestdatafilePath = dataTable.getData("General_Data", "TestdatafilePath");
	String ExpectedMessage = dataTable.getData("General_Data", "ExpectedMessage");


	FunctionalLibrary_MC f1 = new FunctionalLibrary_MC(scriptHelper);

	

	WebDriverWait wait = new WebDriverWait(driver,100);

	/*
	 * AppLoadVerify: To verify the app is loaded
	 */

	/*  Identifiers starts */
	By countryselecticon_arrow = By.xpath("//*[@id='arrowImg']");
	By Australia_selection = By.xpath("//*[@id='countryselecticon']/../ul/li/a[contains(text(),'Australia')]");
	By Superannuation = By.xpath("//*[@id='tileContainer']/div[1]/label[contains(text(),'Superannuation Details')]");
	By ManageContribution = By.xpath("//*[@id='tileContainer']/div/label[contains(text(),'Manage Contribution')]");
	By ManagePayslip = By.xpath("//*[@id='tileContainer']/div/label[contains(text(),'Manage Payslip')]");
	
	//Manage Contribution page
	By Upload = By.xpath("//a[text()='Upload']");
	By Reports = By.xpath("//a[text()='Report']");
	By FH = By.xpath("//a[text()='Manage Fund Houses']");
	By Addfund = By.xpath("//*[@id='manageFundPage']//button[@class='btn btn-success submit']");
	
	
	/* Identifiers Ends */
	
	@FindBy(xpath="//*[@id='uploadform']//select[@ng-model='UploadTypeId']") 
	public WebElement drpdownUploadType;
	
	public void Click_ManageContribution()

	{
		report.addTestLogSubSection("ManageContribution click");
		driver.findElement(ManageContribution).click();
		wait.until(ExpectedConditions.visibilityOfElementLocated(Upload));
		f1.sleep(3000);
		
	}
	
	public void Manage_Contribution()

	{
		
		report.addTestLogSubSection("Manage contribution tab validation");
		
	try{

			driver.findElement(ManageContribution).click();
			wait.until(ExpectedConditions.visibilityOfElementLocated(Upload));
			f1.sleep(3000);
			//to verify the Superannuation tile display 
			/*	if(driver.findElement(ManageContribution).isDisplayed())
			{
				System.out.println("The 'Manage Contribution' page is displayed for Admin");
				report.updateTestLog("The 'Manage Contribution' page is displayed for Admin", "", Status.PASS);
			}
			else
			{
				System.out.println("The 'ManageContribution' page is not displayed for Admin");
				report.updateTestLog("The 'ManageContribution' page is not displayed for Admin", "", Status.FAIL);
			}*/


			//to verify the Upload tab display 
			if(driver.findElement(Upload).isDisplayed())
			{
				System.out.println("The 'Upload' tab is displayed in Manage Contribution page");
				report.updateTestLog("Upload' tab display validation", "The 'Upload' tab is displayed in Manage Contribution page", Status.PASS);
			}
			else
			{
				System.out.println("The 'Upload' tab is not displayed in Manage Contribution page");
				report.updateTestLog("Upload tab display validation", "The Upload tab is not displayed in Manage Contribution page", Status.FAIL);
			}


			//to verify the Reports tab display 
			if(driver.findElement(Reports).isDisplayed())
			{
				System.out.println("The 'Reports' tab is displayed in Manage Contribution page");
				report.updateTestLog("Repor tab Validation", "The 'Reports' tab is displayed in Manage Contribution page", Status.PASS);
			}
			else
			{
				System.out.println("The 'Reports' tab is not displayed in Manage Contribution page");
				report.updateTestLog("Repor tab Validation", "The 'Reports' tab is not displayed in Manage Contribution page", Status.FAIL);
			}



			By TransactionUpload = By.xpath("//a[text()='Transaction Upload']");
			By TransactionUpload_icon = By.xpath("//a[text()='Transaction Upload']/../img[@class='fileIcon']");
			By TransactionUpdate = By.xpath("//a[text()='Transaction Update']");
			By TransactionUpdate_icon = By.xpath("//a[text()='Transaction Update']/../img[@class='fileIcon']");	
			By Membershipupload = By.xpath("//a[text()='Membership upload']");	
			By Membershipupload_icon = By.xpath("//a[text()='Membership upload']/../img[@class='fileIcon']");	


			By UploadType = By.xpath("//*[@id='uploadform']/div[1]/div[1]/select[@ng-model='UploadTypeId']");
			By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
			By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
			By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
			By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


			//Ui validation -Manage Contribution' tile - Upload tab
			isdisplayed_validation(TransactionUpload,"Transaction Upload");
			isdisplayed_validation(TransactionUpload_icon,"Transaction Upload icon");
			isdisplayed_validation(TransactionUpdate,"Transaction Update");
			isdisplayed_validation(TransactionUpdate_icon,"Transaction Update icon");
			isdisplayed_validation(Membershipupload,"Membership upload");
			isdisplayed_validation(Membershipupload_icon,"Membership upload icon");
			isdisplayed_validation(UploadType,"UploadType");
			isdisplayed_validation(UploadMonth,"UploadMonth");
			isdisplayed_validation(UploadType,"UploadType");
			isdisplayed_validation(UploadYear,"UploadYear");
			isdisplayed_validation(Browse_btn,"Browse_btn");
			isdisplayed_validation(Submit_btn,"Submit_btn");

		}catch(Exception e)
		{
			System.out.println("Error while validating Manage Contribution' tile - Upload tab "+e);
			report.updateTestLog("Error while validating Manage Contribution' tile - Upload tab", "", Status.FAIL);
		}

	}
	public void Reports()

	{
		report.addTestLogSubSection("Report tab validation");
		try{		
			By Reports = By.xpath("//a[text()='Report']");

			By ReportType = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportType']");
			By ReportMonth = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportMonthId']");
			By ReportYear = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportYear']");
			By GenerateReport_btn = By.xpath("//button[text()='Generate Report']");	

			driver.findElement(Reports).click();
			//Ui validation -Manage Contribution' tile - Upload tab
			isdisplayed_validation(ReportType,"ReportType");
			isdisplayed_validation(ReportMonth,"ReportMonth");
			isdisplayed_validation(ReportYear,"ReportYear");
			isdisplayed_validation(GenerateReport_btn,"GenerateReport_btn");


			List<WebElement> row3 =  driver.findElements(By.xpath("//*[@id='idformReport']//select[@ng-model='ReportType']//option"));
			int count3 =row3.size();
			System.out.println("Ui row count"+count3);

			for(int i=1;i<=count3;i++)
			{

				String Reporttype_ui=driver.findElement(By.xpath("//*[@id='idformReport']//select[@ng-model='ReportType']//option["+i+"]")).getText();
				System.out.println("Report dropdown contains the value as"+Reporttype_ui);
				if(Reporttype_ui.contains("Membership Report"))  
				{
					report.updateTestLog("Report dropdown contains the expected value: ", Reporttype_ui, Status.PASS);
				}
				else if(Reporttype_ui.contains("Contribution Report")) 
				{
					report.updateTestLog("Report dropdown contains the expected value: ", Reporttype_ui, Status.PASS);
				}
				else
				{
					report.updateTestLog("Expected  Report dropdown values are not displayed", Reporttype_ui, Status.FAIL);
				}

			}

		}catch(Exception e)
		{
			System.out.println("Error while validating Manage Contribution' tile - Reports tab "+e);
			report.updateTestLog("Error while validating Manage Contribution' tile - Reports tab", "", Status.FAIL);
		}

	}
	
	public void Managefundhouse()

	{
		
		report.addTestLogSubSection("Manage contribution tab validation");
		
	try{

			driver.findElement(ManageContribution).click();
			wait.until(ExpectedConditions.visibilityOfElementLocated(FH));
			f1.sleep(3000);
			System.out.println("Manage Contribution tab is clicked");
			report.updateTestLog("Manage Contribution tab display validation", "The 'Manage Contribution' tab is clicked", Status.PASS);
			
			

			//to verify the Upload tab display 
			if(driver.findElement(FH).isDisplayed())
			{
				System.out.println("The 'Manage Fund Houses' tab is displayed in Manage Contribution page");
				report.updateTestLog("Manage Fund Houses tab display validation", "The 'Manage Fund Houses' tab is displayed in Manage Contribution page", Status.PASS);
			}
			else
			{
				System.out.println("The 'Manage Fund Houses' tab is not displayed in Manage Contribution page");
				report.updateTestLog("Manage Fund Houses display validation", "The Manage Fund Houses tab is not displayed in Manage Contribution page", Status.FAIL);
			}

			
			driver.findElement(FH).click();
			wait.until(ExpectedConditions.visibilityOfElementLocated(FH));
			f1.sleep(3000);

			
				System.out.println("The 'Manage Fund Houses' tab is selected in Manage Contribution page");
				report.updateTestLog("Manage Fund Houses tab display validation", "The 'Manage Fund Houses' tab is selected in Manage Contribution page", Status.PASS);
			
		}catch(Exception e)
		{
			System.out.println("Error while validating Manage Contribution' tile - Upload tab "+e);
			report.updateTestLog("Error while validating Manage Contribution' tile - Upload tab", "", Status.FAIL);
		}

	}
	
	public void Managefundhouse_Addfund()

	{
		
			
	try{
		
			driver.findElement(By.xpath("//*[@id='manageFundPage']//button[@class='btn btn-success submit']")).click();
	  		  		
			System.out.println("The 'Add Fund' is selected in Manage Fund House");
			report.updateTestLog("Add Fund House validation", "The 'Add Fund' is selected in Manage Fund House", Status.PASS);
			
			Thread.sleep(5000);
			
			
			String fundname = dataTable.getData("General_Data", "fundname");
			driver.findElement(By.xpath("//*[@id='fundNameInput']")).sendKeys(fundname);
			Thread.sleep(3000);
			report.updateTestLog("Fund Name validation", "Fund Name provided as "+fundname, Status.PASS);
			
            String USIID =dataTable.getData("General_Data", "USIID");
            driver.findElement(By.xpath("//*[@id='addUsiIdInput']")).sendKeys(USIID);
            report.updateTestLog("USI ID validation", "USI ID Provided as "+USIID, Status.PASS);
            //EnterFundnameAndUSIID(fundname, USIID);
            Thread.sleep(3000);
            
            

			driver.findElement(By.xpath("//*[@id='addFundModalContainer']//button[@ng-click='addFundSubmit()']")).click();
			report.updateTestLog("Add fund validation", "Clicked on Add fund button", Status.PASS);
			
			Alert Alert = driver.switchTo().alert();
			String Text=Alert.getText();
			if(Text.equals("Fund Added Successfully."))
			{
				System.out.println("Fund Added Successfully.");
			}
			
			else
			{
				System.out.println("Fund not Added");

			}
		    Alert.accept();
		    
		}catch(Exception e)
		{
			System.out.println("Error while clicking on add fund"+e);
			//report.updateTestLog("add fund validation", "Error while clicking on add fund", Status.FAIL);
		}

	}
	
	public void Managefundhouse_Addfund_alreadyexists()

	{
		
				
	try{
		
			driver.findElement(By.xpath("//*[@id='manageFundPage']//button[@class='btn btn-success submit']")).click();
	  		  		
			System.out.println("The 'Add Fund' is selected in Manage Fund House");
			report.updateTestLog("Add Fund House validation", "The 'Add Fund' is selected in Manage Fund House", Status.PASS);
			
			Thread.sleep(5000);
			
			
			String fundname = dataTable.getData("General_Data", "fundname");
			driver.findElement(By.xpath("//*[@id='fundNameInput']")).sendKeys(fundname);
			Thread.sleep(3000);
			report.updateTestLog("Fund Name validation", "Fund Name provided as "+fundname, Status.PASS);
			
            String USIID =dataTable.getData("General_Data", "USIID");
            driver.findElement(By.xpath("//*[@id='addUsiIdInput']")).sendKeys(USIID);
            report.updateTestLog("USI ID validation", "USI ID Provided as "+USIID, Status.PASS);
            //EnterFundnameAndUSIID(fundname, USIID);
            Thread.sleep(3000);
            
            

			driver.findElement(By.xpath("//*[@id='addFundModalContainer']//button[@ng-click='addFundSubmit()']")).click();
			report.updateTestLog("Add fund validation", "Clicked on Add fund button", Status.PASS);
			Thread.sleep(3000);
			
			Alert Alert = driver.switchTo().alert();
			String Text=Alert.getText();	
			if(Text.equals("Superfund account name already exists!"))
			{
				System.out.println("Fund Added Successfully.");
				report.updateTestLog("Existing superfund validation", "Superfund account name already exists!", Status.PASS);
			}
			
			else
			{
				System.out.println("Fund Added");
				report.updateTestLog("Existing superfund validation", "Superfund account name not already exists!", Status.FAIL);

			}
		    Alert.accept();
			/*if (isAlertPresent1())
			{
                Thread.sleep(5000);*/
                
			//Alert Alert = driver.switchTo().alert();
			
			//Thread.sleep(3000);
			//String Text=Alert.getText();
			/*if(Text.equals("Fund Added Successfully."))
			{
				//System.out.println("Fund Added Successfully.");
			}
			
			else if (Text.equals("Superfund account name already exists!"))
			{
				//System.out.println("Superfund account name already exists!");

			}*/
			
			/*else
			{
				System.out.println("Fund not added");

			}*/
		    //Alert.accept();
			/*}*/
			
		    
		}
	
	catch(Exception e)
		{
			System.out.println("Error while clicking on add fund"+e);
			report.updateTestLog("add fund validation", "Error while clicking on add fund", Status.FAIL);
		}

	}
	
	public boolean isAlertPresent1()
	{
		try 
		{ 
			Thread.sleep(5000); 
			Alert alert=driver.switchTo().alert(); 
			System.out.println("alert message : "+alert.getText()); 
			alert.accept(); return true; } catch (Exception e) 
		{ 
				System.out.println("alert not present") ;
				return false; 
				} 
		}
	
	public void Managefundhouse_edit()

	{
		report.addTestLogSubSection("Manage fund house edit validation");		
	try{
			WebDriverWait wait = new WebDriverWait(driver,30);			
			String fundname = dataTable.getData("General_Data", "fundname");
			System.out.println(fundname);
			//driver.findElement(By.xpath("//*[@id='fundNameInput']")).sendKeys(fundname);
			Thread.sleep(3000);
			report.updateTestLog("Fund Name validation", "Fund Name provided as "+fundname, Status.PASS);
			
            String USIID =dataTable.getData("General_Data", "USIID");
            System.out.println(USIID);
            //driver.findElement(By.xpath("//*[@id='addUsiIdInput']")).sendKeys(USIID);
            report.updateTestLog("USI ID validation", "USI ID Provided as "+USIID, Status.PASS);
            //EnterFundnameAndUSIID(fundname, USIID);
            Thread.sleep(3000);
            

            if(driver.findElements(By.xpath("//table[@id='fundtbl']/tbody/tr")).size()!=0)
       	 {
       		     	      
       		 
       	 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='fundtbl']/tbody/tr/td"));
       	int count=rows.size();
       	System.out.println("Count is:"+count);
       	//int K=3;

        if(driver.findElements(By.xpath("//*[@id='paginationmanageUser']/dir-pagination-controls//ul/li[2]/a")).size()==0)
        	
        {
        	System.out.println("Pagination not displayed");
        	//report.updateTestLog("Company name selection", "Company name selected as :" +company_name, Status.PASS);

        	inner:for(int i=1;i<=4;i++)
       	 {
        		
        		
        	WebElement fundname1 = driver.findElement(By.xpath("//*[@id='fundtbl']/tbody/tr["+i+"]/td[2]"));
          	WebElement USIID1 = driver.findElement(By.xpath("//*[@id='fundtbl']/tbody/tr["+i+"]/td[3]"));
          	       				

       		if(fundname1.getText().trim().contains(fundname.trim()))
       	    {
       	    System.out.println("Component code selected as :" + fundname1);
       	    report.updateTestLog("Component code selection", "Component code selected as :" +fundname1, Status.PASS);
       	    HighlightElement_green(fundname1);
       	    
       	    if(USIID1.getText().trim().contains(USIID.trim()))
       	    {
       	    System.out.println("Display name selected as :" + USIID1);
       	    report.updateTestLog("Display name selection", "Display name selected as :" +USIID1, Status.PASS);
       	    HighlightElement_green(USIID1);
       	    
       	   
       	    
       	    driver.findElement(By.xpath("//table[@id='fundtbl']/tbody/tr["+i+"]/td[5]/div")).click();
       	    System.out.println("Action Pencil EDIT button is clicked");
			report.updateTestLog("click on action button", "Action Pencil Edit button is clicked", Status.PASS);
			Thread.sleep(8000);
       	    }
       	    
       	    }
       	 }
        }
       	    
       		
       		
       
        	
        	else
            {
        	int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationmanageUser']/dir-pagination-controls/ul/li[2]/a")).size();
        	System.out.println(num_of_clicks);
        	//report.updateTestLog("Company selection", "Company selected as :" +company_name, Status.PASS);	
        	outer: for(int j =1; j< num_of_clicks; j++)
        	{
        	inner:for(int O=1;O<=4;O++)
        	{
        	WebElement fundname2 = driver.findElement(By.xpath("//*[@id='fundtbl']/tbody/tr["+O+"]/td[2]"));
        	System.out.println(fundname2.getText());
            WebElement USIID2 = driver.findElement(By.xpath("//*[@id='fundtbl']/tbody/tr["+O+"]/td[3]"));
            System.out.println(USIID2.getText());
        		
        	if(rows.size()>4)
	        	
	        
        		if(fundname2.getText().trim().contains(fundname.trim()))
           	    {
           	    System.out.println("Component code selected as :" + fundname2);
           	    report.updateTestLog("Component code selection", "Component code selected as :" +fundname2, Status.PASS);
           	    HighlightElement_green(fundname2);
	       				
           	 if(USIID2.getText().trim().contains(USIID.trim()))
        	    {
        	    System.out.println("Display name selected as :" + USIID2);
        	    report.updateTestLog("Display name selection", "Display name selected as :" +USIID2, Status.PASS);
        	    HighlightElement_green(USIID2);
	       	
	       	   
	       	driver.findElement(By.xpath("//table[@id='manageusrtbl']/tbody/tr["+O+"]/td[5]/div")).click();
	        System.out.println("Action Pencil EDIT button is clicked");
			report.updateTestLog("click on action button", "Action Pencil Edit button is clicked", Status.PASS);
	       	Thread.sleep(8000);
			
	       	
			if(fundname2.getText().trim().contains(fundname.trim()))
			{
			break inner;
			}

			}

				 }
			
	       	
				     
				
			       if(rows.size()<=4)
			       {
			    	   break outer;
			    	   
			       }
				 }
				 driver.findElement(By.xpath("//*[@id='dirPaginationRight']")).click();
				 Thread.sleep(2000);
			   }}}
			   	 
            else
			 {
				 System.out.println("Edit icon not available");
				 report.updateTestLog("Edit icon validation", "Edit icon is not available", Status.FAIL);

			 }
	
	String fundname1 = dataTable.getData("General_Data", "fundname_update");
	driver.findElement(By.xpath("//*[@id='editFundInput']")).sendKeys(fundname);
	Thread.sleep(3000);
	report.updateTestLog("Fund Name validation", "Fund Name provided as "+fundname, Status.PASS);
	
    String USIID1 =dataTable.getData("General_Data", "USIID_update");
    driver.findElement(By.xpath("//*[@id='editUsiIdInput']")).sendKeys(USIID);
    report.updateTestLog("USI ID validation", "USI ID Provided as "+USIID, Status.PASS);
    //EnterFundnameAndUSIID(fundname, USIID);
    Thread.sleep(3000);
    
    

	driver.findElement(By.xpath("//*[@id='addFundModalContainer']//button[@ng-click='editFundSubmit()']")).click();
	report.updateTestLog("Update fund validation", "Clicked on update fund button", Status.PASS);
	
	Alert Alert = driver.switchTo().alert();
	String Text=Alert.getText();
	if(Text.equals("Fund Edited Successfully."))
	{
		System.out.println("Fund Edited Successfully.");
	}
	
	else
	{
		System.out.println("Fund not updated");

	}
    Alert.accept();

	}
				 
		    
		
		catch(Exception e)
		{
			System.out.println("Error while clicking on add fund"+e);
			report.updateTestLog("add fund validation", "Error while clicking on add fund", Status.FAIL);
		}

	}
/*	
	public void EnterFundnameAndUSIID(String fundname, String USIID)
	{
		fundname.sendkeys(fundname);
		USIID.sendkeys(USIID);
	}*/
	
	
	public void HighlightElement_green( WebElement element) throws Exception {
		JavascriptExecutor js = (JavascriptExecutor) driver;

		try {
			js.executeScript("arguments[0].setAttribute('style', 'background: green; border: 2px solid red;');",element);
//			js.executeScript("arguments[0].scrollIntoView(true);", element);
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
		
	}
 
	public void Transaction_Upload_Template()

	{
		
		report.addTestLogSubSection("Transaction upload template validation");
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");


		String downloaded_filename = null;
		String filepath=null;

		/* Identifiers Ends */
		try{

			driver.findElement(ManageContribution).click();
			wait.until(ExpectedConditions.visibilityOfElementLocated(Upload));
			f1.sleep(3000);

			if(driver.findElement(Upload).isDisplayed())
			{
				System.out.println("The 'Upload' tab is displayed in Manage Contribution page");
				report.updateTestLog("Upload tab is display validation", "The 'Upload' tab is displayed in Manage Contribution page", Status.PASS);
			}
			else
			{
				System.out.println("The 'Upload' tab is not displayed in Manage Contribution page");
				report.updateTestLog("Upload tab is display validation", "The 'Upload' tab is not displayed in Manage Contribution page", Status.FAIL);
			}
			By TransactionUpload = By.xpath("//a[text()='Transaction Upload']");		

			driver.findElement(TransactionUpload).click();
			Thread.sleep(9000);
			downloaded_filename	=f1.Filedownload_1(Filepath, Filename, Extension);
			//String userdir = System.getProperty("user.dir");
			filepath=Filepath+"\\"+"\\"+downloaded_filename; 
			System.out.println("filepath"+filepath);

		}catch(Exception e)
		{
			System.out.println("Error while validating Manage Contribution' tile - Transaction Upload template "+e);
			report.updateTestLog("Error while validating Manage Contribution' tile - Transaction Upload template", "", Status.FAIL);
		}

		try {
			headerValidation_downloadedexcel(TestdatafilePath,filepath,1, "Header Validation of Transaction upload Template");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}			


	}
	public void Transaction_Update_Template()

	{
		
		report.addTestLogSubSection("Transaction_Update_Template validation");
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		String downloaded_filename = null;
		String filepath = null;

		/* Identifiers Ends */
		try{

			driver.findElement(ManageContribution).click();

			wait.until(ExpectedConditions.visibilityOfElementLocated(Upload));
			f1.sleep(3000);
			if(driver.findElement(Upload).isDisplayed())
			{
				System.out.println("The 'Upload' tab is displayed in Manage Contribution page");
				report.updateTestLog("The 'Upload' tab is display validation", "The 'Upload' tab is displayed in Manage Contribution page", Status.PASS);
			}
			else
			{
				System.out.println("The 'Upload' tab is not displayed in Manage Contribution page");
				report.updateTestLog("The 'Upload' tab is not display validation", "The 'Upload' tab is not displayed in Manage Contribution page", Status.FAIL);
			}

			By TransactionUpdate = By.xpath("//a[text()='Transaction Update']");
			driver.findElement(TransactionUpdate).click();
			Thread.sleep(20000);

			downloaded_filename	=f1.Filedownload_1(Filepath, Filename, Extension);

			filepath=Filepath+"\\"+"\\"+downloaded_filename; 
			System.out.println("filepath"+filepath);
			System.out.println("downloaded_filename"+downloaded_filename);
		}catch(Exception e)
		{
			System.out.println("Error while validating Manage Contribution' tile - Transaction Update template "+e);
			report.updateTestLog("Error while validating Manage Contribution' tile - Transaction Update template", "", Status.FAIL);
		}

		try {
			//int count=excel_read_project_colindex(Filepath, 0, "Template");
			//System.out.println("count"+count);

			headerValidation_downloadedexcel(TestdatafilePath,filepath,3, "Header Validation of Transaction Update Template");
		} catch (IOException e) {

			e.printStackTrace();
		}
	}
	public void Membership_Upload_Template()

	{
		report.addTestLogSubSection("Membership_Upload_Template validation");
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		/* Identifiers Ends */
		String downloaded_filename = null;
		String filepath = null;

		try{

			driver.findElement(ManageContribution).click();
			wait.until(ExpectedConditions.visibilityOfElementLocated(Upload));
			f1.sleep(3000);

			if(driver.findElement(Upload).isDisplayed())
			{
				System.out.println("The 'Upload' tab is displayed in Manage Contribution page");
				report.updateTestLog("The 'Upload' tab is display validation", "The 'Upload' tab is displayed in Manage Contribution page", Status.PASS);
			}
			else
			{
				System.out.println("The 'Upload' tab is not displayed in Manage Contribution page");
				report.updateTestLog("The 'Upload' tab is not display validation", "The 'Upload' tab is not displayed in Manage Contribution page", Status.FAIL);
			}
			By Membershipupload = By.xpath("//a[text()='Membership upload']");		

			driver.findElement(Membershipupload).click();
			Thread.sleep(20000);
			downloaded_filename	=f1.Filedownload_1(Filepath, Filename, Extension);

			filepath=Filepath+"\\"+"\\"+downloaded_filename; 
			System.out.println("filepath"+filepath);
			System.out.println("downloaded_filename"+downloaded_filename);
		}catch(Exception e)
		{
			System.out.println("Error while validating Manage Contribution' tile - Membership upload template "+e);
			report.updateTestLog("Error while validating Manage Contribution' tile - Membership upload template", "", Status.FAIL);
		}



		try {
			headerValidation_downloadedexcel(TestdatafilePath,filepath,5, "Header Validation of Membership upload Template");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void AustraliaESS_Upload_Template()

	{
		report.addTestLogSubSection("AustraliaESS_Upload_Template validation");
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		/* Identifiers Ends */
		String downloaded_filename = null;
		String filepath = null;

		try{

			driver.findElement(ManageContribution).click();
			wait.until(ExpectedConditions.visibilityOfElementLocated(Upload));
			f1.sleep(3000);

			if(driver.findElement(Upload).isDisplayed())
			{
				System.out.println("The 'Upload' tab is displayed in Manage Contribution page");
				report.updateTestLog("The 'Upload' tab is display validation", "The 'Upload' tab is displayed in Manage Contribution page", Status.PASS);
			}
			else
			{
				System.out.println("The 'Upload' tab is not displayed in Manage Contribution page");
				report.updateTestLog("The 'Upload' tab is not display validation", "The 'Upload' tab is not displayed in Manage Contribution page", Status.FAIL);
			}
			By ESSupload = By.xpath("//a[text()='Australia ESS']");		

			driver.findElement(ESSupload).click();
			Thread.sleep(20000);
			downloaded_filename	=f1.Filedownload_1(Filepath, Filename, Extension);

			filepath=Filepath+"\\"+"\\"+downloaded_filename; 
			System.out.println("filepath"+filepath);
			System.out.println("downloaded_filename: "+downloaded_filename);
		}
		
		catch(Exception e)
		{
			System.out.println("Error while validating Manage Contribution' tile - Membership upload template "+e);
			report.updateTestLog("Error while validating Manage Contribution' tile - Membership upload template", "", Status.FAIL);
		}


	}

	public void Transaction_Upload_Template_2() throws InterruptedException

	{
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		By UploadType = By.xpath("//*[@id='uploadform']/div[1]/div[1]/select[@ng-model='UploadTypeId']");
		By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
		By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
		By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
		By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


		/* Identifiers Ends */


		//driver.findElement(ManageContribution).click();

		Select drptxt1 = new Select(driver.findElement(UploadType));
		drptxt1.selectByVisibleText("Upload Transaction");
		System.out.println("Upload Transaction is selected");
		report.updateTestLog("Upload Transaction selection"," Transaction selected as Upload Transaction",Status.PASS);

		Select drptxt2 = new Select(driver.findElement(UploadMonth));
		//	drptxt2.selectByVisibleText("January");
		drptxt2.selectByVisibleText(Report_Month);

		System.out.println("Upload Month is selected");
		report.updateTestLog("Upload Month Selection","Upload Month selected as :"+Report_Month,Status.PASS);

		Select drptxt3 = new Select(driver.findElement(UploadYear));
		//	drptxt2.selectByValue("2020");
		drptxt3.selectByValue(Report_Year);
		System.out.println("Upload Year is selected");
		report.updateTestLog("Upload Year is selection","Upload Year selected as:"+Report_Year,Status.PASS);
		driver.findElement(Browse_btn).click();

		
		StringSelection filepath = new StringSelection(System.getProperty("user.dir")+"\\Valid_Template_Files\\"+Filename+"."+Extension); 


	
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
		System.out.println("File Selected for Australia");

		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(2000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_V);
		Thread.sleep(2000);
		robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
		System.out.println("file upload done");
		f1.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")));
		String filename=driver.findElement(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")).getText();

		System.out.println("Uploaded file name is"+filename);
		report.updateTestLog("Uploaded file name is", filename, Status.PASS);

		String status2=driver.findElement(By.xpath("//*[contains(@class,'upload-WithProgress')]//p[contains(@class,'completed-status')]")).getText();

		System.out.println("Uploaded file status is"+status2);
		report.updateTestLog("Uploaded file status is", status2, Status.PASS);	
		driver.findElement(By.xpath("//*[@id='uploadform']/div[3]/button")).click();
		report.updateTestLog("Submit button is selected", filename, Status.PASS);

		//Alert

		{
			int i=0;
			while(i++<5)
			{
				try
				{

					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);
					break;
				}
				catch(NoAlertPresentException e)
				{
					Thread.sleep(1000);
					continue;
				}
			}
		}


		/*		f1.sleep(200);
			try
			{
				Alert alert = driver.switchTo().alert();
				String sucessmsg=alert.getText();
				alert.accept();
				if(sucessmsg.contains(ExpectedMessage)) 
				{
				System.out.println("sucessmsg"+sucessmsg);
				report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
				}
				else
				{
					System.out.println("sucessmsg"+sucessmsg);
					report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

				}
				// Click on OK button.
				alert.accept();
				System.out.println("Accept Alert");
				report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
				System.out.println("Ok button is Clicked ");
				report.updateTestLog("Ok button is Clicked ","", Status.PASS);

				//f1.sleep(3000);
				//System.out.println("wait done");
			}
				catch(NoAlertPresentException e)
				{
					e.printStackTrace();
				}*/


	}

	//Admin should able to upload the AustraliaESS download
	public void essTransaction_Upload_Template_2() throws InterruptedException

	{
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		By UploadType = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadTypeId']");
		By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
		By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
		By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
		By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


		/* Identifiers Ends */


		//driver.findElement(ManageContribution).click();

		Select drptxt1 = new Select(driver.findElement(UploadType));
		drptxt1.selectByVisibleText("Upload Transaction");
		System.out.println("Upload Transaction is selected");
		report.updateTestLog("Upload Transaction selection"," Transaction selected as Upload Transaction",Status.PASS);

		Select drptxt2 = new Select(driver.findElement(UploadMonth));
		//	drptxt2.selectByVisibleText("January");
		drptxt2.selectByVisibleText(Report_Month);

		System.out.println("Upload Month is selected");
		report.updateTestLog("Upload Month Selection","Upload Month selected as :"+Report_Month,Status.PASS);

		Select drptxt3 = new Select(driver.findElement(UploadYear));
		//	drptxt2.selectByValue("2020");
		drptxt3.selectByValue(Report_Year);
		System.out.println("Upload Year is selected");
		report.updateTestLog("Upload Year is selection","Upload Year selected as:"+Report_Year,Status.PASS);
		driver.findElement(Browse_btn).click();

		
		StringSelection filepath = new StringSelection(System.getProperty("user.dir")+"\\Valid_Template_Files\\"+Filename+"."+Extension); 


	
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
		System.out.println("File Selected for Australia");

		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(2000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_V);
		Thread.sleep(2000);
		robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
		System.out.println("file upload done");
		f1.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")));
		String filename=driver.findElement(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")).getText();

		System.out.println("Uploaded file name is"+filename);
		report.updateTestLog("Uploaded file name is", filename, Status.PASS);

		String status2=driver.findElement(By.xpath("//*[contains(@class,'upload-WithProgress')]//p[contains(@class,'completed-status')]")).getText();

		System.out.println("Uploaded file status is"+status2);
		report.updateTestLog("Uploaded file status is", status2, Status.PASS);	
		driver.findElement(By.xpath("//*[@id='uploadform']/div[3]/button")).click();
		report.updateTestLog("Submit button is selected", filename, Status.PASS);

		//Alert

		{
			int i=0;
			while(i++<5)
			{
				try
				{

					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);
					break;
				}
				catch(NoAlertPresentException e)
				{
					Thread.sleep(1000);
					continue;
				}
			}
		}


		/*		f1.sleep(200);
			try
			{
				Alert alert = driver.switchTo().alert();
				String sucessmsg=alert.getText();
				alert.accept();
				if(sucessmsg.contains(ExpectedMessage)) 
				{
				System.out.println("sucessmsg"+sucessmsg);
				report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
				}
				else
				{
					System.out.println("sucessmsg"+sucessmsg);
					report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

				}
				// Click on OK button.
				alert.accept();
				System.out.println("Accept Alert");
				report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
				System.out.println("Ok button is Clicked ");
				report.updateTestLog("Ok button is Clicked ","", Status.PASS);

				//f1.sleep(3000);
				//System.out.println("wait done");
			}
				catch(NoAlertPresentException e)
				{
					e.printStackTrace();
				}*/


	}
	
	public void ESS_Upload_Template_2() throws Exception

	{
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		By UploadType = By.xpath("//*[@id='uploadform']/div[1]/div[1]/select[@ng-model='UploadTypeId']");
		By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
		By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
		By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
		By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


		/* Identifiers Ends */


		//driver.findElement(ManageContribution).click();
		
		/*String UploadType = dataTable.getData("General_Data", "UploadTransaction_Type");
		System.out.println(UploadType + "Upload type is selected");
		report.updateTestLog("Upload type selection ", "Upload type selected as: "+ UploadType , Status.PASS);
		selectValueFromDropDown(drpdownUploadType,UploadType);*/
		
		

		Select drptxt1 = new Select(driver.findElement(UploadType));
		drptxt1.selectByVisibleText("Australia ESS upload");
		System.out.println("Upload Transaction is selected");
		report.updateTestLog("Upload Transaction selection"," Transaction selected as Australia ESS upload",Status.PASS);
		Thread.sleep(3000);
		/*Select drptxt2 = new Select(driver.findElement(UploadMonth));
		//	drptxt2.selectByVisibleText("January");
		drptxt2.selectByVisibleText(Report_Month);

		System.out.println("Upload Month is selected");
		report.updateTestLog("Upload Month Selection","Upload Month selected as :"+Report_Month,Status.PASS);

		Select drptxt3 = new Select(driver.findElement(UploadYear));
		//	drptxt2.selectByValue("2020");
		drptxt3.selectByValue(Report_Year);
		System.out.println("Upload Year is selected");
		report.updateTestLog("Upload Year is selection","Upload Year selected as:"+Report_Year,Status.PASS);*/
		driver.findElement(Browse_btn).click();

		
		StringSelection filepath = new StringSelection(System.getProperty("user.dir")+"\\Valid_Template_Files\\"+Filename+"."+Extension); 


	
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
		System.out.println("File Selected for Australia");

		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(2000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_V);
		Thread.sleep(2000);
		robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
		System.out.println("file upload done");
		f1.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")));
		String filename=driver.findElement(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")).getText();

		System.out.println("Uploaded file name is"+filename);
		report.updateTestLog("Uploaded file name is", filename, Status.PASS);

		String status2=driver.findElement(By.xpath("//*[contains(@class,'upload-WithProgress')]//p[contains(@class,'completed-status')]")).getText();

		System.out.println("Uploaded file status is"+status2);
		report.updateTestLog("Uploaded file status is", status2, Status.PASS);	
		driver.findElement(By.xpath("//*[@id='uploadform']/div[3]/button")).click();
		report.updateTestLog("Submit button is selected", filename, Status.PASS);

		//Alert

		{
			int i=0;
			while(i++<5)
			{
				try
				{

					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);
					break;
				}
				catch(NoAlertPresentException e)
				{
					Thread.sleep(1000);
					continue;
				}
			}
		}


	


	}
	
	public void ESS_Upload_Template_errorfile() throws Exception

	{
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		By UploadType = By.xpath("//*[@id='uploadform']/div[1]/div[1]/select[@ng-model='UploadTypeId']");
		By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
		By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
		By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
		By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


		/* Identifiers Ends */


		//driver.findElement(ManageContribution).click();
		
		/*String UploadType = dataTable.getData("General_Data", "UploadTransaction_Type");
		System.out.println(UploadType + "Upload type is selected");
		report.updateTestLog("Upload type selection ", "Upload type selected as: "+ UploadType , Status.PASS);
		selectValueFromDropDown(drpdownUploadType,UploadType);*/
		
		

		Select drptxt1 = new Select(driver.findElement(UploadType));
		drptxt1.selectByVisibleText("Australia ESS upload");
		System.out.println("Upload Transaction is selected");
		report.updateTestLog("Upload Transaction selection"," Transaction selected as Australia ESS upload",Status.PASS);
		Thread.sleep(3000);
		/*Select drptxt2 = new Select(driver.findElement(UploadMonth));
		//	drptxt2.selectByVisibleText("January");
		drptxt2.selectByVisibleText(Report_Month);

		System.out.println("Upload Month is selected");
		report.updateTestLog("Upload Month Selection","Upload Month selected as :"+Report_Month,Status.PASS);

		Select drptxt3 = new Select(driver.findElement(UploadYear));
		//	drptxt2.selectByValue("2020");
		drptxt3.selectByValue(Report_Year);
		System.out.println("Upload Year is selected");
		report.updateTestLog("Upload Year is selection","Upload Year selected as:"+Report_Year,Status.PASS);*/
		driver.findElement(Browse_btn).click();

		
		StringSelection filepath = new StringSelection(System.getProperty("user.dir")+"\\Valid_Template_Files\\"+Filename1+"."+Extension); 


	
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
		System.out.println("File Selected for Australia");

		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(2000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_V);
		Thread.sleep(2000);
		robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
		System.out.println("file upload done");
		f1.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")));
		String filename=driver.findElement(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")).getText();

		System.out.println("Uploaded file name is"+filename);
		report.updateTestLog("Uploaded file name is", filename, Status.PASS);

		String status2=driver.findElement(By.xpath("//*[contains(@class,'upload-WithProgress')]//p[contains(@class,'completed-status')]")).getText();

		System.out.println("Uploaded file status is"+status2);
		report.updateTestLog("Uploaded file status is", status2, Status.PASS);	
		driver.findElement(By.xpath("//*[@id='uploadform']/div[3]/button")).click();
		report.updateTestLog("Submit button is selected", filename, Status.PASS);

		//Alert

		{
			int i=0;
			while(i++<5)
			{
				try
				{

					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);
					break;
				}
				catch(NoAlertPresentException e)
				{
					Thread.sleep(1000);
					continue;
				}
			}
		}


	


	}
	
	public void ESS_Upload_Template_errorfile1() throws Exception

	{
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		By UploadType = By.xpath("//*[@id='uploadform']/div[1]/div[1]/select[@ng-model='UploadTypeId']");
		By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
		By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
		By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
		By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


		/* Identifiers Ends */


		//driver.findElement(ManageContribution).click();
		
		/*String UploadType = dataTable.getData("General_Data", "UploadTransaction_Type");
		System.out.println(UploadType + "Upload type is selected");
		report.updateTestLog("Upload type selection ", "Upload type selected as: "+ UploadType , Status.PASS);
		selectValueFromDropDown(drpdownUploadType,UploadType);*/
		
		

		Select drptxt1 = new Select(driver.findElement(UploadType));
		drptxt1.selectByVisibleText("Australia ESS upload");
		System.out.println("Upload Transaction is selected");
		report.updateTestLog("Upload Transaction selection"," Transaction selected as Australia ESS upload",Status.PASS);
		Thread.sleep(3000);
		/*Select drptxt2 = new Select(driver.findElement(UploadMonth));
		//	drptxt2.selectByVisibleText("January");
		drptxt2.selectByVisibleText(Report_Month);

		System.out.println("Upload Month is selected");
		report.updateTestLog("Upload Month Selection","Upload Month selected as :"+Report_Month,Status.PASS);

		Select drptxt3 = new Select(driver.findElement(UploadYear));
		//	drptxt2.selectByValue("2020");
		drptxt3.selectByValue(Report_Year);
		System.out.println("Upload Year is selected");
		report.updateTestLog("Upload Year is selection","Upload Year selected as:"+Report_Year,Status.PASS);*/
		driver.findElement(Browse_btn).click();

		
		StringSelection filepath = new StringSelection(System.getProperty("user.dir")+"\\Valid_Template_Files\\"+Filename1+"."+Extension); 


	
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
		System.out.println("File Selected for Australia");

		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(2000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_V);
		Thread.sleep(2000);
		robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
		System.out.println("file upload done");
		f1.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")));
		String filename=driver.findElement(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")).getText();

		System.out.println("Uploaded file name is"+filename);
		report.updateTestLog("Uploaded file name is", filename, Status.PASS);

		String status2=driver.findElement(By.xpath("//*[contains(@class,'upload-WithProgress')]//p[contains(@class,'completed-status')]")).getText();

		System.out.println("Uploaded file status is"+status2);
		report.updateTestLog("Uploaded file status is", status2, Status.PASS);	
		driver.findElement(By.xpath("//*[@id='uploadform']/div[3]/button")).click();
		report.updateTestLog("Submit button is selected", filename, Status.PASS);

		//Alert

		{
			int i=0;
			while(i++<5)
			{
				try
				{

					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.FAIL);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.PASS);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);
					break;
				}
				catch(NoAlertPresentException e)
				{
					Thread.sleep(1000);
					continue;
				}
			}
		}


	


	}
	
	private void selectValueFromDropDown(WebElement drpdownUploadType2, By uploadType) {
		// TODO Auto-generated method stub
		
	}

	public void selectValueFromDropDown(WebElement element, String dropDownvalue) throws Exception {

		//try {
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.textToBePresentInElement(element, dropDownvalue));
			if (element.isDisplayed() && element.isEnabled()) {
				JavascriptExecutor js = (JavascriptExecutor) driver;
				((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].style.border='2px groove red'", element);
				js.executeScript("arguments[0].style.border=''", element);
				Select dropDown = new Select(element);
				dropDown.selectByVisibleText(dropDownvalue);
				//System.out.println("Company ID is selected");
				//report.updateTestLog("Company ID verification", "CTS is selected", Status.PASS);
			} else {
				report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
				Assert.fail();
			}
			/*}	
		} catch (Exception exception) {
		
			Assert.fail(exception.getMessage());
			report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
		}*/
	}
	public void Membership_Upload_Template_2() throws InterruptedException

	{
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		By UploadType = By.xpath("//*[@id='uploadform']/div[1]/div[1]/select[@ng-model='UploadTypeId']");
		By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
		By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
		By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
		By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


		/* Identifiers Ends */


		//driver.findElement(ManageContribution).click();

		Select drptxt1 = new Select(driver.findElement(UploadType));
		drptxt1.selectByVisibleText(UploadTransaction_Type);
		System.out.println("Upload Transaction is selected");
		report.updateTestLog("Upload Transaction is selected in Upload Type",UploadTransaction_Type,Status.PASS);

		Select drptxt2 = new Select(driver.findElement(UploadMonth));

		drptxt2.selectByVisibleText(Report_Month);
		System.out.println("Upload Month is selected");
		report.updateTestLog("Upload Month is selected in Month field","",Status.PASS);

		Select drptxt3 = new Select(driver.findElement(UploadYear));
		//	drptxt2.selectByValue("2020");
		//	drptxt2.selectByVisibleText(Report_Year);
		System.out.println("Upload Year is selected");
		report.updateTestLog("Upload Year is selected in Year field","",Status.PASS);
		driver.findElement(Browse_btn).click();

		
		StringSelection filepath = new StringSelection(System.getProperty("user.dir")+"\\Valid_Template_Files\\"+Filename+"."+Extension); 

		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
		System.out.println("File Selected for Australia");

		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(2000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_V);
		Thread.sleep(2000);
		robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
		System.out.println("file upload done");
		f1.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")));
		String filename=driver.findElement(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")).getText();

		System.out.println("Uploaded file name is"+filename);
		report.updateTestLog("Uploaded file name is", filename, Status.PASS);

		String status2=driver.findElement(By.xpath("//*[contains(@class,'upload-WithProgress')]//p[contains(@class,'completed-status')]")).getText();

		System.out.println("Uploaded file status is"+status2);
		report.updateTestLog("Uploaded file status is", status2, Status.PASS);	
		driver.findElement(By.xpath("//*[@id='uploadform']/div[3]/button")).click();
		report.updateTestLog("Submit button is selected", filename, Status.PASS);

		//Alert

		{
			int i=0;
			while(i++<5)
			{
				try
				{

					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					//alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);
					break;
				}
				catch(NoAlertPresentException e)
				{
					Thread.sleep(1000);
					continue;
				}
			}
		}


		/*		f1.sleep(200);
			try
			{
				Alert alert = driver.switchTo().alert();
				String sucessmsg=alert.getText();
				alert.accept();
				if(sucessmsg.contains(ExpectedMessage)) 
				{
				System.out.println("sucessmsg"+sucessmsg);
				report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
				}
				else
				{
					System.out.println("sucessmsg"+sucessmsg);
					report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

				}
				// Click on OK button.
				alert.accept();
				System.out.println("Accept Alert");
				report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
				System.out.println("Ok button is Clicked ");
				report.updateTestLog("Ok button is Clicked ","", Status.PASS);

				//f1.sleep(3000);
				//System.out.println("wait done");
			}
				catch(NoAlertPresentException e)
				{
					e.printStackTrace();
				}*/


	}
	public void error_excel(String sheetname)
	{
		
		report.addTestLogSubSection("Error excel download validation");
		//Manage Contribution page
		By Error_img = By.xpath("//*[@id='dvError']/a/img");
		try{
			wait.until(ExpectedConditions.visibilityOfElementLocated(Error_img));
			driver.findElement(Error_img).click();
			System.out.println("Error excel is displayed in the ui ");
			report.updateTestLog("Error excel validation", "Error excel is displayed in the ui", Status.PASS);
			f1.sleep(6000);

			String filename=f1.Filedownload_1(Filepath, "ErrorExcel", Extension);
			String home = System.getProperty("user.home");
			File file = new File(home+"/Downloads/" + filename); 
			System.out.println("file"+file);	

			//String error=getCellData_columnname(file, "Table", 1, "Error Description");
			//String error=getCellData_columnname(file, sheetname, 1, "Error Description");
			String error=readtemplate(file,sheetname,1,"Error Description");
			System.out.println("Error Description column is present in the Error excel with the error: "+error);
			report.updateTestLog("Error Description column is present in the Error excel with the error: ", error, Status.PASS);


		}catch(Exception e)
		{
			System.out.println("Error while downloading the Error excel "+e);
			report.updateTestLog("Error while downloading the Error excel", "", Status.FAIL);
		}
	}
	
	// to validate error template of ESS upload
	public void ESS_error_excel(String Table1)
	{
		
		report.addTestLogSubSection("Error excel download validation");
		//Manage Contribution page
		By Error_img = By.xpath("//*[@id='dvError']/a/img");
		try{
			wait.until(ExpectedConditions.visibilityOfElementLocated(Error_img));
			driver.findElement(Error_img).click();
			System.out.println("Error excel is displayed in the ui ");
			report.updateTestLog("Error excel is displayed in the ui", "", Status.PASS);
			f1.sleep(6000);

			String filename=f1.Filedownload_1(Filepath, "ErrorExcel", Extension);
			String home = System.getProperty("user.home");
			File file = new File(home+"/Downloads/" + filename); 
			System.out.println("file"+file);	

			//String error=getCellData_columnname(file, "Table", 1, "Error Description");
			//String error=getCellData_columnname(file, "Table1", 1, "Error Description");
			String error=readtemplate(file,Table1,1,"Error Description");
			System.out.println("Error Description column is present in the Error excel with the error: "+error);
			report.updateTestLog("Error Description column is present in the Error excel with the error: ", error, Status.PASS);


		}catch(Exception e)
		{
			System.out.println("Error while downloading the Error excel "+e);
			report.updateTestLog("Error while downloading the Error excel", "", Status.FAIL);
		}
	}
	public void Transaction_Update_Template_2() throws InterruptedException

	{
		
		report.addTestLogSubSection("Transaction_Update_Template validation");
		//Manage Contribution page
		By Upload = By.xpath("//a[text()='Upload']");
		By Reports = By.xpath("//a[text()='Reports']");

		By UploadType = By.xpath("//*[@id='uploadform']/div[1]/div[1]/select[@ng-model='UploadTypeId']");
		By UploadMonth = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadMonthId']");
		By UploadYear = By.xpath("//*[@id='uploadform']//select[@ng-model='UploadYear']");
		By Browse_btn = By.xpath("//label[contains(text(),'Upload File')]/../label[contains(text(),'Browse')]");
		By Submit_btn = By.xpath("//button[text()='Submit' and @disabled='disabled']");


		/* Identifiers Ends */


		//driver.findElement(ManageContribution).click();

		Select drptxt1 = new Select(driver.findElement(UploadType));
		drptxt1.selectByVisibleText(UploadTransaction_Type);
		System.out.println("Update Transaction is selected");
		report.updateTestLog("Upload Transaction is selected as: ",UploadTransaction_Type,Status.PASS);

		/*	Select drptxt2 = new Select(driver.findElement(UploadMonth));
			drptxt2.selectByVisibleText(Report_Month);
			System.out.println("Upload Month is selected");
			report.updateTestLog("Upload Month is selected in Month field","",Status.PASS);

			Select drptxt3 = new Select(driver.findElement(UploadYear));
		//	drptxt2.selectByValue(Report_Year);
			System.out.println("Upload Year is selected");
			report.updateTestLog("Upload Year is selected in Year field","",Status.PASS);*/
		driver.findElement(Browse_btn).click();
		StringSelection filepath = new StringSelection(System.getProperty("user.dir")+"\\Valid_Template_Files\\"+Filename+"."+Extension); 
		
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
		System.out.println("File Selected for Australia");

		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(2000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_V);
		Thread.sleep(2000);
		robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
		System.out.println("file upload done");
		f1.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")));
		String filename=driver.findElement(By.xpath("//*[@id='uploadform']//span[@class='choosen-file']")).getText();

		System.out.println("Updated file name is"+filename);
		report.updateTestLog("Updated file name is", filename, Status.PASS);

		String status2=driver.findElement(By.xpath("//*[contains(@class,'upload-WithProgress')]//p[contains(@class,'completed-status')]")).getText();

		System.out.println("Updated file status is"+status2);
		report.updateTestLog("Updated file status is", status2, Status.PASS);	
		driver.findElement(By.xpath("//*[@id='uploadform']/div[3]/button")).click();
		report.updateTestLog("Submit button is selected", filename, Status.PASS);

		//Alert

		{
			int i=0;
			while(i++<5)
			{
				try
				{

					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);
					break;
				}
				catch(NoAlertPresentException e)
				{
					Thread.sleep(1000);
					continue;
				}
			}
		}


		/*		f1.sleep(200);
				try
				{
					Alert alert = driver.switchTo().alert();
					String sucessmsg=alert.getText();
					alert.accept();
					if(sucessmsg.contains(ExpectedMessage)) 
					{
					System.out.println("sucessmsg"+sucessmsg);
					report.updateTestLog("Expected alert message is displayed in Ui", sucessmsg, Status.PASS);
					}
					else
					{
						System.out.println("sucessmsg"+sucessmsg);
						report.updateTestLog("Expected alert message is not displayed in Ui", sucessmsg, Status.FAIL);

					}
					// Click on OK button.
					alert.accept();
					System.out.println("Accept Alert");
					report.updateTestLog("Ok button is selected in the success message", sucessmsg, Status.PASS);
					System.out.println("Ok button is Clicked ");
					report.updateTestLog("Ok button is Clicked ","", Status.PASS);

					//f1.sleep(3000);
					//System.out.println("wait done");
				}
					catch(NoAlertPresentException e)
					{
						e.printStackTrace();
					}*/


	}

	public void testexcel() {


		//getCellData_columnname(file, "Table", 1, "Error Description");
		try {
			readtemplate(file,"Table1",1,"Error Description");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


	public void getClipboard()
	{


		Robot robot;
		try {
			robot = new Robot();


			// Thread.sleep(30000);
			System.out.println("sleep done 1");
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_A);
			robot.keyRelease(KeyEvent.VK_A);
			robot.keyRelease(KeyEvent.VK_CONTROL);
			Thread.sleep(30000);
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_C);
			robot.keyRelease(KeyEvent.VK_C);
			robot.keyRelease(KeyEvent.VK_CONTROL);
			//  Thread.sleep(30000);
			System.out.println("sleep done 2");
			Transferable t = Toolkit.getDefaultToolkit().getSystemClipboard()
					.getContents(null);
			try {
				if (t != null && t.isDataFlavorSupported(DataFlavor.stringFlavor)) {
					String wintext = (String) t
							.getTransferData(DataFlavor.stringFlavor);

					System.out.println("wintext" + wintext);

					if ("".equalsIgnoreCase(wintext.trim())) {
						System.out.println("text is identical");

					} else {
						System.out.println("text is identical");
						System.out.println(wintext);
					}
					// return text.trim();
				}
			} catch (Exception e) {
			}


		} catch (AWTException | InterruptedException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}



	public void TC23_managecontribution_reports()

    {      
		report.addTestLogSubSection("managecontribution_reports validation");
		try{        
          By Reports = By.xpath("//a[text()='Report']");

          By ReportType = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportType']");
          By ReportMonth = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportMonthId']");
          By ReportYear = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportYear']");
          By GenerateReport_btn = By.xpath("//button[text()='Generate Report']"); 

          driver.findElement(Reports).click();
          
          wait.until(ExpectedConditions.visibilityOfElementLocated(ReportType));
          
          //Ui validation -Manage Contribution' tile - Upload tab
          isdisplayed_validation(ReportType,"ReportType");
          isdisplayed_validation(ReportMonth,"ReportMonth");
          isdisplayed_validation(ReportYear,"ReportYear");
          isdisplayed_validation(GenerateReport_btn,"GenerateReport_btn");



          By GenerateReportbtn = By.xpath("//button[text()='Generate Report']");



          By Reporttype_Default_membershipreport=By.xpath("//*[@id='idformReport']/div[1]/div[1]/select");
          By ReportMonth_disable = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportMonthId'and @disabled='disabled']");
          By ReportYear_disable = By.xpath("//*[@id='idformReport']//select[@ng-model='ReportYear'and @disabled='disabled']");


          wait.until(ExpectedConditions.visibilityOfElementLocated(ReportType));
          f1.sleep(3000);
          String Reporttype_Default=driver.findElement(Reporttype_Default_membershipreport).getText();
          System.out.println("Reporttype_Default"+Reporttype_Default);
          if(Reporttype_Default.contains("Membership Report"))
          {
                isdisplayed_disabled(ReportMonth_disable,"Membership Report 'Report Month'");
                isdisplayed_disabled(ReportYear_disable,"Membership Report 'Report Year'");
          }

          //Membership Report
          
          try{
                driver.findElement(GenerateReportbtn).click();

                Thread.sleep(15000);
                f1.Filedownload_1(Filepath, Filename, Extension);
          }catch(Exception e)
          {
                System.out.println("Error while validating  Membership Report "+e);
                report.updateTestLog("Error while validating  Membership Report'", "", Status.FAIL);
          }

          Thread.sleep(5000);

          //Contribution Report
          
          //Select Report type
          Select drptxt2 = new Select(driver.findElement(ReportType));
          drptxt2.selectByVisibleText("Contribution Report");
          System.out.println("Report Type is selected");
          report.updateTestLog("Report Type is selected","Contribution Report",Status.PASS);


          //Select Report Month
          Select drptxt3 = new Select(driver.findElement(ReportMonth));
          drptxt3.selectByVisibleText(Report_Month);
          System.out.println("Report Month is selected");
          report.updateTestLog("Report Month is selected",Report_Month,Status.PASS);

          //Select Report Year
          Select drptxt4 = new Select(driver.findElement(ReportYear));
          drptxt4.selectByVisibleText(Report_Year);
          System.out.println("Report Year is selected");
          report.updateTestLog("Report Year is selected",Report_Year,Status.PASS);

          driver.findElement(GenerateReportbtn).click();

          Thread.sleep(15000);
          f1.Filedownload_1(Filepath, Filename, Extension);
    }catch(Exception e)
    {
          System.out.println("Error while validating Manage Contribution Report "+e);
          report.updateTestLog("Error while validating Manage Contribution Report'", "", Status.FAIL);
    }




    
}
	
	public String readtemplate(File file,String sheetname, int rowNum, String colName) throws IOException
	{
		
		try {	
			
			
			System.out.println("1");
			FileInputStream fis = new FileInputStream(dataTable.getData("General_Data", "Filepath"));
			System.out.println(fis);
			//workbook.close();
			XSSFWorkbook workbook = new XSSFWorkbook(fis);
			//XSSFWorkbook workbook = new XSSFWorkbook(fis);
		      System.out.println("workbook");
			//XSSFWorkbook wb1 = new XSSFWorkbook(fis);
			XSSFSheet sheet = workbook .getSheet("Table1");
			//fis = new FileInputStream(file2);
			//workbook = new XSSFWorkbook(fis);
			//sheet = workbook.getSheet(sheetName);
			System.out.println("2a");
			int col_Num = 0;
			row = sheet.getRow(0);
			//System.out.println("row"+row);
			System.out.println("row count"+row.getLastCellNum());
			int row_count=row.getLastCellNum();
			for (int i = 0; i <=row_count; i++) 
			{
				System.out.println("i value :"+i);
				System.out.println(row.getCell(i).getStringCellValue().trim());
				 
				if (row.getCell(i).getStringCellValue().trim().equals(colName.trim()))
				{
					//sheet.createRow(1).createCell(i).setCellValue(value);
					System.out.println("Pass");
					col_Num = i;
					break;
				}
				else if(row.getCell(i).getStringCellValue().trim()!=(colName.trim())&& i == row.getLastCellNum()-1)
				{
					System.out.println("Given Column Name is not present in the excell sheet");
				}else {
					//Do nothing
				}
				
			}
			

			cell = sheet.getRow(rowNum).getCell(col_Num);
			//cell = row.getCell(col_Num);

			if (cell.getCellType() == Cell.CELL_TYPE_STRING) {
			System.out.println(cell.getStringCellValue());
			return cell.getStringCellValue();
			} else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC || cell.getCellType() == Cell.CELL_TYPE_FORMULA) {

			String cellValue = String.valueOf(cell.getNumericCellValue());
			if (HSSFDateUtil.isCellDateFormatted(cell)) {

			DateFormat df = new SimpleDateFormat("dd/MM/yy");
			Date date = cell.getDateCellValue();
			cellValue = df.format(date);
			}
			return cellValue;
			} else if (cell.getCellType() == Cell.CELL_TYPE_BLANK) {

			return "";
			} 
			
			else {
			return String.valueOf(cell.getBooleanCellValue());
			}
			
			
			} 
		
		catch (Exception e) {
			e.printStackTrace();
			return "row " + rowNum + " or column " + colName + " does not exist  in Excel";
			}
		
		
		}
	
/*	public File file = null;
	public FileInputStream fis = null;
	public XSSFWorkbook workbook = null;
	public HSSFWorkbook workbookxls = null;
	public XSSFSheet sheet = null;
	public XSSFRow row = null;
	public XSSFCell cell = null;
	public FileOutputStream fos = null;
	public XSSFCell newCell = null;
	public OPCPackage opcPackage = null;
	
	public String readtemplate(File file,String sheetname, int rowNum, String colName) throws IOException
	{
		
		try {	
			
			
			System.out.println("1");
			FileInputStream fis = new FileInputStream(dataTable.getData("General_Data", "Filepath"));
			System.out.println(fis);
			
			XSSFWorkbook wb1=new XSSFWorkbook(file);
		      System.out.println("wrkbook");
			//XSSFWorkbook wb1 = new XSSFWorkbook(fis);
			XSSFSheet sheet = wb1.getSheet("Table1");
			//fis = new FileInputStream(file2);
			//workbook = new XSSFWorkbook(fis);
			//sheet = workbook.getSheet(sheetName);
			System.out.println("2a");
			int col_Num = 0;
			row = sheet.getRow(0);
			//System.out.println("row"+row);
			System.out.println("row count"+row.getLastCellNum());
			int row_count=row.getLastCellNum();
			for (int i = 0; i <=row_count; i++) 
			{
				System.out.println("i value :"+i);
				System.out.println(row.getCell(i).getStringCellValue().trim());
				 
				if (row.getCell(i).getStringCellValue().trim().equals(colName.trim()))
				{
					//sheet.createRow(1).createCell(i).setCellValue(value);
					System.out.println("Pass");
					col_Num = i;
					break;
				}
				else if(row.getCell(i).getStringCellValue().trim()!=(colName.trim())&& i == row.getLastCellNum()-1)
				{
					System.out.println("Given Column Name is not present in the excell sheet");
				}else {
					//Do nothing
				}
				
			}
			

			cell = sheet.getRow(rowNum).getCell(col_Num);
			//cell = row.getCell(col_Num);

			if (cell.getCellType() == Cell.CELL_TYPE_STRING) {
			System.out.println(cell.getStringCellValue());
			return cell.getStringCellValue();
			} else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC || cell.getCellType() == Cell.CELL_TYPE_FORMULA) {

			String cellValue = String.valueOf(cell.getNumericCellValue());
			if (HSSFDateUtil.isCellDateFormatted(cell)) {

			DateFormat df = new SimpleDateFormat("dd/MM/yy");
			Date date = cell.getDateCellValue();
			cellValue = df.format(date);
			}
			return cellValue;
			} else if (cell.getCellType() == Cell.CELL_TYPE_BLANK) {

			return "";
			} 
			
			else {
			return String.valueOf(cell.getBooleanCellValue());
			}
			
			
			} 
		
		catch (Exception e) {
			e.printStackTrace();
			return "row " + rowNum + " or column " + colName + " does not exist  in Excel";
			}
		
		
		}
	}*/
	       /*//String Empid=dataTable.getData("General_Data","Empid");
	       //System.out.println(Empid);

	    ArrayList<String> lis =new ArrayList<String>();
	    DecimalFormat ds=new DecimalFormat("#");
	    //Map<String,String> map=new HashMap<String ,String>();

	       try
	       {
	      FileInputStream file = new FileInputStream (dataTable.getData("General_Data","Filepath"));
	      System.out.println(file);
	      //Create an object of FileInputStream class to read excel file
	      //FileInputStream inputStream = new FileInputStream(file);
	      //System.out.println("Input");

	      //creating workbook instance that refers to .xls file
	      //@SuppressWarnings("resource")
	      XSSFWorkbook wb1=new XSSFWorkbook(file);
	      System.out.println("wrkbook");

	      //creating a Sheet object
	      XSSFSheet sheet1=wb1.getSheet("Table1");
	      System.out.println("readtemp");

	      //get all rows in the sheet
	      int rowCount=sheet1.getPhysicalNumberOfRows()-sheet1.getFirstRowNum();
	      System.out.println(rowCount);
	       
	      
	      //iterate over all the row to print the data present in each cell.
	      for(int i=0;i<=rowCount;i++)
	      {
	    
	         //get cell count in a row
	         int cellcount=sheet1.getRow(i).getLastCellNum();
	         System.out.println(cellcount);
	          
	         Cell celltype=sheet1.getRow(i).getCell(0);
	         
	         if(celltype.getCellType()==celltype.CELL_TYPE_STRING)
	         {

	         //iterate over each cell to print its value
	         //   System.out.println("Row"+ i+" data is :");
	         String excelout=sheet1.getRow(i).getCell(0).getStringCellValue().toString();
	         System.out.println(excelout);
	         }
	         if(celltype.getCellType()==celltype.CELL_TYPE_NUMERIC)
	         {
	              
	               String excelout=ds.format(celltype.getNumericCellValue());
	               System.out.println("Double Value"+excelout);

	         }
	             if(excelout.contains(Empid))
	          {
	               
	               System.out.println("Loop entered");

	               for(int j=0;j<cellcount;)
	               {
	                      Cell cell2 = sheet1.getRow(i).getCell(j);
	                      Cell first=sheet1.getRow(0).getCell(j);
	                      //switch (cell.getCellType())    
	                      System.out.println(first.getStringCellValue());
	                      //String celltype=cell.getCellType();
	     
	                      if(cell2.getCellType()==cell2.CELL_TYPE_STRING)
	                      {
	                            //field that represents string cell type 
	                            System.out.print(cell2.getStringCellValue() + "\t\t\t");
	                            //map.put(first.getStringCellValue(),cell2.getStringCellValue());
	                            lis.add(cell2.getStringCellValue());
	       
	                      }
	                      //System.out.printcell.getStringCellValue() + "\t\t\t");  
	                      //break;  
	                      else if(cell2.getCellType()==cell2.CELL_TYPE_NUMERIC)
	                      {
	                            //System.out.println(cell2.getNumericCellValue()+"\t\t\t");
	                            //String cell3=Double.toString(cell2.getNumericCellValue());
	                            String cell3=ds.format(cell2.getNumericCellValue());
	                            System.out.println("Double Value"+cell3);
	                            //String cell4=cell3.toString();

	                            lis.add(cell3);
	                            //map.put(first.getStringCellValue(),cell3);
	                      }
	                      j++;
	}

	break;
	   }
	       
	      }*/

	
}


package pages;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFDateUtil;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.cognizant.framework.Status;

import supportlibraries.*;


/**
 * MasterPage Abstract class
 * @author Cognizant
 */
abstract class MasterPage_Aus extends ReusableLibrary
{	
	// UI Map object definitions
	@FindBy(linkText = "SIGN-OFF")
	public WebElement signOff;
	@FindBy(linkText = "REGISTER")
	public WebElement register;
	String selected_upload_type="";
	
	/**
	 * Constructor to initialize the functional library
	 * @param scriptHelper The {@link ScriptHelper} object passed from the {@link DriverScript}
	 */
	protected MasterPage_Aus(ScriptHelper scriptHelper)
	{
		super(scriptHelper);
		
		PageFactory.initElements(driver, this);
	}
	
	public void clickOnButton(WebElement element) throws Exception {

		try {
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.visibilityOf(element));
			JavascriptExecutor js = (JavascriptExecutor) driver;
			((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
			if (element.isDisplayed() && element.isEnabled()){
				try {
					js.executeScript("arguments[0].style.border='2px groove red'", element);
					Thread.sleep(8000);
					element.click();
					js.executeScript("arguments[0].style.border=''", element);
				} catch (Exception e) 
				{
					Assert.fail(e.getMessage());
				}
			} else {
			
				Assert.fail();
			}
		} catch (Exception exception) {

			Assert.fail(exception.getMessage());
		}
	}
	
	
	public void List_Selection(String Field_data, String list_xpath,String field_name) throws Exception 
	{
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(list_xpath)));
			List<WebElement> list = driver.findElements(By.xpath(list_xpath));
			Thread.sleep(3000);
				for(WebElement Find_list:list)
				{
					
					if(Find_list.getText().trim().contains(Field_data.trim()))
					{
						HighlightElement_green(Find_list);
						Find_list.click();
						System.out.println(field_name+" selected successfully");
						break;
					}					
				}
	}
	
	public void selectValueFromDropDown(WebElement element, String dropDownvalue) throws Exception {

		//try {
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.textToBePresentInElement(element, dropDownvalue));
			if (element.isDisplayed() && element.isEnabled()) {
				JavascriptExecutor js = (JavascriptExecutor) driver;
				((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
				js.executeScript("arguments[0].style.border='2px groove red'", element);
				js.executeScript("arguments[0].style.border=''", element);
				Select dropDown = new Select(element);
				dropDown.selectByVisibleText(dropDownvalue);
				//System.out.println("Company ID is selected");
				//report.updateTestLog("Company ID verification", "CTS is selected", Status.PASS);
			} else {
				report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
				Assert.fail();
			}
			/*}	
		} catch (Exception exception) {
		
			Assert.fail(exception.getMessage());
			report.updateTestLog("Dropdown data Selection"," "+dropDownvalue+" is Not selected in dropdown", Status.FAIL);
		}*/
	}
	public void HighlightElement_red( WebElement element) {
		JavascriptExecutor js = (JavascriptExecutor) driver;

		try {
			
			js.executeScript("arguments[0].scrollIntoView(true);", element);
			js.executeScript("arguments[0].setAttribute('style', 'background: red; border: 2px solid red;');",element);
			js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
		} catch (Exception e) {
			//count++;
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
	}
	public void HighlightElement_green( WebElement element) throws Exception {
		JavascriptExecutor js = (JavascriptExecutor) driver;

		try {
			js.executeScript("arguments[0].setAttribute('style', 'background: green; border: 2px solid red;');",element);
//			js.executeScript("arguments[0].scrollIntoView(true);", element);
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
		
	}
	
	public File file = null;
	public FileInputStream fis = null;
	public XSSFWorkbook workbook = null;
	public XSSFSheet sheet = null;
	public XSSFRow row = null;
	public XSSFCell cell = null;
	public FileOutputStream fos = null;
	public XSSFCell newCell = null;
	public OPCPackage opcPackage = null;

	public String getCellData(String ExcelPath,String sheetName, int rowNum, String colName){
		try {
			System.out.println("1");
			fis = new FileInputStream(ExcelPath);
			workbook = new XSSFWorkbook(fis);
			sheet = workbook.getSheet(sheetName);
			System.out.println("2a");
			int col_Num = 0;
			row = sheet.getRow(0);
			System.out.println("row count"+row.getLastCellNum());
			for (int i = 0; i < row.getLastCellNum(); i++) 
			{
				System.out.println("i value :"+i);
				if (row.getCell(i).getStringCellValue().trim().equals(colName.trim()))
				{
					//sheet.createRow(1).createCell(i).setCellValue(value);
					System.out.println("Pass");
					col_Num = i;
					break;
				}
				else if(row.getCell(i).getStringCellValue().trim()!=(colName.trim())&& i == row.getLastCellNum()-1)
				{
					System.out.println("Given Column Name is not present in the excell sheet");
				}else {
					//Do nothing
				}
				
			}
			

			cell = sheet.getRow(rowNum).getCell(col_Num);
			//cell = row.getCell(col_Num);

			if (cell.getCellType() == Cell.CELL_TYPE_STRING) {
			System.out.println(cell.getStringCellValue());
			return cell.getStringCellValue();
			} else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC || cell.getCellType() == Cell.CELL_TYPE_FORMULA) {

			String cellValue = String.valueOf(cell.getNumericCellValue());
			if (HSSFDateUtil.isCellDateFormatted(cell)) {

			DateFormat df = new SimpleDateFormat("dd/MM/yy");
			Date date = cell.getDateCellValue();
			cellValue = df.format(date);
			}
			return cellValue;
			} else if (cell.getCellType() == Cell.CELL_TYPE_BLANK) {

			return "";
			} else {
			return String.valueOf(cell.getBooleanCellValue());
			}
			} catch (Exception e) {
			e.printStackTrace();
			return "row " + rowNum + " or column " + colName + " does not exist  in Excel";
			}
		
		
	}
	
	
}

/**
 * 
 */
package pages;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.Properties;
import java.util.TimeZone;
import org.openqa.selenium.By;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.*;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.UnexpectedAlertBehaviour;
import org.openqa.selenium.UnhandledAlertException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;

import com.cognizant.framework.CraftliteDataTable;
import com.cognizant.framework.Status;
import com.cognizant.framework.selenium.ResultSummaryManager;
import com.cognizant.framework.selenium.SeleniumReport;
import com.cognizant.framework.selenium.SeleniumTestParameters;
import functionallibraries.FunctionalLibrary;
import supportlibraries.DriverScript;
import supportlibraries.ReusableLibrary;
import supportlibraries.ScriptHelper;
import org.openqa.selenium.support.ui.*;
import org.testng.Assert;
/**
 * @author 569996
 *
 */

@SuppressWarnings("deprecation")
public class Page extends ReusableLibrary {

	public Page(ScriptHelper scriptHelper) {
		super(scriptHelper);

	}

	/**
	 * @param args
	 * @throws InterruptedException
	 *             Class to login in TEConcur
	 */
	public void PageLogin() throws InterruptedException {
		
		FunctionalLibrary S = new FunctionalLibrary(scriptHelper);
		report.addTestLogSection("Setup");
		driver.get(properties.getProperty("ApplicationUrl"));
		report.updateTestLog("Invoke Application", "Invoke the application under test @ " +
								properties.getProperty("ApplicationUrl"), Status.DONE);
		S.sleep(5000);
		}

	/**
	 * Method to generate random email.
	 */
	private static String randomEmail() {
		return "random-" + UUID.randomUUID().toString() + "@example.com";

	}
	/**
	 * 
	 * @author 569996 Method to create a prospect
	 *
	 */
	public String country_list_xpath="//a[contains(@class,'ng-binding')]";
	private FunctionalLibrary functionalLibrary;
	private FluentWait<WebDriver> wait;
	
	public void ManageUsers_Page() 
	{
		try
		{
		Thread.sleep(60000);
		//WebDriverWait wait = new WebDriverWait(driver, 50);
		functionalLibrary = new FunctionalLibrary(scriptHelper);
		
		//To click on the drop down
		//driver.findElement(By.xpath("//*[@id='arrowImg']")).click();
		/*System.out.println("Clicked on country drop down");
		report.updateTestLog("Click Drop down", "Clicked on country drop down", Status.DONE); 	*/
		
		//To click on Australia
		
		WebElement count=driver.findElement(By.xpath("//button[@id='countrySelect']"));
		JavascriptExecutor js=(JavascriptExecutor)driver;
		js.executeScript("arguments[0].click();", count);
		//clickOnButton(country_dropdown_button);
		String country_setting=properties.getProperty("country_setting");
		
		String country_name= dataTable.getData("General_Data", "Country");
		List_Selection(country_name, country_list_xpath, "country");
		System.out.println("Country name:" +country_name);
		report.updateTestLog("Country selection", "Selected Country : " +country_name, Status.DONE);
		/*
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[text()=' Australia']")));
		driver.findElement(By.xpath("//*[text()=' Australia']")).click();
		System.out.println("Selected Australia");
		report.updateTestLog("Select Australia", "Selected Australia", Status.SCREENSHOT); 	*/
		
		//To click on Manage Users
		Thread.sleep(6000);
		//wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[text()='Manage Users']")));
		driver.findElement(By.xpath("//*[text()='Manage Users']")).click();
		System.out.println("Clicked on icon Manage Users");
		report.updateTestLog("Click Manage Users", "Clicked on icon Manage Users", Status.PASS); 			
		//S.sleep(5000);
		}
		catch (Exception e)
		
		{
			System.out.println("Manage user is not selected");
		}
		
	}
	
	public void ManageUsers_DetailsView() throws InterruptedException {
		WebDriverWait wait = new WebDriverWait(driver, 50);
		FunctionalLibrary S = new FunctionalLibrary(scriptHelper);
		JavascriptExecutor js = (JavascriptExecutor)driver;
		
		String TC_ID = dataTable.getData("General_Data", "TC_ID");
		String associateID = dataTable.getData("General_Data", "associateID");
		Thread.sleep(3000);
		String check1 = dataTable.getData("General_Data", "check1");
		Thread.sleep(3000);
		String check2 = dataTable.getData("General_Data", "check2");
		Thread.sleep(3000);
		String check3 = dataTable.getData("General_Data", "check3");
		Thread.sleep(3000);
		String check4 = dataTable.getData("General_Data", "check4");
		Thread.sleep(3000);
		String check5 = dataTable.getData("General_Data", "check5");
		Thread.sleep(3000);
		String check6 = dataTable.getData("General_Data", "check6");
		Thread.sleep(3000);
		/*String check7 = dataTable.getData("General_Data", "check7");
		Thread.sleep(3000);*/
		
		//To click on Manage Users
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='AdminTab4']")));
		driver.findElement(By.xpath("//*[@id='AdminTab4']"));
		S.sleep(2000);
		System.out.println("Clicked on tab Manager Users");
		report.updateTestLog("Click Manager Users", "Clicked on tab Manager Users", Status.SCREENSHOT); 
		
		//To display the content names	
		for(int i=1;i<=4;i++)
		{
			String x=driver.findElement(By.xpath("//*[@id='manageusrtbl']/thead/tr/th["+i+"]")).getText();
			System.out.println(x);
		}
		System.out.println("Admin able to view all the contents available in Manager users");
		report.updateTestLog("Manage users details", "Admin able to view all the contents available in Manager users", Status.SCREENSHOT); 
		
		report.addTestLogSubSection("To verify whether admin can able click on add user");
		
		//To click on Add User button
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("(//*[text()='Add User'])[1]")));
		driver.findElement(By.xpath("(//*[text()='Add User'])[1]")).click();
		System.out.println("Clicked on Add User button");
		report.updateTestLog("Click Add User", "Clicked on Add User button", Status.SCREENSHOT); 
		
		//To provide associate id details
		if(TC_ID.contains("ManagePayslip_ManageUsers_selfIDValidation"))
		{
			report.addTestLogSubSection("To verify whether error message is displayed when associate himself is tried for the admin right access.");
			
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserAssociateId']")));
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).clear();
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).sendKeys(associateID);
			S.sleep(3000);
			System.out.println("Provide self associate ID in Associate ID field.");
			report.updateTestLog("Provide self associate ID", "Provide self associate ID in Associate ID field.", Status.SCREENSHOT); 
			
			//To validate the error message
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']/div[2]/div[1]/div/div[1]/label[1]")));
			driver.findElement(By.xpath("//*[@id='addUserModalContainer']/div[2]/div[1]/div/div[1]/label[1]")).click();
			S.sleep(3000);
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[text()='Associate is not able to update his own access.']")));
			String errorMessage=driver.findElement(By.xpath("//*[text()='Associate is not able to update his own access.']")).getText();
			String actualMessage="Associate is not able to update his own access.";
			if (errorMessage.equals(actualMessage)) 
			{
				System.out.println("Error message displayed as :"+errorMessage);
				report.updateTestLog("Error message validation", "Error message displayed as :"+errorMessage, Status.SCREENSHOT); 
			}
			S.sleep(3000);
		}
		else
		{
			report.addTestLogSubSection("To Verify whether admin can able to provide associate id details");
			
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserAssociateId']")));
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).clear();
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).sendKeys(associateID);
			S.sleep(3000);
			System.out.println("Able to provide Associate id");
			report.updateTestLog("Associate ID", "Able to provide Associate id", Status.SCREENSHOT); 
				
			report.addTestLogSubSection("To verify whether admin can able to view the access right details and able to tick on checkbox for the access required");
			
			//To view the access right details
			/*wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']/div[3]/button[1]")));
			driver.findElement(By.xpath("//*[@id='addUserModalContainer']/div[3]/button[1]")).click();*/
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']/div[2]")));
			driver.findElement(By.xpath("//*[@id='addUserModalContainer']/div[2]")).click();
			S.sleep(7000);
			System.out.println("Able to view the access right details");
			report.updateTestLog("Access right details", "Able to view the access right details", Status.SCREENSHOT); 
			
			S.sleep(5000);
			
			//To tick on checkbox1 for the access required
			//S.framefinder("//*[text()='Access Right']/parent::div/following-sibling::div/div/input");
			S.framefinder("//*[text()='Access Right']/parent::div/following-sibling::div//input");
			try
			{
				S.sleep(2000);
				if(check1.contains("Upload Pay Slip"))
				{
					S.framefinder("//*[text()='Access Right']/parent::div/following-sibling::div//input[@id='addUserCheck1']");
					//WebElement radio1 = driver.findElement (By.id("addUserCheck1"));
					//WebDriverWait wait1 = new WebDriverWait(driver, 120);
					//wait1.until(ExpectedConditions.elementToBeClickable(radio1));
					//radio1.click();
					WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div//input[@id='addUserCheck1']"));
					//S.framefinder("//*[text()='Access Right']/parent::div/following-sibling::div//input[@id='addUserCheck1']");
					js.executeScript("arguments[0].click()", radio1);	
					//WebElement radio1 = driver.findElement (By.id("addUserCheck1"));
					//radio1.click();
					S.sleep(2000);
					System.out.println("Checked the Access Right :"+check1);
					report.updateTestLog("Checked "+check1, "Checked the Access Right :"+check1, Status.SCREENSHOT); 
					
					wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']//button[@ng-click='addUserSubmit()']")));
					driver.findElement(By.xpath("//*[@id='addUserModalContainer']//button[@ng-click='addUserSubmit()']")).click();
					S.sleep(3000);
					System.out.println("Clicked on Add User button");
					report.updateTestLog("Click Add User", "Clicked on Add User button", Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check1+" is not required");
					report.updateTestLog("Checked "+check1, "Access Right :"+check1+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to checked the Access Right :"+check1);
				report.updateTestLog("Checked "+check1, "Unable to checked the Access Right :"+check1, Status.FAIL); 
			}
			
			//To tick on checkbox2 for the access required
			//S.framefinder("//*[@id='addUserCheck2']");
			/*try
			{
				S.sleep(2000);
				if(check2.contains("Publish/Send Back Pay Slip"))
				{
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck2']"));
					WebElement radio1 = driver.findElement (By.id("addUserCheck2"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);	
					System.out.println("Checked the Access Right :"+check2);
					report.updateTestLog("Checked "+check2, "Checked the Access Right :"+check2, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check2+" is not required");
					report.updateTestLog("Checked "+check2, "Access Right :"+check2+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check2);
				report.updateTestLog("Checked "+check2, "Unable to check the Access Right :"+check2, Status.FAIL); 
			}		
					
			//To tick on checkbox3 for the access required
			try
			{
				S.sleep(2000);
				if(check3.contains("Reports"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck3"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck3']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);	
					System.out.println("Checked the Access Right :"+check3);
					report.updateTestLog("Checked "+check3, "Checked the Access Right :"+check3, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check3+" is not required");
					report.updateTestLog("Checked "+check3, "Access Right :"+check3+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check3);
				report.updateTestLog("Checked "+check3, "Unable to check the Access Right :"+check3, Status.FAIL); 
			}	
			
			//To tick on checkbox4 for the access required
			try
			{
				S.sleep(3000);
				if(check4.contains("View Pay Slip"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck5"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck5']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check4);
					report.updateTestLog("Checked "+check4, "Checked the Access Right :"+check4, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check4+" is not required");
					report.updateTestLog("Checked "+check4, "Access Right :"+check4+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check4);
				report.updateTestLog("Checked "+check4, "Unable to check the Access Right :"+check4, Status.FAIL); 
			}	
			
			//To tick on checkbox5 for the access required
			try
			{
				S.sleep(2000);
				if(check5.contains("Manage Components"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck6"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck5']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check5);
					report.updateTestLog("Checked "+check5, "Checked the Access Right :"+check5, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check5+" is not required");
					report.updateTestLog("Checked "+check5, "Access Right :"+check5+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check5);
				report.updateTestLog("Checked "+check5, "Unable to check the Access Right :"+check5, Status.FAIL); 
			}	
			
			//To tick on checkbox6 for the access required
			try
			{
				S.sleep(2000);
				if(check6.contains("Manage Users"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck4"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck6']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check6);
					report.updateTestLog("Checked "+check6, "Checked the Access Right :"+check6, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check6+" is not required");
					report.updateTestLog("Checked "+check6, "Access Right :"+check6+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check6);
				report.updateTestLog("Checked "+check6, "Unable to check the Access Right :"+check6, Status.FAIL); 
			}*/
			//To click on Add users
			
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']//button[@ng-click='addUserSubmit()']")));
			driver.findElement(By.xpath("//*[@id='addUserModalContainer']//button[@ng-click='addUserSubmit()']")).click();
			S.sleep(3000);
			System.out.println("Clicked on Add User button");
			report.updateTestLog("Click Add User", "Clicked on Add User button", Status.SCREENSHOT); 
			}
		}	
	
	
	public void ManageUsers_DetailsView_Aus() throws InterruptedException {
		WebDriverWait wait = new WebDriverWait(driver, 50);
		FunctionalLibrary S = new FunctionalLibrary(scriptHelper);
		JavascriptExecutor js = (JavascriptExecutor)driver;
		
		String TC_ID = dataTable.getData("General_Data", "TC_ID");
		String associateID = dataTable.getData("General_Data", "associateID");
		
		String check1 = dataTable.getData("General_Data", "check1");
		
		String check2 = dataTable.getData("General_Data", "check2");
		
		String check3 = dataTable.getData("General_Data", "check3");
		
		String check4 = dataTable.getData("General_Data", "check4");
		
		String check5 = dataTable.getData("General_Data", "check5");
		
		String check6 = dataTable.getData("General_Data", "check6");
		
		String check7 = dataTable.getData("General_Data", "check7");
		
		String check8 = dataTable.getData("General_Data", "check8");
		
		String check9 = dataTable.getData("General_Data", "check9");
		
		
		//To click on Manage Users
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='AdminTab4']")));
		driver.findElement(By.xpath("//*[@id='AdminTab4']")).click();
		S.sleep(2000);
		System.out.println("Clicked on tab Manager Users");
		report.updateTestLog("Click Manager Users", "Clicked on tab Manager Users", Status.SCREENSHOT); 
		
		//To display the content names	
		for(int i=1;i<=4;i++)
		{
			String x=driver.findElement(By.xpath("//*[@id='manageusrtbl']/thead/tr/th["+i+"]")).getText();
			System.out.println(x);
		}
		System.out.println("Admin able to view all the contents available in Manager users");
		report.updateTestLog("Manage users details", "Admin able to view all the contents available in Manager users", Status.SCREENSHOT); 
		
		report.addTestLogSubSection("To verify whether admin can able click on add user");
		
		//To click on Add User button
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("(//*[text()='Add User'])[1]")));
		driver.findElement(By.xpath("(//*[text()='Add User'])[1]")).click();
		System.out.println("Clicked on Add User button");
		report.updateTestLog("Click Add User", "Clicked on Add User button", Status.SCREENSHOT); 
		
		//To provide associate id details
		if(TC_ID.contains("ManagePayslip_ManageUsers_selfIDValidation"))
		{
			report.addTestLogSubSection("To verify whether error message is displayed when associate himself is tried for the admin right access.");
			
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserAssociateId']")));
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).clear();
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).sendKeys(associateID);
			S.sleep(3000);
			System.out.println("Provide self associate ID in Associate ID field.");
			report.updateTestLog("Provide self associate ID", "Provide self associate ID in Associate ID field.", Status.SCREENSHOT); 
			
			//To validate the error message
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']/div[2]/div[1]/div/div[1]/label[1]")));
			driver.findElement(By.xpath("//*[@id='addUserModalContainer']/div[2]/div[1]/div/div[1]/label[1]")).click();
			S.sleep(3000);
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[text()='Associate is not able to update his own access.']")));
			String errorMessage=driver.findElement(By.xpath("//*[text()='Associate is not able to update his own access.']")).getText();
			String actualMessage="Associate is not able to update his own access.";
			if (errorMessage.equals(actualMessage)) 
			{
				System.out.println("Error message displayed as :"+errorMessage);
				report.updateTestLog("Error message validation", "Error message displayed as :"+errorMessage, Status.SCREENSHOT); 
			}
			S.sleep(3000);
		}
		else
		{
			report.addTestLogSubSection("To Verify whether admin can able to provide associate id details");
			
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserAssociateId']")));
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).clear();
			driver.findElement(By.xpath("//*[@id='addUserAssociateId']")).sendKeys(associateID);
			S.sleep(3000);
			System.out.println("Able to provide Associate id");
			report.updateTestLog("Associate ID", "Able to provide Associate id", Status.SCREENSHOT); 
				
			report.addTestLogSubSection("To verify whether admin can able to view the access right details and able to tick on checkbox for the access required");
			
			//To view the access right details
			/*wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']/div[3]/button[1]")));
			driver.findElement(By.xpath("//*[@id='addUserModalContainer']/div[3]/button[1]")).click();*/
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']/div[2]")));
			driver.findElement(By.xpath("//*[@id='addUserModalContainer']/div[2]")).click();
			S.sleep(3000);
			System.out.println("Able to view the access right details");
			report.updateTestLog("Access right details", "Able to view the access right details", Status.SCREENSHOT); 
			
			S.sleep(3000);
			
			//To tick on checkbox1 for the access required
			//S.framefinder("//*[text()='Access Right']/parent::div/following-sibling::div/div/input");
			S.framefinder("//*[text()='Access Right']/parent::div/following-sibling::div']");
			try
			{
				S.sleep(2000);
				if(check1.contains("Upload Pay Slip"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck1"));
					//radio1.click();
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck1']"));
					//S.framefinder("//*[@id='addUserCheck1']");
					js.executeScript("arguments[0].click()", radio1);	
					//WebElement radio1 = driver.findElement (By.id("addUserCheck1"));
					//radio1.click();
					S.sleep(2000);
					System.out.println("Checked the Access Right :"+check1);
					report.updateTestLog("Checked "+check1, "Checked the Access Right :"+check1, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check1+" is not required");
					report.updateTestLog("Checked "+check1, "Access Right :"+check1+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to checked the Access Right :"+check1);
				report.updateTestLog("Checked "+check1, "Unable to checked the Access Right :"+check1, Status.FAIL); 
			}
			
			//To tick on checkbox2 for the access required
			//S.framefinder("//*[@id='addUserCheck2']");
			try
			{
				S.sleep(2000);
				if(check2.contains("Publish/Send Back Pay Slip"))
				{
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck2']"));
					WebElement radio1 = driver.findElement (By.id("addUserCheck2"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);	
					System.out.println("Checked the Access Right :"+check2);
					report.updateTestLog("Checked "+check2, "Checked the Access Right :"+check2, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check2+" is not required");
					report.updateTestLog("Checked "+check2, "Access Right :"+check2+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check2);
				report.updateTestLog("Checked "+check2, "Unable to check the Access Right :"+check2, Status.FAIL); 
			}		
					
			//To tick on checkbox3 for the access required
			try
			{
				S.sleep(2000);
				if(check3.contains("Reports"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck3"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck3']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);	
					System.out.println("Checked the Access Right :"+check3);
					report.updateTestLog("Checked "+check3, "Checked the Access Right :"+check3, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check3+" is not required");
					report.updateTestLog("Checked "+check3, "Access Right :"+check3+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check3);
				report.updateTestLog("Checked "+check3, "Unable to check the Access Right :"+check3, Status.FAIL); 
			}	
			
			//To tick on checkbox4 for the access required
			try
			{
				S.sleep(3000);
				if(check4.contains("View Pay Slip"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck5"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck5']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check4);
					report.updateTestLog("Checked "+check4, "Checked the Access Right :"+check4, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check4+" is not required");
					report.updateTestLog("Checked "+check4, "Access Right :"+check4+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check4);
				report.updateTestLog("Checked "+check4, "Unable to check the Access Right :"+check4, Status.FAIL); 
			}	
			
			//To tick on checkbox5 for the access required
			try
			{
				S.sleep(2000);
				if(check5.contains("Manage Components"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck6"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck5']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check5);
					report.updateTestLog("Checked "+check5, "Checked the Access Right :"+check5, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check5+" is not required");
					report.updateTestLog("Checked "+check5, "Access Right :"+check5+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check5);
				report.updateTestLog("Checked "+check5, "Unable to check the Access Right :"+check5, Status.FAIL); 
			}	
			
			//To tick on checkbox6 for the access required
			try
			{
				S.sleep(2000);
				if(check6.contains("Manage Users"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck4"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck6']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check6);
					report.updateTestLog("Checked "+check6, "Checked the Access Right :"+check6, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check6+" is not required");
					report.updateTestLog("Checked "+check6, "Access Right :"+check6+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check6);
				report.updateTestLog("Checked "+check6, "Unable to check the Access Right :"+check6, Status.FAIL); 
			}
			
			//To tick on checkbox7 for the access required
			try
			{
				S.sleep(2000);
				if(check7.contains("Contribution Upload"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck7"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck6']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check7);
					report.updateTestLog("Checked "+check7, "Checked the Access Right :"+check7, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check7+" is not required");
					report.updateTestLog("Checked "+check7, "Access Right :"+check7+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check7);
				report.updateTestLog("Checked "+check7, "Unable to check the Access Right :"+check7, Status.FAIL); 
			}
			
			//To tick on checkbox8 for the access required
			try
			{
				S.sleep(2000);
				if(check8.contains("Contribution Report"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck8"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck6']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(2000);		
					System.out.println("Checked the Access Right :"+check8);
					report.updateTestLog("Checked "+check8, "Checked the Access Right :"+check8, Status.SCREENSHOT); 
				}
				else
				{
					System.out.println("Access Right :"+check8+" is not required");
					report.updateTestLog("Checked "+check8, "Access Right :"+check8+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check8);
				report.updateTestLog("Checked "+check8, "Unable to check the Access Right :"+check8, Status.FAIL); 
			}
			//To tick on checkbox9 for the access required
			try
			{
				S.sleep(2000);
				if(check9.contains("Manage Fund Houses"))
				{
					WebElement radio1 = driver.findElement (By.id("addUserCheck9"));
					//WebElement radio1 = driver.findElement(By.xpath("//*[text()='Access Right']/parent::div/following-sibling::div/div/input[@id='addUserCheck6']"));
					js.executeScript("arguments[0].click()", radio1);	
					S.sleep(3000);		
					System.out.println("Checked the Access Right :"+check9);
					report.updateTestLog("Checked "+check9, "Checked the Access Right :"+check9, Status.SCREENSHOT);
					Thread.sleep(4000);
				}
				else
				{
					System.out.println("Access Right :"+check9+" is not required");
					report.updateTestLog("Checked "+check9, "Access Right :"+check9+" is not required", Status.SCREENSHOT); 
				}
			}
			catch(Exception e)
			{
				System.out.println("Unable to check the Access Right :"+check9);
				report.updateTestLog("Checked "+check9, "Unable to check the Access Right :"+check9, Status.FAIL); 
			}
			//To click on Add users
			
			//document.getElementById("Button").disabled = false;
			WebElement adduser = driver.findElement(By.xpath("//*[@id='addUserModalContainer']//button[@ng-click='addUserSubmit()']"));
			//driver.getElementById("adduser").disabled = false;
			//adduser.disabled=false;
		
			//wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='addUserModalContainer']//button[@ng-click='addUserSubmit()']")));
			JavascriptExecutor javascript = (JavascriptExecutor) driver;
            String toenable = "document.getElementsByClassName('btn btn-success addUserModalsubmit modalButtons')[0].removeAttribute('disabled');";
            javascript.executeScript(toenable);
             
            //Thread.sleep(4000);
			/*JavascriptExecutor js1=(JavascriptExecutor)driver;
			js1.executeScript("arguments[0].click();", adduser);*/
			//System.out.println("Clicked on Add User button");
			//report.updateTestLog("Click Add User", "Clicked on Add User button", Status.SCREENSHOT); 
			Thread.sleep(4000);
			adduser.click();
			System.out.println("Add user button is clicked");
			}
		}	
	public void List_Selection(String Field_data, String list_xpath,String field_name) throws Exception 
	{
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(list_xpath)));
			List<WebElement> list = driver.findElements(By.xpath(list_xpath));
			Thread.sleep(3000);
				for(WebElement Find_list:list)
				{
					
					if(Find_list.getText().trim().contains(Field_data.trim()))
					{
						HighlightElement_green(Find_list);
						JavascriptExecutor js=(JavascriptExecutor)driver;
						js.executeScript("arguments[0].click();", Find_list);
						//Find_list.click();
						System.out.println(field_name+" selected successfully");
						break;
					}					
				}
	}
	public void HighlightElement_green( WebElement element) throws Exception {
		JavascriptExecutor js = (JavascriptExecutor) driver;

		try {
			js.executeScript("arguments[0].setAttribute('style', 'background: green; border: 2px solid red;');",element);
//			js.executeScript("arguments[0].scrollIntoView(true);", element);
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		js.executeScript("arguments[0].setAttribute('style', 'background: ; border: ;');",element);
		
	}

	
	public void PublishSendBack_Page() throws InterruptedException, IOException {
		WebDriverWait wait = new WebDriverWait(driver, 50);
		FunctionalLibrary S = new FunctionalLibrary(scriptHelper);
		Common_page_Aus C = new Common_page_Aus(scriptHelper);
		Upload_payslip_under_Manage_payslip_page_Aus U = new Upload_payslip_under_Manage_payslip_page_Aus(scriptHelper);
		String Action = dataTable.getData("General_Data", "Action");
		String sheetName = dataTable.getData("General_Data", "sheetName");
					
		//To click on Publish/ Send Back
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[text()='Publish/ Send Back']")));
		driver.findElement(By.xpath("//*[text()='Publish/ Send Back']")).click();
		S.sleep(2000);
		System.out.println("Clicked on Publish/ Send Back tab");
		report.updateTestLog("Click Publish/ Send Back", "Clicked on Publish/ Send Back tab", Status.SCREENSHOT); 
		
		//To validate Admin able to view all the contents
		for(int i=1;i<=7;i++)
		{
			String x=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th["+i+"]")).getText();
			System.out.println(x);
		}
		System.out.println("Admin able to view all the contents available in Publish/ Send Back");
		report.updateTestLog("Manage users details", "Admin able to view all the contents available in Publish/ Send Back", Status.SCREENSHOT); 
				
		report.addTestLogSubSection("verify whether approver can able to download the file");
		
		//To download the file
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("(//*[@title='Download File'])[2]")));
		driver.findElement(By.xpath("(//*[@title='Download File'])[2]")).click();
		S.sleep(2000);
		System.out.println("Downloaded the file by clicking EYE option");
		report.updateTestLog("Download the file", "Downloaded the file by clicking EYE option", Status.SCREENSHOT); 
		
		/*//To verify the associate details in spreadsheet
		U.readXLSFile();
	   // C.excel_read_project(1,0,sheetName);
	    System.out.println("Approver can able to see the associate details in spreadsheet");
		report.updateTestLog("Spreadsheet details validation", "Approver can able to see the associate details in spreadsheet", Status.PASS); */
	    
		report.addTestLogSubSection("To verify whether approver can able to "+Action);
			
		//To click on PUBLISH/SEND BACK
		U.publish_payslip(Action);
		
	}
	
	public void Reports_Page() throws InterruptedException {
		Upload_payslip_under_Manage_payslip_page_Aus UPS=new Upload_payslip_under_Manage_payslip_page_Aus(scriptHelper);
		WebDriverWait wait = new WebDriverWait(driver, 50);
		FunctionalLibrary S = new FunctionalLibrary(scriptHelper);
		JavascriptExecutor js = (JavascriptExecutor)driver;
		String financialYear = dataTable.getData("General_Data", "financialYear");
		String companyValue = dataTable.getData("General_Data", "companyValue");
		String status1 = dataTable.getData("General_Data", "status1");
		String status2 = dataTable.getData("General_Data", "status2");
		String status3 = dataTable.getData("General_Data", "status3");
		
		report.addTestLogSubSection("To verify whether admin can able to view the reports");
		
		//To click on Report tab
		try
		{
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='AdminTab3']/a")));
			driver.findElement(By.xpath("//*[@id='AdminTab3']/a")).click();
			S.sleep(2000);
			System.out.println("Clicked on Reports tab");
			report.updateTestLog("Click Reports tab", "Clicked on Reports tab", Status.SCREENSHOT); 	
		}
		catch(Exception e)
		{
			System.out.println("Unable to click on Reports tab");
			report.updateTestLog("Click Reports tab", "Unable to click on Reports tab", Status.FAIL); 	
		}
		
		//To validate Admin able to view all the contents
		try
		{
			String x1=driver.findElement(By.xpath("//*[text()='Financial year']")).getText();
			String x2=driver.findElement(By.xpath("//*[text()='Company']")).getText();

			System.out.println("Admin able to view all the contents available in Report tab "+x1 +x2);
			report.updateTestLog("Report tab details", "Admin able to view all the contents available in Report tab", Status.SCREENSHOT); 
		}
		catch(Exception e)
		{
			System.out.println("Unable to View the contants in Reports tab");
			report.updateTestLog("View Reports tab", "Unable to View the contants in Reports tab", Status.FAIL); 	
		}
		
		report.addTestLogSubSection("To verify whether the admin can able to view all the status [ Uploaded, Published, sent Back] for the financial year");
		
		//To select the Financial year
		Select year = new Select(driver.findElement(By.xpath("//*[@id='financialyrselreports']")));
		year.selectByValue(financialYear);
		System.out.println("Selected Financial year as :"+financialYear);
		report.updateTestLog("Select FinancialYear", "Selected Financial year as :"+financialYear, Status.SCREENSHOT); 
		
		//To select the Company
		Select Company = new Select(driver.findElement(By.xpath("//*[@id='companyselreports']")));
		Company.selectByValue(companyValue);
		System.out.println("Selected Company as :"+companyValue);
		report.updateTestLog("Select Company", "Selected Company as :"+companyValue, Status.SCREENSHOT); 		
			
		//To select the status
		//To check the status as Uploaded
		try
		{
			if(status1.contains("Uploaded"))
			{
				WebElement radio1 = driver.findElement(By.xpath("//*[text()='Status']/parent::div/div/label/span[text()='Uploaded']"));
				js.executeScript("arguments[0].click()", radio1);	
				S.sleep(2000);		
				System.out.println("Checked the status :"+status1);
				report.updateTestLog("Check "+status1, "Checked the status :"+status1, Status.SCREENSHOT); 
			}
			else
			{
				System.out.println("Status :"+status1+" is not required");
				report.updateTestLog("Check "+status1, "Status :"+status1+" is not required", Status.SCREENSHOT); 
			}
		}
		catch(Exception e)
		{
			System.out.println("Unable to check the status :"+status1);
			report.updateTestLog("Check "+status1, "Unable to check the status :"+status1, Status.FAIL); 
		}
		
		//To check the status as Published
		try
		{
			if(status2.contains("Published"))
			{
				WebElement radio1 = driver.findElement(By.xpath("//*[text()='Status']/parent::div/div/label/span[text()='Published']"));
				js.executeScript("arguments[0].click()", radio1);	
				S.sleep(2000);		
				System.out.println("Checked the status :"+status2);
				report.updateTestLog("Check "+status2, "Checked the status :"+status2, Status.SCREENSHOT); 
			}
			else
			{
				System.out.println("Status :"+status2+" is not required");
				report.updateTestLog("Check "+status2, "Status :"+status2+" is not required", Status.SCREENSHOT); 
			}
		}
		catch(Exception e)
		{
			System.out.println("Unable to check the status :"+status2);
			report.updateTestLog("Check "+status2, "Unable to check the status :"+status2, Status.FAIL); 
		}	
		
		//To check the status as Sentback
		try
		{
			if(status3.contains("Sentback"))
			{
				WebElement radio1 = driver.findElement(By.xpath("//*[text()='Status']/parent::div/div/label/span[text()='Sentback']"));
				js.executeScript("arguments[0].click()", radio1);	
				S.sleep(2000);		
				System.out.println("Checked the status :"+status3);
				report.updateTestLog("Check "+status3, "Checked the status :"+status3, Status.SCREENSHOT); 
			}
			else
			{
				System.out.println("Status :"+status3+" is not required");
				report.updateTestLog("Check "+status3, "Status :"+status3+" is not required", Status.SCREENSHOT); 
			}
		}
		catch(Exception e)
		{
			System.out.println("Unable to check the status :"+status3);
			report.updateTestLog("Check "+status3, "Unable to check the status :"+status3, Status.FAIL); 
		}
		
		//To click on View button
		try
		{
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='reportViewbtn']")));
			driver.findElement(By.xpath("//*[@id='reportViewbtn']")).click();
			S.sleep(2000);
			System.out.println("Clicked on View button");
			report.updateTestLog("Click View button", "Clicked on View button", Status.SCREENSHOT); 
		}
		catch(Exception e)
		{
			System.out.println("Unable to click on View button");
			report.updateTestLog("Click View button", "Unable to click on View button", Status.SCREENSHOT); 
		}
		
		report.addTestLogSubSection("To verify whether admin can able to download the file");
		
		try
		{
			//To download the file
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@id='reports']/div/div[2]/div/div[5]")));
			driver.findElement(By.xpath("//*[@id='reports']/div/div[2]/div/div[5]")).click();
			S.sleep(4000);
			System.out.println("Admin able to download the file");
			report.updateTestLog("Download file", "Admin able to download the file", Status.SCREENSHOT); 	
		}
		catch(Exception e)
		{
			System.out.println("Unable to Download the file");
			report.updateTestLog("Download the file", "Unable to Download the file", Status.SCREENSHOT); 
		}
		
		report.addTestLogSubSection("To verify whether admin can able to email the reports");
		try
		{
			//To email the reports
			wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath("//*[@style='opacity: 1; cursor: pointer;']")));
			driver.findElement(By.xpath("//*[@style='opacity: 1; cursor: pointer;']")).click();
			//S.sleep(2000);
			/***** Handling alert *****/
			UPS.checking_alert();
			System.out.println("Admin able to email the reports");
			report.updateTestLog("email the reports", "Admin able to email the reports", Status.SCREENSHOT); 		
		}
		catch(Exception e)
		{
			System.out.println("Unable to Email the reports");
			report.updateTestLog("Email the reports", "Unable to Email the reports", Status.FAIL); 
		}
		
	}
	
	public  String excel_read_project_xls(int RowNum1, int ColNum1,String sheetname) throws IOException {
		 		 
        String filePath="C:\\Users\\694612\\workspace\\ApacEpay\\Datatables\\SalaryRegister.xls";
        		       
        FileInputStream file = new FileInputStream(filePath);
        System.out.println(filePath);

        HSSFWorkbook ExcelWBook = new HSSFWorkbook(file);
        System.out.println("workbook is opened");

        HSSFSheet ExcelWSheet = ExcelWBook.getSheet(sheetname);
        System.out.println("Sheet is opened");

        System.out.println(ExcelWSheet.getSheetName());

        HSSFCell cell=ExcelWSheet.getRow(RowNum1).getCell(ColNum1);
        cell.setCellType(cell.CELL_TYPE_STRING);
        String value=cell.getStringCellValue();
        System.out.println(value);
        return value;
  }
	
	public  String excel_read_project_xlsx(int RowNum1, int ColNum1,String sheetname) throws IOException {
		 
        String filePath="C:\\Users\\694612\\Downloads\\Australia_Salary Register_Template_no_mandotory_info.xlsx";
        	
        FileInputStream file = new FileInputStream(filePath);
        System.out.println(filePath);

        XSSFWorkbook ExcelWBook = new XSSFWorkbook(file);
        System.out.println("workbook is opened");

        XSSFSheet ExcelWSheet = ExcelWBook.getSheet(sheetname);
        System.out.println("Sheet is opened");

        System.out.println(ExcelWSheet.getSheetName());

       XSSFCell cell=ExcelWSheet.getRow(RowNum1).getCell(ColNum1);
        cell.setCellType(cell.CELL_TYPE_STRING);
        String value=cell.getStringCellValue();
        System.out.println(value);
        return value;
  }  
	
	public  void excel_read_project_xlsx_inLoop() throws IOException {
				
			String filePath="C:\\Users\\694612\\workspace\\ApacEpay\\Datatables\\Australia_Salary Register_Template.xlsx";
		       
	        FileInputStream file = new FileInputStream(filePath);
	        //System.out.println(filePath);

	        XSSFWorkbook ExcelWBook = new XSSFWorkbook(file);
	        //System.out.println("workbook is opened");

	        XSSFSheet ExcelWSheet = ExcelWBook.getSheet("Template");
	        //System.out.println("Sheet is opened");

	        //System.out.println(ExcelWSheet.getSheetName());

	      //Find number of rows in excel file
	        int rowCount = ExcelWSheet.getLastRowNum()-ExcelWSheet.getFirstRowNum();
	        System.out.println(rowCount);
	        //Create a loop over all the rows of excel file to read it
	        for (int i = 0; i < rowCount+1 ;i++) {
	            Row row = ExcelWSheet.getRow(i);
	            //Create a loop to print cell values in a row
	            for (int j = 0; j < row.getLastCellNum(); j++) {
	                //Print Excel data in console
	                System.out.print(row.getCell(j).getStringCellValue()+"|| ");
	 	            }
		  	      }
		}
		
	
	}


	

package pages;

import java.util.List;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import supportlibraries.ScriptHelper;

public class Publish_SendBack_under_MPS_page_Aus extends MasterPage_Aus{
	
	public Publish_SendBack_under_MPS_page_Aus(ScriptHelper scriptHelper) {
		super(scriptHelper);
		// TODO Auto-generated constructor stub
	}

	@FindBy(xpath="//a[text()='Publish/ Send Back']")
	public WebElement publish_tab;
	
	@FindBy(xpath="//li[contains(text(),'PUBLISH')]")
	public WebElement publish_button;
	
	@FindBy(xpath="//div[contains(@class,'moreicon')]")
	public WebElement more_option_button;
	
	public void publish_payslip_tab_selection() 
	{
		try {
			clickOnButton(publish_tab);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void publish_payslip()
	{
	
		try
		{
		
		WebDriverWait wait = new WebDriverWait(driver,30);
		wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
	   List<WebElement> rows=driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td"));
	   for(int i=1;i<=rows.size();i++)
	   {
	     WebElement country = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td[1]"));
	     WebElement period = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td[2]"));
	     WebElement upload_type = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td[4]"));
	     
	     String countryname = dataTable.getData("General_Data", "country");
	     if(country.getText().trim().contains(countryname.trim()))
	     {
	    	 HighlightElement_green(country);
	    	 String date = dataTable.getData("General_Data", "period");
	    	 if(period.getText().trim().contains(date.trim()))
	    	 {
	    		 HighlightElement_green(period);
	    		 String type = dataTable.getData("General_Data", "upload_type");
		    	 if(upload_type.getText().trim().contains(type.trim()))
		    	 {
		    		 HighlightElement_green(upload_type);
		    		 more_option_button.click();
		    		 publish_button.click();
		    	 }
	    		 
	    	 }
	    	 
	     }
	   }
		}
		catch(Exception e)
		{
			
		}
	}
	
	public void checking_alert()
	{
		try {
			Thread.sleep(3000);
			Alert alert =driver.switchTo().alert();
			alert.getText();
			alert.accept();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	
}


package pages;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.util.List;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.cognizant.framework.Status;

import supportlibraries.ScriptHelper;



import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;

import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.hssf.usermodel.*;



public class Upload_payslip_under_Manage_payslip_page_Aus extends MasterPage_Aus{
	


	@FindBy(xpath="//label[contains(text(),'Company')]")
	public WebElement Company_field_label; 
	
	@FindBy(id="companyselpayslip")
	public WebElement Company_dropdown_field;
	
	@FindBy(xpath="//label[contains(text(),'Year and Month')]")
	public WebElement Year_and_Month_field_label; 
	
	@FindBy(className="calendaricon")
	public WebElement calendaricon;
	
	@FindBy(xpath="//label[contains(text(),'Upload Type')]")
	public WebElement Upload_Type_field_label; 
	
	@FindBy(id="uploadtypeselpayslip")
	public WebElement upload_type_dropdown_field;
	
	@FindBy(xpath="//label[contains(text(),'File Type')]")
	public WebElement File_Type_field_label;
	
	@FindBy(id="filetypeselpayslip")
	public WebElement File_type_dropdown_field;
	
	@FindBy(xpath="//label[contains(text(),'Upload Payslip')]")
	public WebElement Upload_Payslip_field_label;
	
	@FindBy(className="browseButtonupload")
	public WebElement browse_Button;
	
	@FindBy(id="uploadbtn")
	public WebElement upload_button;
	
	@FindBy(id="updatebtn")
	public WebElement update_button;
	
	@FindBy(id="noDataPopup")
	public WebElement errorpopup;
	
	@FindBy(xpath="//button[contains(@id,'uploadmessage')]")
	public WebElement Error_ok_button;
	
	@FindBy(id="uploadmessage")
	public WebElement Success_Ok_button;
	
	@FindBy(id="RequestPublish")
	public WebElement RequestPublish_button;
	
	@FindBy(id="countrySelect")
	public WebElement Selected_country;
	
	@FindBy(xpath="//*[@id='uploadmessage']")
	public WebElement OKAYbutton;
	
	String filename="";
	String upload_or_update="";
	String selected_File_type="";
	String selected_date="";

	
	
	public Upload_payslip_under_Manage_payslip_page_Aus(ScriptHelper scriptHelper) {
		super(scriptHelper);
		    
		// TODO Auto-generated constructor stub
	}

	public void Verify_fields_displayed_in_upload_payslip() 
	{
		
		report.addTestLogSubSection("Field Validation in Upload payslip");
		try 
		{
			int i=1;
			int j=0;
			WebElement[] upload_payslip_fields={Company_field_label,Company_dropdown_field,
					Year_and_Month_field_label,
					calendaricon,
					Upload_Type_field_label,
					upload_type_dropdown_field,
					File_Type_field_label,
					File_type_dropdown_field,
					Upload_Payslip_field_label,
					browse_Button,
					};
			//report.updateTestLog("upload payslip fields verification", "Upload payslip fields are :"+upload_payslip_fields, Status.PASS);
			
			
			for(WebElement fields :upload_payslip_fields)
			{
				HighlightElement_green(fields);
				if(fields.isDisplayed()==false)
				{
					System.out.println("Folowing fields are not displayed:"+fields);
					j++;
				}
				else if(upload_payslip_fields.length==i)
				{
					System.out.println("All fields Displayed as Expected");
					report.updateTestLog("Upload payslip fields verification", "Upload payslip fields verification successfully " , Status.PASS);
				}
				if(upload_payslip_fields.length==i && j>0)
				{
					report.updateTestLog("Upload payslip fields verification", "Upload payslip fields are NOT Displayed successfully " , Status.FAIL);
				}
				i++;
			}
			
			
		} 
		catch (Exception e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
	}
	
	public void select_upload_type_and_file_type() 
	{
		
		report.addTestLogSubSection("select_upload_type_and_file_type validation");
	try 
	{

		if(Selected_country.getText().trim().contains("Philippines"))
		{
			String file_name= dataTable.getData("General_Data", "upload_type_Philippines");
			selectValueFromDropDown(upload_type_dropdown_field, file_name);
			report.updateTestLog("Selected Upload Type", "Upload Type is - " +file_name, Status.PASS);
		
			//Getting Selected Value
			Select select = new Select(upload_type_dropdown_field);
			selected_upload_type =select.getFirstSelectedOption().getText();
			System.out.println("Selecting upload type is :"+selected_upload_type); 
		}
		else
		{
			String file_name= dataTable.getData("General_Data", "Upload_type");
			selectValueFromDropDown(upload_type_dropdown_field, file_name);
			report.updateTestLog("Selecting Upload Type", "Upload Type is - " +file_name, Status.PASS);
			//Getting Selected Value
			Select select = new Select(upload_type_dropdown_field);
			selected_upload_type =select.getFirstSelectedOption().getText();
			System.out.println("Selecting upload type is :"+selected_upload_type);
		}
		String file_name= dataTable.getData("General_Data", "File_Type");
		selectValueFromDropDown(File_type_dropdown_field, file_name);
		report.updateTestLog("Selecting File Type", "File Type is - " +file_name, Status.PASS);
		//Getting Selected Value
		Select select = new Select(File_type_dropdown_field);
		selected_File_type =select.getFirstSelectedOption().getText();
		System.out.println("Selected File type is :"+selected_File_type);
		} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		report.updateTestLog("Upload and File Type", "Selecting Upload and File Type is having problem", Status.FAIL);
		}
	}

	
	public void upload_incorrect_file()
	{
		report.addTestLogSubSection("upload_incorrect_file validation");
		try 
		{
			
			String[] filetypes={"word","MPEG","PDF","PNG","JPG"};
			for(String file_list:filetypes)
			{
				String filename=file_list;
				clickOnButton(browse_Button);
				Thread.sleep(8000);
				
				String file_name= dataTable.getData("General_Data", filename);
				StringSelection filepath = new StringSelection(System.getProperty("user.dir")+ "\\Payslip_files\\"+file_name); 
				
			    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			    Robot robot = new Robot();
			    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
			    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			    robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
			    robot.keyPress(java.awt.event.KeyEvent.VK_V);
			    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
			    Thread.sleep(5000);
			    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
			    Thread.sleep(5000);
			    
			    if(upload_button.isDisplayed())
			    {
			    	clickOnButton(upload_button);
			    }
			    else if(update_button.isDisplayed()) 
			    {
			    	clickOnButton(update_button);
			    }
			    Verify_error_message(filename);
			   //OKAYbutton.click();
			    
			}
			
		}
		catch (Exception e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Uploading incorrect file format", "Uploading incorrect file format is havig problem" , Status.FAIL);
		}
	}
	
	public void Verify_error_message(String filename)
	{
		try
		{
			
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.visibilityOf(errorpopup));
			if(errorpopup.isDisplayed())
			{
				System.out.println("Error Text is :"+errorpopup.getText());
				
			}
			clickOnButton(Error_ok_button);
			Thread.sleep(8000);
			report.updateTestLog("Uploading incorrect file format :" +filename, "Uploading incorrect file format verified successfully" , Status.PASS);
		}
		catch(Exception ExpectedConditions)
		{
			report.updateTestLog("Uploading incorrect file format :"+filename, "Uploading incorrect file format is havig problem" , Status.FAIL);
		}
	}
	
	public void Verify_success_message(String message_column_name)
	{
		try
		{
			
//			WebDriverWait wait = new WebDriverWait(driver,10);
//			wait.until(ExpectedConditions.visibilityOf(errorpopup));
			Thread.sleep(3000);
			if(errorpopup.isDisplayed())
			{
				System.out.println("Popup Message is :"+errorpopup.getText());
				String success_message= dataTable.getData("General_Data", message_column_name);
				//System.out.println("success_message is :"+success_message);
				if(errorpopup.getText().contains(success_message))
				{
					clickOnButton(Success_Ok_button);
					System.out.println("Test case passes");
					report.updateTestLog("Uploading correct file format", "Uploading correct file format verified successfully" , Status.PASS);
				}
				else
				{
					System.out.println("Test case Failed");
					report.updateTestLog("Uploading correct file format ", "Uploading correct file format is havig problem" , Status.FAIL);
				}
			}
			else
			{
				System.out.println("Success message popup is not displayed");
			}
			
			
			Thread.sleep(2000);
			report.updateTestLog("Success message Verification", "Success message Verification completed Successfully" , Status.PASS);
		}
		catch(Exception ExpectedConditions)
		{
			ExpectedConditions.printStackTrace();
			report.updateTestLog("Success message Verification", "Success message Verification having some problem" , Status.PASS);
		}
	}
	public void upload_correct_file()
	{
		try 
		{
				clickOnButton(browse_Button);
				Thread.sleep(2000);
				
				String country_name=dataTable.getData("General_Data", "Country");
				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
				StringSelection filepath = new StringSelection(file_path);
			    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			    Robot robot = new Robot();
			    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
			    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			    robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
			    robot.keyPress(java.awt.event.KeyEvent.VK_V);
			    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
			    Thread.sleep(2000);
			    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
			    Thread.sleep(2000);
			    
			    if(upload_button.isDisplayed())
			    {
			    	upload_or_update="Upload";
			    	clickOnButton(upload_button);
			    }
			    else if(update_button.isDisplayed())
			    {
			    	upload_or_update="Update";
			    	clickOnButton(update_button);
			    }
			    else
			    {
			    	System.out.println("Already a template is pending for Request Publish, Please proceed accordingly");
			    	Assert.fail();
			    }
	    
		}
		catch (Exception e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Uploading correct file format", "Uploading correct file format is havig problem" , Status.FAIL);
		}
	}

	
	
	public void RequestPublish_button()
	{
		if(RequestPublish_button.isDisplayed()==true)
	    {
	    	try {
				clickOnButton(RequestPublish_button);
				//driver.navigate().refresh();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    	
	    }
	}
	
	
	public void check_company_dropdown_values()
	{
		if(driver.findElement(By.id("countrySelect")).getText().trim().contains("Philippines"))
		{
			//Do nothing
		}
		else
		{
			System.out.println("Selected country is not Philippines, Please select accoredingly.");
		}
		int i=0;
		String ddvalue1= dataTable.getData("General_Data", "dropdownvalue1");
		String ddvalue2= dataTable.getData("General_Data", "dropdownvalue2");
		String company_DD_values[]={ddvalue1,ddvalue2};
		WebDriverWait wait = new WebDriverWait(driver, 15);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("companyselpayslip")));
		Select options = new Select(Company_dropdown_field);
		List<WebElement> allOptions = options.getOptions();
		for (WebElement option : allOptions) 
		{
			
		    if(option.getText().contains(company_DD_values[i])) 
		    {
		    	System.out.println("Company dropdown data is :"+option.getText());
		        i++;
		    }
		    else
		    {
		    	report.updateTestLog("Company dropdown philipine", "Company Dropdown values are NOT displayed as expected", Status.FAIL);
		    	Assert.fail();
		    }
		}
		report.updateTestLog("Company dropdown philipine", "Company Dropdown values are displayed as expected", Status.PASS);
		
	}
	
	String inputExcelPath = "C:\\Users\\786556\\new\\new\\Payslip_files\\Abu Dhabi_Salary Register_Template (2).xlsx";
	static String data="C:\\Users\\786556\\new\\new\\Datatables\\uploadpayslip.xls";
	public File file = null;
	public FileInputStream fis = null;
	public HSSFWorkbook workbook = null;
	public HSSFSheet sheet = null;
	public HSSFRow row = null;
	public HSSFCell cell = null;
	
	

	
	public FileOutputStream fos = null;
	public XSSFCell newCell = null;
	public OPCPackage opcPackage = null;

	public String getCellData(String sheetName, int rowNum, String colName) {
		try {
			System.out.println("1");
			fis = new FileInputStream(data);
			System.out.println("2");
			workbook = new HSSFWorkbook(fis);
			System.out.println("3");
			sheet = workbook.getSheet(sheetName);
			System.out.println("4");
			int col_Num = 0;
			row = sheet.getRow(0);
			for (int i = 0; i < row.getLastCellNum(); i++) {
				if (row.getCell(i).getStringCellValue().trim().equals(colName.trim()))
				{
					System.out.println("Colmn exist");
					col_Num = i;
					break;
				}
				else
				{
					System.out.println("Colmn doesn't exist");
				}
			}

			cell = sheet.getRow(rowNum).getCell(col_Num);
			//cell = row.getCell(col_Num);

			if (cell.getCellType() == Cell.CELL_TYPE_STRING) {
				System.out.println(cell.getStringCellValue());
				return cell.getStringCellValue();
			} else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC || cell.getCellType() == Cell.CELL_TYPE_FORMULA) {

				String cellValue = String.valueOf(cell.getNumericCellValue());
				if (HSSFDateUtil.isCellDateFormatted(cell)) {

					DateFormat df = new SimpleDateFormat("dd/MM/yy");
					Date date = cell.getDateCellValue();
					cellValue = df.format(date);
				}
				return cellValue;
			} else if (cell.getCellType() == Cell.CELL_TYPE_BLANK) {

				return "";
			} else {
				return String.valueOf(cell.getBooleanCellValue());
			}
		} catch (Exception e) {
			e.printStackTrace();
			return "row " + rowNum + " or column " + colName + " does not exist  in Excel";
		}
	}
	
	public void readXLSFile() throws IOException
	{
		InputStream ExcelFileToRead = new FileInputStream(data);
		HSSFWorkbook wb = new HSSFWorkbook(ExcelFileToRead);

		HSSFSheet sheet=wb.getSheetAt(0);
		HSSFRow row; 
		HSSFCell cell;

		Iterator rows = sheet.rowIterator();

		while (rows.hasNext())
		{
			row=(HSSFRow) rows.next();
			Iterator cells = row.cellIterator();
			
			while (cells.hasNext())
			{
				cell=(HSSFCell) cells.next();
		
				if (cell.getCellType() == HSSFCell.CELL_TYPE_STRING)
				{
					if(cell.getStringCellValue().contains("Iteration"))
					{
						cell = sheet.getRow(1).getCell(2);
						System.out.print(cell.getStringCellValue()+"va ");
						break;
					}
					
				}
				else if(cell.getCellType() == HSSFCell.CELL_TYPE_NUMERIC)
				{
					System.out.print(cell.getNumericCellValue()+" ");
				}
				else
				{
					//U Can Handel Boolean, Formula, Errors
				}
			}
			System.out.println();
		}
	
	}

	
	
	public void readdata() throws Exception
	{
		try
		{	
			System.out.println("check1");
			fis = new FileInputStream(data);
			System.out.println("check2");
			workbook = new HSSFWorkbook(fis);
			
			sheet = workbook.getSheet("Salary+Register");

            int noOfColumns = sheet.getRow(0).getLastCellNum();
            System.out.println("value is "+noOfColumns);
            String[] Headers = new String[noOfColumns];
            for (int j=0;j<noOfColumns;j++){
                Headers[j] = sheet.getRow(0).getCell(j).getStringCellValue();
            }
                for (int a=0;a<noOfColumns;a++){
                    if(Headers[a].contains("ErrorDesc")){
                        System.out.println("success");
                        break;
                        }
                    else
                    {
                    	 System.out.println("fail");
                    }
}
//      workbook.close();
//      file.close();
	}
		catch(Exception e)
		{
			
		}
	}
	
	
	public void publish_payslip(String Action)
	{
		try
	     {	
			//Getting current time
//			 LocalTime time = LocalTime.now();
//
//			 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("h:mm a");
//			 String Current_T=time.format(formatter);
//			 Current_time = Double.valueOf(Current_T);
			
			 //click on publish/send back tab
			 Thread.sleep(3000);
	   		 driver.findElement(By.xpath("//a[text()='Publish/ Send Back']")).click();
	   		 System.out.println("Publish/Send back tab is clicked");
	   		 report.updateTestLog("click on publish/send back tab", "publish/send back tab is clicked", Status.DONE);
	   		Thread.sleep(3000);
	    	 WebDriverWait wait = new WebDriverWait(driver,60);
	    	 wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
	    	 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr"));
	    	 for(int i=1;i<=rows.size();i++)
	    	 {
	    		WebElement country = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[1]"));
	    		WebElement period = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[2]"));
	    		WebElement payslip_type = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[3]"));
	    		WebElement upload_type = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[4]"));    
				String Country_name=dataTable.getData("General_Data" , "country");
				if(country.getText().trim().contains(Country_name.trim()))
				{
					HighlightElement_green(country);
					System.out.println("Country match found");
					//String date = dataTable.getData("General_Data", "period");
					if(period.getText().trim().contains(selected_date.trim()))
				    {
					    HighlightElement_green(period);
					    System.out.println("Period match found");
					    if(payslip_type.getText().trim().contains(upload_or_update.trim()))
					    {
					    	HighlightElement_green(payslip_type);
					    	System.out.println("Payslip type match found");
						    if(upload_type.getText().trim().contains(selected_upload_type.trim()))
						    {
						    	System.out.println("Upload type match found");
							    HighlightElement_green(upload_type);
							    driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td[7]/div/div[contains(@class,'moreicon')]")).click();
							    System.out.println("Action button is clicked");
							    
							    if(Action.equalsIgnoreCase("PUBLISH"))
							    {
								    driver.findElement(By.xpath("//ul[@class='dropdown-menu customdropmenu']/li[contains(text(),'PUBLISH')]")).click();
								    System.out.println("Publish button is clicked");
								    report.updateTestLog("Publish on action button", "Publish button is clicked", Status.DONE);
							    }
							    else if(Action.equalsIgnoreCase("SEND BACK"))
							    {
							    	 driver.findElement(By.xpath("//ul[@class='dropdown-menu customdropmenu']/li[contains(text(),'SEND BACK')]")).click();
									 System.out.println("SEND BACK button is clicked");
									 report.updateTestLog("SEND BACK on action button", "SEND BACK button is clicked", Status.DONE);
							    }
							    /*****Handling alert*****/
							    checking_alert();
						    }
					    }
				    }
				} 
	    	 }
	     }  
		catch(Exception e)
		{
		  report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);     
		}
	} 
	
	public void checking_alert()
	{
		try {
			Thread.sleep(3000);
			Alert alert =driver.switchTo().alert();
			alert.getText();
			alert.accept();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}

package pages;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Array;

import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.cognizant.framework.Status;

import functionallibraries.FunctionalLibrary;

import org.apache.commons.io.comparator.LastModifiedFileComparator;
import org.apache.commons.io.filefilter.WildcardFileFilter;
import org.apache.poi.hssf.usermodel.HSSFDateUtil;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import supportlibraries.ScriptHelper;

import org.testng.Assert;

public class UploadPayslip_Aus extends MasterPage_Aus {

	 String countryid = "";
	 
	 public String countryDPvalue = driver.findElement(By.xpath("//*[@id='countrySelect']")).getText().trim();
	
	@FindBy(xpath="//div[contains(@class, 'dropdown')  and contains(@class,'btn-group')]")
	public WebElement country_dropdown_button; 

	public String country_list_xpath="//a[contains(@class,'ng-binding')]";
	
	@FindBy(xpath="//div[contains(@class,'epayManagePayslipLogo')]")
	public WebElement Manage_payslip_menu;

	@FindBy(xpath = "//label[contains(text(),'Manage Payslip')]")
	public WebElement Manage_PaySlip;
	
	@FindBy(xpath="//*[@id='monthview']")
	public WebElement MonthView;
	
	@FindBy(xpath="//*[@id='addEffectivedate']")
	public WebElement Effectivedate;
	
	@FindBy(xpath="(//button[contains(@class,'datepicker-switch')])")
	public WebElement YearSelection;
	
	@FindBy(xpath = "//input[contains(@id,'sendbackreason')]")
	public WebElement Send_Back_Reason;
	
	@FindBy(xpath = "//button[contains(text(),'Send Back')]")
	public WebElement Publish_Sendback_Button;
	
	@FindBy(xpath="//span[contains(@class,'month')]")
	public WebElement month_xpath1;
	
	public String month_xpath="//span[contains(@class,'month')]";
	
	@FindBy(xpath="//*[@id='updatebtn']")
	public WebElement btnUpdate;
	
	@FindBy(xpath="//*[@id='uploadtypeselpayslip']") 
	public WebElement drpdownUploadType;
		
	@FindBy(xpath="//*[@id='filetypeselpayslip']")
	public WebElement drpdownFileType;
	
	@FindBy(xpath="//*[@id='filetypeselpayslip']")
	public String drpdownFileType2;
	
	@FindBy(xpath="//*[@id='filetypeselpayslip']/option[2]")
	public WebElement drpdownFileTypeSalReg;
	
	@FindBy(xpath="//*[@id='get_file']")
	public WebElement btnBrowse;
		
	@FindBy(xpath="//*[@id='uploadbtn']")
	public WebElement btnUploadPayroll;
	
	@FindBy(id="updatebtn")
	public WebElement update_button;
	
	@FindBy(xpath="(//th[@class='next'])[2]")
	public WebElement btnnext;
	
	@FindBy(xpath="//span[contains(text(),'Dec')]")
	public WebElement linkDecMonth;
		
	@FindBy(xpath="(//th[contains(text(),'2021')])[2]")
	public WebElement linkYear2021; 
	
	@FindBy(xpath="//span[contains(text(),'Jan')]")
	public WebElement linkJanMonth;
	
	@FindBy(xpath="//span[contains(text(),'Feb')]")
	public WebElement linkFebMonth;
	
	@FindBy(xpath="//span[contains(text(),'Mar')]")
	public WebElement linkMarMonth;
	
	@FindBy(xpath="//span[contains(text(),'Apr')]")
	public WebElement linkAprilMonth;
	
	@FindBy(xpath="//span[contains(text(),'May')]")
	public WebElement linkMayMonth;
	
	@FindBy(xpath="//span[contains(text(),'Jun')]")
	public WebElement linkJuneMonth;
	
	@FindBy(xpath="//span[contains(text(),'Jul')]")
	public WebElement linkJulyMonth;
	
	@FindBy(xpath="//span[contains(text(),'Aug')]")
	public WebElement linkAUGMonth;
	
	@FindBy(xpath="//span[contains(text(),'Sep')]")
	public WebElement linkSepMonth;
	
	@FindBy(xpath="//span[contains(text(),'Oct')]")
	public WebElement linkOctMonth;
	
	@FindBy(xpath="//span[contains(text(),'Nov')]")
	public WebElement linkNovMonth;
	
	@FindBy(xpath="(//th[@class='prev'])[2]")
	public WebElement btnPrevious;

	@FindBy(xpath="//*[@id='MonthYearErrorLabel']")
	public WebElement labelNotUploadErrormessage;
	
	@FindBy(xpath="(//th[contains(text(),'2018')])[2]")
	public WebElement linkYear2018;
	
	@FindBy(xpath="(//th[contains(text(),'2020')])[2]")
	public WebElement linkYear2020;
	
	@FindBy(xpath="//*[@id='uploadmessage']")
	public WebElement OKAYbutton;
	
	@FindBy(xpath="(//button[contains(@class,'btnCommon marginRight10')])[1]")
	public WebElement OKAYbutton2;
	
	@FindBy(id = "ComponentIDinput")
	public WebElement Component_ID;
	
	@FindBy(xpath = "//a[contains(text(),'Manage Components')]")
	public WebElement Manage_Components;
	
	@FindBy(xpath = "(//div[contains(@class,'viewicon')])[1]")
	public WebElement ViewIcon;
	
	@FindBy(xpath = "//*[@id='AdminTab2']/a")
	public WebElement PublishSendBackTab;
	
	@FindBy(xpath = "//*[@id='RequestPublish']")
	public WebElement btnRequestPublish;
	
	@FindBy(id="uploadbtn")
	public WebElement upload_button;
	
	@FindBy(xpath= "//*[@id='uploadmessage']")
	public WebElement upload_message;
	
	
	@FindBy(xpath= "//*[@id='AdminTab1']/a")
	public WebElement TabUploadpayslip;
	

	@FindBy(id="noDataPopup")
	public WebElement errorpopup;
	
	@FindBy(xpath="//button[contains(@id,'uploadmessage')]")
	public WebElement Error_ok_button;
	
	@FindBy(className="browseButtonupload")
	public WebElement browse_Button;
	
	String filename="";
	
	public UploadPayslip_Aus(ScriptHelper scriptHelper) {
		super(scriptHelper);
		PageFactory.initElements(driver, this);
	}
	
	// Verify user is able to select Country 
	
	// Created by : Yesuraja 
	
	public void select_country() 
	{
		try 
		{
			ArrayList<String> List= new ArrayList<String>();
			
			List.add("Dubai");
			List.add("Abu Dhabi");
			List.add("Japan");
			List.add("New Zealand");
			List.add("Philippines");
			List.add("Saudi Arabia");
			List.add("South Korea");
			List.add("Thailand");
			
			//clickOnButton(country_dropdown_button);
			//String country_name= "Philippines";
			
			for (int j = 0; j < List.size(); j++) {
			String country_name = List.get(j);
			
			driver.findElement(By.id("arrowImg")).click();
   			System.out.println("Country arrow clicked");
   			Thread.sleep(1000);
   			
   			List<WebElement> country_name1 = driver.findElements(By.xpath("//ul[@class='dropdown-menu dropdown220']/li"));
   			
   			
   			for (WebElement CC : country_name1) {
   				if (CC.getText().equals(country_name)) {
   					report.updateTestLog("Country Name", "Country Name selected is: " + CC.getText(), Status.DONE);
   					CC.click();
   					Thread.sleep(2000);
   					break;
   				}
   				else
   				{
   					//Do nothing
   				}
   			}
   			
//			String country_name = dataTable.getData("General_Data", "country");
			//System.out.println("Country name:" +country_name);
			//List_Selection(country_name, country_list_xpath, "Country");
				
			report.updateTestLog("Country selection", "Selected Country : " +country_name, Status.DONE);
			Thread.sleep(3000);
			select_Manage_payslip();
			System.out.println("Manage payslip clicked");
			//Successfull_Upload_of_SalaryRegister()
			Thread.sleep(4000);
			
			//drpdownFileType.click();
			//Thread.sleep(3000);
			drpdownFileTypeSalReg.click();
			btnBrowse.click();
			
			if (country_name.equals("Dubai")) {
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\Dubai_Salary Register_Template.xlsx");
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);	
				System.out.println("File Selected for Dubai");
			} else if(country_name.equals("Abu Dhabi")) 
			{
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\Abu Dhabi_Salary Register_Template");	
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);	
				System.out.println("File Selected for Abudhabi");
			}else if(country_name.equals("Japan"))
			{
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\Japan_Salary Register_Template");
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);
				System.out.println("File Selected for Japan");
			}else if(country_name.equals("New Zealand"))
			{
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\New Zealand_Salary Register_Template");
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);
				System.out.println("File Selected for new zealand");
			}else if(country_name.equals("Philippines"))
			{
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\Philippines_Salary Register_Template");
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);	
				System.out.println("File Selected for philippines");
			}else if(country_name.equals("Saudi Arabia"))
			{
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\Saudi Arabia_Salary Register_Template");
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);
				System.out.println("File Selected for saudi arabia");
			}else if(country_name.equals("South Korea"))
			{
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\South Korea_Salary Register_Template");
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);
				System.out.println("File Selected for south korea");
			}else if(country_name.equals("Thailand"))
			{
				StringSelection SalaryRegister1 = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\Thailand_Salary Register_Template");
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister1, null);
				System.out.println("File Selected for Thailand");
			}
			
			//StringSelection SalaryRegister = new StringSelection("C:\\Users\\197188\\Desktop\\Salarytemplate all countries\\Dubai_Salary Register_Template.xlsx");
		    //Toolkit.getDefaultToolkit().getSystemClipboard().setContents(SalaryRegister, null);			
			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(5000);
			robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		    Thread.sleep(2000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(5000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(2000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
			Thread.sleep(5000);
		    //btnUploadPayroll.click();
		    Thread.sleep(5000);
		    if(btnUploadPayroll.isDisplayed())
		    {
		    	clickOnButton(btnUploadPayroll);
		    }
		    else if(update_button.isDisplayed())
		    {
		    	clickOnButton(update_button);
		    	
		    }
		    else	btnRequestPublish.click();		
		    	
		    Thread.sleep(2000);
		    System.out.println("File Selected successfully");
	    	OKAYbutton.click();
	    	System.out.println("Ok button clicked in popup");
	    	
	    	//WebElement element = driver.findElement(By.xpath("")).click(); 
			}
			
			
			
			
			//String country_name = dataTable.getData("General_Data", "country");
		/*	System.out.println("Country name:" +country_name);
			List_Selection(country_name, country_list_xpath, "Country");
			
			report.updateTestLog("Country selection", "Selected Country : " +country_name, Status.DONE);*/
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Selection of Country", "Selection of country having probelm" +e.getMessage(), Status.FAIL);
		}
		
		
		
		 
		
	}
	
	// Selection of Manage payslip button
	
	// Created by : Yesuraja  
	
	private void elseif(boolean equals) {
		// TODO Auto-generated method stub
		
	}

	public void select_Manage_payslip() 
	{
		try 
		{
			clickOnButton(Manage_PaySlip);
			//Thread.sleep(5000);
			System.out.println("Manage Payslip selected");
			report.updateTestLog("Manage payslip", "Manage payslipe selected ", Status.DONE);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Click on Managepayslip button", "Clicking manage payslip having probelm" +e.getMessage() , Status.FAIL);
		}
		
		
	}
	
	// Selection of Month by clicking Calendar Icon
	
	// Created by : Yesuraja 
	
	public void select_Mothview() 
	{
		try 
		{
			Thread.sleep(2000);
			MonthView.click();
			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
			List_Selection(Month_Name, month_xpath, "Calender");
			
			System.out.println("Country name:" +Month_Name);			
			report.updateTestLog("Monthview Calender", "Month selected as:" +Month_Name , Status.DONE);
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Clicking Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
		
		
	}
	
	// Month_Year_Decade selection using calendar icon
	public void select_Month_year_decade() 
	{
		report.addTestLogSubSection("Month_Year_Decade selection");
		try 
		{
			Thread.sleep(8000);
            MonthView.click();
            System.out.println("calendar icon clicked");
            report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
            String Month2 = dataTable.getData("General_Data", "Decade");
            System.out.println("Decade selected as "+Month2);
            report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

            //Click on Year Header
            driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
            Thread.sleep(5000);
            driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
            Thread.sleep(5000);
     //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
            driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
            Thread.sleep(5000);
            //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
            //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
            //Thread.sleep(5000);
            //Select Year
            String Year1 = dataTable.getData("General_Data", "Year");
            
            Thread.sleep(2000);
     //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
            driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
            Thread.sleep(2000);
            System.out.println("Year selected as"+Year1);
            report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
            Thread.sleep(3000);
            //Select Month
            String Month1 = dataTable.getData("General_Data", "MonthSelection");
            
            Thread.sleep(2000);
     driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
            System.out.println("Month selected as "+Month1);
            report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

            Thread.sleep(2000);

			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
		
		
	}
	
	// effective date selection in manage component
	public void select_Month_year_decade_managecomponent() 
	{
		report.addTestLogSubSection("Month_Year_Decade selection in manage component");
		try 
		{
			Thread.sleep(4000);
			Effectivedate.click();
            System.out.println("calendar icon clicked");
            report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
            String Month2 = dataTable.getData("General_Data", "Decade");
            System.out.println("Decade selected as "+Month2);
            report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

            //Click on Year Header
            driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
            Thread.sleep(5000);
            driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
            Thread.sleep(5000);
     //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
            driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
            Thread.sleep(5000);
            //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
            //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
            //Thread.sleep(5000);
            //Select Year
            String Year1 = dataTable.getData("General_Data", "Year");
            
            Thread.sleep(2000);
     //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
            driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
            Thread.sleep(2000);
            System.out.println("Year selected as"+Year1);
            report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
            Thread.sleep(3000);
            //Select Month
            String Month1 = dataTable.getData("General_Data", "MonthSelection");
            
            Thread.sleep(2000);
     driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
            System.out.println("Month selected as "+Month1);
            report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

            Thread.sleep(2000);

			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
		
		
	}
	
	public void select_previousMothview() 
	{
		try 
		{
			Thread.sleep(2000);
			MonthView.click();
			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
			List_Selection(Month_Name, month_xpath, "Calender");
			
			System.out.println("Country name:" +Month_Name);			
			report.updateTestLog("Monthview Calender", "Month selected as:" +Month_Name , Status.DONE);
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Clicking Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
		
		
	}
	
	// Verify upload type and file type drop down fields are enabled
	
	// Created by : Yesuraja 
	
	public void Uploadtype_Filetype_Dropdown_Enabled() 
	{
		try 
		{
			if(drpdownUploadType.isEnabled())
			{
				System.out.println("Success: Uploadtype dropdown field is enabled");
				//report.updateTestLog("Verify uploadtype, " Uploadtype is enable", Status.Done);
			}
			else
			{
				System.out.println("Success: Uploadtype dropdown field is not enabled");
			}
			
			if (drpdownFileType.isEnabled())
			{
				System.out.println("Success: FileType dropdown field is enabled");
			}
			else
			{
				System.out.println("Success: FileType dropdown field is not enabled");
			}
			
			report.updateTestLog("Uploadtype", "Dropdown field is enable"  , Status.DONE);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Upload type and File type ", "Upload type and file type drop down values not enabled" +e.getMessage(), Status.FAIL);
		}
		
		
	}
	
	// Verify user is able to upload the Payslip
	
	// Created by : Yesuraja 
	
	public void Upload_Payslip() 
	{
		try {
			drpdownFileType.click();
			Thread.sleep(1000);
			drpdownFileTypeSalReg.click();
			btnBrowse.click();
			Thread.sleep(1000);
			
			String file_name= dataTable.getData("General_Data", "Payslip_file_Name");
			String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+file_name;
			StringSelection filepath = new StringSelection(file_path);
			
		    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);			
			Robot robot = new Robot();
			robot.delay(250);
			robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(3000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER); 
			Thread.sleep(1000);
			if(btnUploadPayroll.isDisplayed())
		    {
		    	clickOnButton(btnUploadPayroll);
		    }
		    else if(update_button.isDisplayed())
		    {
		    	clickOnButton(update_button);
		    }
			Thread.sleep(1000);
		    //btnUploadPayroll.click();
		    OKAYbutton.click();
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage() , Status.FAIL);
		}
		
		
				
	}
	
	// Verify the upload type and file type dropdown fields are enabled for future year and month selection
	
	// Created by : Yesuraja 
	
	public void MonthSelectionWithFutureDate(){
		
		try{
			Thread.sleep(2000);
			HighlightElement_red(MonthView);
			MonthView.click();
			//String currentDate="07/2019";
			//String[] CurrentDateVal= currentDate.split("/");		
			//btnnext.click();
			linkAUGMonth.click();
			if(btnBrowse.isEnabled()){
				System.out.println("BUG : Browser button is enabled");
				report.updateTestLog("Verify Browse button is enable/Disable", "Browse button is enable : BUG", Status.FAIL);
			}
			else
			{
				System.out.println("Browser button is disabled");
				report.updateTestLog("Verify Browse button is enable/Disbale", "Browse button is disable", Status.PASS);
			}
			
			if(labelNotUploadErrormessage.isDisplayed())
			{
				System.out.println("Upload cannot be done for selected month error message is displayed");
				
				report.updateTestLog("Verify error message is displayed when future month/Year is selected", "Upload cannoth be done for the selected Month", Status.PASS);
			}
			
			if(drpdownUploadType.isEnabled())
			{
				System.out.println("Success: Uploadtype dropdown field is enabled");
				report.updateTestLog("Verify Uploadtype dropdown field is enable/disable", "Upload type dropdown is enable", Status.FAIL);
			}
			else
			{
				System.out.println("Success: Uploadtype dropdown field is not enabled");
				report.updateTestLog("Verify Uploadtype dropdown field is enable/disable", "Upload type dropdown is disable", Status.PASS);
				
			}
			
			if (drpdownFileType.isEnabled())
			{
				System.out.println("Success: FileType dropdown field is enabled");
				report.updateTestLog("Verify Filetype dropdown is enable/Disable", "Filetype dropdown is enable", Status.FAIL);
			}
			else
			{
				System.out.println("Success: FileType dropdown field is not enabled");

				report.updateTestLog("Verify Filetype dropdown is enable/Disable", "Filetype dropdown is disable", Status.PASS);
			}
					
		}catch (Exception e) {
			
			e.printStackTrace();
			report.updateTestLog("Month selection with future date", "Month selecting with future date having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	// Verify the system is displaying current month and year when the user clicks calendar icon
	

	public void select_FutureMothview() 
	{
		
		
		try 
		{

			/*String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
*/
			Thread.sleep(2000);
			
			//MonthView.click();
			select_Month_year_decade();
			/*String Month_Name = dataTable.getData("General_Data", "MonthSelection");
			//List_Selection(Month_Name, month_xpath, "Calender");
			
			System.out.println("Month selected as:" +Month_Name);			
			report.updateTestLog("Monthview Calender", "Month selected as:" +Month_Name , Status.DONE);*/
			
			report.addTestLogSubSection("Field Enable/Disable validation for Future year");
			
			if(btnBrowse.isEnabled()){
				System.out.println("BUG : Browser button is enabled");
				report.updateTestLog("Verify Browse button is enable/Disable", "Browse button is enable : BUG", Status.FAIL);
			}
			else
			{
				System.out.println("Browser button is disabled");
				report.updateTestLog("Verify Browse button is enable/Disbale", "Browse button is disable", Status.PASS);
			}
			
			if(labelNotUploadErrormessage.isDisplayed())
			{
				System.out.println("Upload cannot be done for selected month error message is displayed");
				
				report.updateTestLog("Verify error message is displayed when future month/Year is selected", "Upload cannot be done for the selected Month", Status.PASS);
			}
			
			if(drpdownUploadType.isEnabled())
			{
				System.out.println("Success: Uploadtype dropdown field is enabled");
				report.updateTestLog("Verify Uploadtype dropdown field is enable/disable", "Upload type dropdown is enable", Status.FAIL);
			}
			else
			{
				System.out.println("Success: Uploadtype dropdown field is not enabled");
				report.updateTestLog("Verify Uploadtype dropdown field is enable/disable", "Upload type dropdown is disable", Status.PASS);
				
			}
			
			if (drpdownFileType.isEnabled())
			{
				System.out.println("Success: FileType dropdown field is enabled");
				report.updateTestLog("Verify Filetype dropdown is enable/Disable", "Filetype dropdown is enable", Status.FAIL);
			}
			else
			{
				System.out.println("Success: FileType dropdown field is not enabled");

				report.updateTestLog("Verify Filetype dropdown is enable/Disable", "Filetype dropdown is disable", Status.PASS);
			}
					

			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Clicking Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
		
		
	}
	
	// as an admin trying to validate the current year view in calendar
	public void CalenderCurrentMonthYearSelectionValidaion()
	{
		report.addTestLogSubSection("CalenderCurrentMonthYearSelectionValidaion");

        
		try {
			Thread.sleep(2000);
			
			MonthView.click();  
			System.out.println("Calendar icon is selected");
			report.updateTestLog("Calendar icon selection", "Calendar icon is selected", Status.PASS);
        // DateFormat dateFormat = new SimpleDateFormat("MM/yyyy ");

			
			
       /* Date date = new Date();

        //String date1= dateFormat.format(date);

       

         SimpleDateFormat formatter = new SimpleDateFormat("MMM yyyy"); 

         String strDate = formatter.format(date); 

         System.out.println("Date Format with  MMMM yyyy : "+strDate); 

            

         //System.out.println(strDate);

        String[] CurrentDateVal= strDate.split(" ");

       
        
         String CurrentYear = linkYear2020.getText();

        String CurrentMonth = linkAprilMonth.getText();
*/				Date date = new Date();
SimpleDateFormat formatter = new SimpleDateFormat("MMM yyyy"); 
	         String strDate = formatter.format(date);
	         //System.out.println(strDate);
	        String[] CurrentDateVal= strDate.split(" ");
	        //System.out.println(CurrentDateVal);
	        String CurrentYear = driver.findElement(By.xpath("//div[@class='datepicker-months']/table/thead/tr/th[@class='datepicker-switch']")).getText();
	        System.out.println(CurrentYear);
	        report.updateTestLog("Current Year selection", "Current year selected as" +CurrentYear, Status.DONE);
	        //report.updateTestLog(stepName, stepDescription, stepStatus);
	        String CurrentMonth = driver.findElement(By.xpath("//div[@class='datepicker-months']/table/tbody/tr/td/span[@class='month focused']")).getText();
	        System.out.println(CurrentMonth);
	        report.updateTestLog("Current Month selection", "Current month selected as" +CurrentMonth, Status.DONE);
        if (CurrentMonth.trim().equalsIgnoreCase(CurrentDateVal[0].trim()))

         {

              System.out.println("Calender is displaying Current Month");
              report.updateTestLog("verify calendar is displaying current Month", "Calender is displaying Current Month", Status.PASS);
        }

        else {

              System.out.println("BUG : Calender is not displaying Current Month");
              report.updateTestLog("verify calendar is displaying current Month", "BUG : Calender is not displaying Current Month", Status.PASS);

        }

        if (CurrentYear.trim().equalsIgnoreCase(CurrentDateVal[1].trim()))

         {

              System.out.println("Calender is displaying Current Year");
              report.updateTestLog("verify calendar is displaying current Year", "Calender is displaying Current Year", Status.PASS);
              
        }

        else {

              System.out.println("BUG : Calender is not displaying Current Year");
              report.updateTestLog("verify calendar is displaying current Year", "BUG : Calender is not displaying Current Year", Status.PASS);

        }
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Current year selection", "Current year month selection having some probelm" +e.getMessage(), Status.FAIL);
		}
        

}
	
	// Verify the current month and all month and year validation and next and previous button validation

	
	public void Validate_Calender_Icon(){
		
		try{
			Thread.sleep(2000);
			 MonthView.click();
			 Thread.sleep(2000);
			 String ComponentID = dataTable.getData("General_Data", "Year");
			WebElement currentyear = driver.findElement(By.xpath("(//th[contains(text(),'"+ComponentID+"')])[2]"));
			 if(currentyear.isDisplayed()){
					System.out.println("Current year is displayed");
				}
				else
				{
					System.out.println("Current year is not displayed");
				}
			 Thread.sleep(1000);
			 String Month1 = dataTable.getData("General_Data", "Month_01");
			 WebElement JanMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]"));
			 
			 if(JanMonth.isDisplayed()){
					System.out.println("January month is displayed");
				}
				else
				{
					System.out.println("January month is not displayed");
				}
			 Thread.sleep(1000);
			 String Month2 = dataTable.getData("General_Data", "Month_02");
			 WebElement FebMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]"));
			 
			 if(FebMonth.isDisplayed()){
				 System.out.println("February month is displayed");
			 }
			 else
			 {
				 System.out.println("February month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month3 = dataTable.getData("General_Data", "Month_03");
			 WebElement MarMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month3+"')]"));
			 
			 if(MarMonth.isDisplayed()){
				 System.out.println("March month is displayed");
			 }
			 else
			 {
				 System.out.println("March month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month4 = dataTable.getData("General_Data", "Month_04");
			 WebElement AprMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month4+"')]"));
			 
			 if(AprMonth.isDisplayed()){
				 System.out.println("April month is displayed");
			 }
			 else
			 {
				 System.out.println("April month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month5 = dataTable.getData("General_Data", "Month_05");
			 WebElement MayMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month5+"')]"));
			 
			 if(MayMonth.isDisplayed()){
				 System.out.println("May month is displayed");
			 }
			 else
			 {
				 System.out.println("May month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month6 = dataTable.getData("General_Data", "Month_06");
			 WebElement JunMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month6+"')]"));
			 
			 if(JunMonth.isDisplayed()){
				 System.out.println("June month is displayed");
			 }
			 else
			 {
				 System.out.println("June month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month7 = dataTable.getData("General_Data", "Month_07");
			 WebElement JulMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month7+"')]"));
			
			 if(JulMonth.isDisplayed()){
				 System.out.println("July month is displayed");
			 }
			 else
			 {
				 System.out.println("July month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month8 = dataTable.getData("General_Data", "Month_08");
			 WebElement AugMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month8+"')]"));
			
			 if(AugMonth.isDisplayed()){
				 System.out.println("August month is displayed");
			 }
			 else
			 {
				 System.out.println("August month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month9 = dataTable.getData("General_Data", "Month_09");
			 WebElement SepMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month9+"')]"));
			 
			 if(SepMonth.isDisplayed()){
				 System.out.println("September month is displayed");
			 }
			 else
			 {
				 System.out.println("September month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month10 = dataTable.getData("General_Data", "Month_10");
			 WebElement OctMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month10+"')]"));
			 
			 if(OctMonth.isDisplayed()){
				 System.out.println("October month is displayed");
			 }
			 else
			 {
				 System.out.println("October month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month11 = dataTable.getData("General_Data", "Month_11");
			 WebElement NovMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month11+"')]"));
			 
			 if(NovMonth.isDisplayed()){
				 System.out.println("November month is displayed");
			 }
			 else
			 {
				 System.out.println("November month is not displayed"); 
			 }
			 Thread.sleep(1000);
			 String Month12 = dataTable.getData("General_Data", "Month_12");
			 WebElement DecMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month12+"')]"));
			
			 if(DecMonth.isDisplayed()){
				 System.out.println("December month is displayed");
			 }
			 else
			 {
				 System.out.println("December month is not displayed"); 
			 }
			 btnPrevious.click();
			 Thread.sleep(1000);
			 String PreYear = dataTable.getData("General_Data", "PreviousYear");
			WebElement Previousyear = driver.findElement(By.xpath("(//th[contains(text(),'"+PreYear+"')])[2]"));
			
			 if(Previousyear.isDisplayed()){
				 System.out.println("Previous button is clicked successfully + 2019 is displayed"); 
			 }
			 else
			 {
				 System.out.println("2019 is not displayed");
			 }
			 
			 Thread.sleep(1000);
			 btnnext.click();
			 System.out.println("Next button is clicked successfully");
			 String CurntYear = dataTable.getData("General_Data", "Year");
			 WebElement currntyear = driver.findElement(By.xpath("(//th[contains(text(),'"+CurntYear+"')])[2]"));
			 
			 if (currntyear.isDisplayed()){
				 System.out.println("2020 is displayed");
			 }
			 else
			 {
				 System.out.println("2020 is not displayed"); 
			 }
			 
		}
		catch(Exception e){
			e.printStackTrace();
			report.updateTestLog("Validation of calender icon", "validation of calender icon having some probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	// As  an admin, verify whether able to set previous year and month
	
	// Created by : Yesuraja 
	
	//Invaid Scenario TC:12
	
	public void Setting_Previous_Year_Month(){
		
		try{
			Thread.sleep(2000);
			
			 if (TabUploadpayslip.isDisplayed()){
				 System.out.println("Upload Payslip Tab is selected by default");
			 }
			
			Thread.sleep(2000);
			MonthView.click();
			System.out.println("Calender clicked successfully");
			Thread.sleep(1000);
			String Month1 = dataTable.getData("General_Data", "Month_01");
			 WebElement JanMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]"));			 
			 JanMonth.click();
			 System.out.println("Previous month in current year is clicked");		
			 Thread.sleep(1000);

			 MonthView.click();

			 btnPrevious.click();
			 Thread.sleep(1000);
			 String Month2 = dataTable.getData("General_Data", "Month_02");
			 WebElement FebMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]"));

			 FebMonth.click();
			 System.out.println("User clicked Feb month in previous year");
			   		
		}catch (Exception e){
			
			e.printStackTrace();
			report.updateTestLog("Upload duplicate Document", "Uploading of duplicate document having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	// selecting previous month selection using data sheet
	
	public void select_previousMonthview() 
	{
		try 
		{
			/*Thread.sleep(2000);
			MonthView.click();
			System.out.println("calendar icon clicked");
			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
			List_Selection(Month_Name, month_xpath, "Calender");
			
			System.out.println("Selected Month:" +Month_Name);			
			report.updateTestLog("verify Monthview Calender", "Previous Month selected as:" +Month_Name , Status.DONE);
		*/	
			Thread.sleep(2000);
			MonthView.click();
			System.out.println("calendar icon clicked");
			report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
			String Month2 = dataTable.getData("General_Data", "Decade");
			System.out.println("Decade selected as "+Month2);
			report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);
			//Click on Year Header
			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
			//System.out.println("1 click");
			Thread.sleep(2000);
			driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
			//System.out.println("2 click");
			Thread.sleep(2000);
			driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
			//System.out.println("3 click");
			String Year1 = dataTable.getData("General_Data", "Year");
			System.out.println("Year selected as"+Year1);
			report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
			driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[@class='year focused']")).click();
			//System.out.println("2020 clicked");
			Thread.sleep(2000);
			/*driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
			System.out.println("4 click");*/
			/*Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).getText();
			System.out.println("4 click");
			Thread.sleep(2000);
			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
			Thread.sleep(2000);*/
			//Select Year
			/*String Year1 = dataTable.getData("General_Data", "Year");
			System.out.println("Year selected as "+Year1);
			Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
			Thread.sleep(2000);*/

			//Select Month
			String Month1 = dataTable.getData("General_Data", "MonthSelection");
			System.out.println("Month selected as "+Month1);
			report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);
			Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
			Thread.sleep(2000);
	
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("verify Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
		
		
	}
	
	// Verify the system is displaying an error message when the user tries to upload document for future month.
	
	// Created by : Yesuraja 
	
	public void Setting_Upcoming_Year_Month(){
		try{
			Thread.sleep(2000);
			MonthView.click();	
			btnnext.click();
			String Month12 = dataTable.getData("General_Data", "Month_12");
			 WebElement DecMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month12+"')]"));
			 DecMonth.click();
			Thread.sleep(1000);
			if(labelNotUploadErrormessage.isDisplayed())
			{
				System.out.println("Upload cannot be done for selected month error message is displayed");
			}
			
			
		}catch (Exception e){
			e.printStackTrace();
			report.updateTestLog("Setting upcoming month and year", "Setting upcoming month and year having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	// Verify whether the user is able to upload the regular payroll Salary Register successfully
	
	
	
	public void Successfull_Upload_of_SalaryRegister(){
		
		
		report.addTestLogSubSection("Regular Payroll salary Payslip Upload validation");
		try{
			Thread.sleep(4000);
			/*MonthView.click();
			System.out.println("Month is selected");
			String Month1 = dataTable.getData("General_Data", "MonthSelection");
			 WebElement Month = driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]"));
			 Month.click();
			 System.out.println(Month1 + "month is selected");*/
			
			/*String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.PASS);
*/
			
			String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			System.out.println(Upload_Type + "Upload type is selected");
			report.updateTestLog("Upload type", "Upload type selected as: "+ Upload_Type , Status.PASS);
			selectValueFromDropDown(drpdownUploadType,Upload_Type);
			System.out.println(drpdownUploadType);
			//drpdownFileType.click();
			Thread.sleep(5000);		
			String File_Type = dataTable.getData("General_Data", "File_Type");
			selectValueFromDropDown(drpdownFileType,File_Type);
			System.out.println(File_Type + "File type is selected");
			report.updateTestLog("file type", "file type selected as: "+ File_Type , Status.PASS);
					
			//drpdownFileTypeSalReg.click();
			btnBrowse.click();
			Thread.sleep(8000);
			String country_name= dataTable.getData("General_Data", "Country");
			String company = dataTable.getData("General_Data" , "CompanyID");
			if (company.equals("CTS")){
				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
				StringSelection filepath = new StringSelection(file_path);
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			}	
			else {

				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template_"+company+".xlsx";
				StringSelection filepath = new StringSelection(file_path);
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			}
			//String country_name= dataTable.getData("General_Data", "Country");
			//String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
			//StringSelection filepath = new StringSelection(file_path);
			
		    //Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);			
			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(6000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(6000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(6000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		    
		    if(upload_button.isDisplayed())
		    {	
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);  		 
		    }
		    
		    Thread.sleep(8000);
		    OKAYbutton.click();
		    Thread.sleep(8000);
		    clickOnButton(btnRequestPublish);
		    Thread.sleep(8000);		     		
     		clickOnButton(OKAYbutton2);		     				     		
     		//driver.navigate().refresh();
		    System.out.println("Document uploaded successfully");
		    report.updateTestLog("Uploading Payslip", "Payslip uploaded successfully" , Status.PASS);
		    		    
			
		}catch (Exception e){
			e.printStackTrace();
			report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage(), Status.FAIL);
		}
		
	}
	
	public void Month_Year_Selection(){
		try 
		{
			/*Thread.sleep(2000);
			MonthView.click();
			System.out.println("calendar icon clicked");
			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
			List_Selection(Month_Name, month_xpath, "Calender");
			
			System.out.println("Selected Month:" +Month_Name);			
			report.updateTestLog("verify Monthview Calender", "Previous Month selected as:" +Month_Name , Status.DONE);
		*/	
			Thread.sleep(5000);
			MonthView.click();
			System.out.println("calendar icon clicked");
			report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
			String Month2 = dataTable.getData("General_Data", "Decade");
			System.out.println("Decade selected as "+Month2);
			report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.DONE);
			//Click on Year Header
			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
			//System.out.println("1 click");
			Thread.sleep(5000);
			driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
			//System.out.println("2 click");
			Thread.sleep(5000);
			driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
			//System.out.println("3 click");
			String Year1 = dataTable.getData("General_Data", "Year");
			System.out.println("Year selected as"+Year1);
			report.updateTestLog("Year selection", "Year selected as"+Year1, Status.DONE);
			driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[@class='year focused']")).click();
			//System.out.println("2020 clicked");
			Thread.sleep(5000);
			/*driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
			System.out.println("4 click");*/
			/*Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).getText();
			System.out.println("4 click");
			Thread.sleep(2000);
			driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
			Thread.sleep(2000);*/
			//Select Year
			/*String Year1 = dataTable.getData("General_Data", "Year");
			System.out.println("Year selected as "+Year1);
			Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
			Thread.sleep(2000);*/

			//Select Month
			String Month1 = dataTable.getData("General_Data", "MonthSelection");
			System.out.println("Month selected as "+Month1);
			report.updateTestLog("Month selection", "Month selected as "+Month1, Status.DONE);
			Thread.sleep(2000);
			driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
			Thread.sleep(2000);
	
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("verify Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
		
		
	}
	
	// Verify whether the user is able to upload the Salary Register successfully
	
		// Created by : Yesuraja
		
		public void Successfull_Upload_of_PaySlip(){
			try{
				Thread.sleep(4000);
				/*MonthView.click();
				String Month1 = dataTable.getData("General_Data", "Month_01");
				 WebElement JanMonth = driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]"));
				 JanMonth.click();
				 System.out.println("Jan month is selected");*/
				String Upload_Type = dataTable.getData("General_Data", "Upload_type");
				selectValueFromDropDown(drpdownUploadType,Upload_Type);
				//drpdownFileType.click();
				Thread.sleep(4000);		
				String File_Type = dataTable.getData("General_Data", "File_Type");
				selectValueFromDropDown(drpdownFileType,File_Type);
						
				//drpdownFileTypeSalReg.click();
				btnBrowse.click();
				Thread.sleep(2000);
				String country_name= dataTable.getData("General_Data", "country");
				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_PaySlip_Template.xlsx";
				StringSelection filepath = new StringSelection(file_path);
				
			    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);			
				Robot robot = new Robot();
				robot.delay(250);
				Thread.sleep(4000);
				robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
			    robot.keyPress(java.awt.event.KeyEvent.VK_V);
			    Thread.sleep(5000);
			    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
			    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
			    Thread.sleep(3000);
			    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
			    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			    
			    if(upload_button.isDisplayed())
			    {	
			     clickOnButton(upload_button);
			    }
			    else if(update_button.isDisplayed())
			    {
			     clickOnButton(update_button);  		 
			    }
			    
			    Thread.sleep(3000);
			    OKAYbutton.click();
			    Thread.sleep(4000);
			    clickOnButton(btnRequestPublish);
			    Thread.sleep(2000);		     		
	     		clickOnButton(OKAYbutton2);		     				     		
	     		//driver.navigate().refresh();
			    System.out.println("Document uploaded successfully");
			    report.updateTestLog("Uploading Payslip", "Payslip uploaded successfully" , Status.PASS);
			    		    
				
			}catch (Exception e){
				e.printStackTrace();
				report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage(), Status.FAIL);
			}
			
		}
	
		// Verify whether the user is able to upload the Salary Register successfully with supplementary option
	
		// Created by : Yesuraja
	
	public void Upload_of_SalaryRegister_Supplementary(){
		
		report.addTestLogSubSection("Upload_of_SalaryRegister_Supplementary validation");
		try{
			//drpdownFileType.click();
			
			/*String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
*/
		
			String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			selectValueFromDropDown(drpdownUploadType,Upload_Type);
			report.updateTestLog("Upload Type", "Upload Type selected as "+Upload_Type, Status.PASS);
			System.out.println("Upload type selected as"+Upload_Type);
			Thread.sleep(1000);
			String File_Type = dataTable.getData("General_Data", "File_Type");
			report.updateTestLog("File Type", "File Type selected as "+File_Type, Status.PASS);
			System.out.println("File type selected as"+File_Type);
			selectValueFromDropDown(drpdownFileType,File_Type);
			btnBrowse.click();
			Thread.sleep(3000);
			String country_name= dataTable.getData("General_Data", "Country");
			String company = dataTable.getData("General_Data" , "CompanyID");
			if (company.equals("CTS")){
			String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
			StringSelection filepath = new StringSelection(file_path);
			Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);	
			}
			else {
				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template_Sasfocus.xlsx";
				StringSelection filepath = new StringSelection(file_path);
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			}


			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(8000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(8000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(8000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			Thread.sleep(8000);
		    
		    if(upload_button.isDisplayed())
		    {
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);
		    }
		    			
			Thread.sleep(8000);
		    OKAYbutton.click();
		    Thread.sleep(8000);
		    clickOnButton(btnRequestPublish);
		    Thread.sleep(8000);		     		
     		clickOnButton(OKAYbutton2);		     				     		
     		//driver.navigate().refresh();
		    System.out.println("Document uploaded successfully");
		    report.updateTestLog("Uploading Payslip", "Payslip uploaded successfully" , Status.PASS);
			
		}catch (Exception e){
			e.printStackTrace();
			report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	// Verify whether the user is able to upload the Salary Register successfully with AdditionalPayroll 1 option
	
	// Created by : Yesuraja
	
	public void Upload_of_SalaryRegister_AdditionalPayroll1(){
		report.addTestLogSubSection("Upload_of_SalaryRegister_AdditionalPayroll1 validation");
		try{
			
			/*String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
*/

			String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			selectValueFromDropDown(drpdownUploadType,Upload_Type);
			report.updateTestLog("Upload Type", "Upload Type selected as "+Upload_Type, Status.PASS);
			System.out.println("Upload type selected as"+Upload_Type);
			Thread.sleep(1000);
			String File_Type = dataTable.getData("General_Data", "File_Type");
			selectValueFromDropDown(drpdownFileType,File_Type);
			report.updateTestLog("File Type", "File Type selected as "+File_Type, Status.PASS);
			System.out.println("File type selected as"+File_Type);
			btnBrowse.click();
			Thread.sleep(3000);
			
			String country_name= dataTable.getData("General_Data", "Country");
			String company = dataTable.getData("General_Data" , "CompanyID");
			if (company.equals("CTS")){
			String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
			StringSelection filepath = new StringSelection(file_path);
			Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);	
			}
			else
			{
				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template_Sasfocus.xlsx";
				StringSelection filepath = new StringSelection(file_path);
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			}


			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(8000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(8000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(8000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			Thread.sleep(8000);
		    
		    if(upload_button.isDisplayed())
		    {
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);
		    }
		    

		    Thread.sleep(8000);
		    OKAYbutton.click();
		    Thread.sleep(8000);
		    clickOnButton(btnRequestPublish);
		    Thread.sleep(8000);		     		
     		clickOnButton(OKAYbutton2);
     		System.out.println("Document uploaded successfully");
		    report.updateTestLog("Uploading Payslip", "Payslip uploaded successfully" , Status.PASS);
     		
		}catch(Exception e) {
			
			e.printStackTrace();
			report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	// Verify whether the user is able to upload the Salary Register successfully with AdditionalPayroll2 option
	
	// Created by : Yesuraja
	
	public void Upload_of_SalaryRegister_AdditionalPayroll2(){
		
		report.addTestLogSubSection("Upload_of_SalaryRegister_AdditionalPayroll2 validation");
		try{
			
			/*String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
			*/

			String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			selectValueFromDropDown(drpdownUploadType,Upload_Type);
			report.updateTestLog("Upload Type", "Upload Type selected as "+Upload_Type, Status.PASS);
			System.out.println("Upload type selected as"+Upload_Type);	
			Thread.sleep(3000);
			String File_Type = dataTable.getData("General_Data", "File_Type");
			report.updateTestLog("File Type", "File Type selected as "+File_Type, Status.PASS);
			System.out.println("File type selected as"+File_Type);
			selectValueFromDropDown(drpdownFileType,File_Type);
			btnBrowse.click();
			Thread.sleep(3000);
			String country_name= dataTable.getData("General_Data", "Country");
			String company = dataTable.getData("General_Data" , "CompanyID");
			if (company.equals("CTS")){
			String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
			StringSelection filepath = new StringSelection(file_path);
			
		    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);		
			}
			else
			{
				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template_Sasfocus.xlsx";
				StringSelection filepath = new StringSelection(file_path);
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			}


				
			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(8000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(8000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(8000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			Thread.sleep(8000);
		    if(upload_button.isDisplayed())
		    {
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);
		    }
		    System.out.println("Document uploaded successfully");
		    report.updateTestLog("Uploading Payslip", "Payslip uploaded successfully" , Status.PASS);
		    	
		    Thread.sleep(8000);
		    OKAYbutton.click();
		    Thread.sleep(8000);
		    clickOnButton(btnRequestPublish);
		    Thread.sleep(8000);		     		
     		clickOnButton(OKAYbutton2);
		    			
		}catch(Exception e) {
			
			e.printStackTrace();
			report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	
	public void Upload_of_SalaryRegister_AdditionalPayroll3(){
		
		report.addTestLogSubSection("Upload_of_SalaryRegister_AdditionalPayroll3 validation");
		try{
			/*String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			System.out.println("Company id selected as:"+company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
*/
		
			String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			selectValueFromDropDown(drpdownUploadType,Upload_Type);
			report.updateTestLog("Upload Type", "Upload Type selected as "+Upload_Type, Status.PASS);
			System.out.println("Upload type selected as"+Upload_Type);	
			Thread.sleep(3000);
			String File_Type = dataTable.getData("General_Data", "File_Type");
			report.updateTestLog("File Type", "File Type selected as "+File_Type, Status.PASS);
			System.out.println("File type selected as"+File_Type);
			selectValueFromDropDown(drpdownFileType,File_Type);
			btnBrowse.click();
			Thread.sleep(3000);
			String country_name= dataTable.getData("General_Data", "Country");
			String company = dataTable.getData("General_Data" , "CompanyID");
			if(company.equals("CTS")){
			String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
			StringSelection filepath = new StringSelection(file_path);
			
		    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			}
			else
			{
				String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template_Sasfocus.xlsx";
				StringSelection filepath = new StringSelection(file_path);
				Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
			}


			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(8000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(8000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(8000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			Thread.sleep(8000);
		    if(upload_button.isDisplayed())
		    {
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);
		    }
		    System.out.println("Document uploaded successfully");
		    report.updateTestLog("Uploading Payslip", "Payslip uploaded successfully" , Status.PASS);
		    	
		    Thread.sleep(8000);
		    OKAYbutton.click();
		    Thread.sleep(8000);
		    clickOnButton(btnRequestPublish);
		    Thread.sleep(8000);		     		
     		clickOnButton(OKAYbutton2);
		    			
		}catch(Exception e) {
			
			e.printStackTrace();
			report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	// Verify the error description in error report
	
	// Created by : Yesuraja
	
	
	
	public void Verify_Error_Description_in_ErrReport(){
		
		try{
			String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			selectValueFromDropDown(drpdownUploadType,Upload_Type);
			report.updateTestLog("Upload Type", "Upload Type selected as "+Upload_Type, Status.PASS);
			System.out.println("Upload type selected as"+Upload_Type);	
			Thread.sleep(3000);
			String File_Type = dataTable.getData("General_Data", "File_Type");
			report.updateTestLog("File Type", "File Type selected as "+File_Type, Status.PASS);
			System.out.println("File type selected as"+File_Type);
			selectValueFromDropDown(drpdownFileType,File_Type);
			btnBrowse.click();
			

			
			/*Select dropdown = new Select(driver.findElement(By.xpath("//*[@id='uploadtypeselpayslip']")));
			dropdown.selectByVisibleText("Supplementary");
			Thread.sleep(1000);
			String File_Type = dataTable.getData("General_Data", "File_Type");
			selectValueFromDropDown(drpdownFileType,File_Type);
			btnBrowse.click();
			Thread.sleep(1000);*/
			
			String country_name= dataTable.getData("General_Data", "country");
			String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template_Error Desc.xlsx";
			StringSelection filepath = new StringSelection(file_path);
			
		    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);			
			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(4000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(5000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(3000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);

		    if(upload_button.isDisplayed())
		    {
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);
		    }
		    else
		    {
		     System.out.println("Already a template is pending for Request Publish, Please proceed accordingly");
		     Assert.fail();
		    }
		    Thread.sleep(10000);
		    OKAYbutton.click(); 
		    /*String data = getCellData("Salary+Register", 1, "ErrorDesc");
		    System.out.println(data);*/
			Thread.sleep(3000);
		    //OKAYbutton.click();
		    
		   }catch (Exception e)
		   {
			   e.getStackTrace();
			   report.updateTestLog("Validation of error description in error report ", "Validation of error description in error report having problem" +e.getMessage(), Status.FAIL);
			   }
		   
	
	}
		
	//String inputExcelPath = "C:\\Users\\226346\\Downloads\\Salary+Register - 2020-02-20T122252.925.xls";
	public File file = null;
	public FileInputStream fis = null;
	public XSSFWorkbook workbook = null;
	public XSSFSheet sheet = null;
	public XSSFRow row = null;
	public XSSFCell cell = null;
	public FileOutputStream fos = null;
	public XSSFCell newCell = null;
	public OPCPackage opcPackage = null;

	public String getCellData(String sheetName, int rowNum, String colName) {
	try {
		//Get the latest downloaded file
        String filepath = dataTable.getData("General_Data", "DownloadFilePath");
        System.out.println("Download filepath given is: " +filepath);
	
      //Verify the download
        File theNewestFile1 = null;
        File dir1 = new File(filepath);
        String ext1 = "xls";
        FileFilter fileFilter1 = new WildcardFileFilter("*." + ext1);
        File[] files1 = dir1.listFiles(fileFilter1);

        if (files1.length > 0) 
        {
        //The newest file comes first 
      	  
        Arrays.sort(files1, LastModifiedFileComparator.LASTMODIFIED_REVERSE);
        theNewestFile1 = files1[0];
         }
              
        FileInputStream fs1 = new FileInputStream(theNewestFile1);
                      System.out.println("FS1 is: "+fs1);
                    
        String filename2 = theNewestFile1.getName();
                    
        System.out.println("File Downloaded is: " +filename2);
       report.updateTestLog("Downloaded File Name", "File Downloaded is: " +filename2, Status.DONE);

        String Finalfilename = filepath + filename2 ; 
       // String Finalfilename = filename2 ; 
        System.out.println("Final updated file - " +Finalfilename);
        report.updateTestLog("Final updated File Name", "Final updated File Name: " +Finalfilename, Status.DONE);

        
        fis = new FileInputStream(Finalfilename);
        
	workbook = new XSSFWorkbook(fis);
	sheet = workbook.getSheet(sheetName);
System.out.println(workbook);
	int col_Num = 0;
	row = sheet.getRow(0);
	for (int i = 0; i < row.getLastCellNum(); i++) {
	if (row.getCell(i).getStringCellValue().trim().equals(colName.trim()))
	{
	col_Num = i;
	break;
	}
	}
	System.out.println("getcell");
	cell = sheet.getRow(rowNum).getCell(col_Num);
	//cell = row.getCell(col_Num);

	if (cell.getCellType() == Cell.CELL_TYPE_STRING) {
	System.out.println(cell.getStringCellValue());
	return cell.getStringCellValue();
	} else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC || cell.getCellType() == Cell.CELL_TYPE_FORMULA) {

	String cellValue = String.valueOf(cell.getNumericCellValue());
	if (HSSFDateUtil.isCellDateFormatted(cell)) {

	DateFormat df = new SimpleDateFormat("dd/MM/yy");
	Date date = cell.getDateCellValue();
	cellValue = df.format(date);
	}
	return cellValue;
	} else if (cell.getCellType() == Cell.CELL_TYPE_BLANK) {

	return "";
	} else {
	return String.valueOf(cell.getBooleanCellValue());
	}
	} catch (Exception e) {
	e.printStackTrace();
	return "row " + rowNum + " or column " + colName + " does not exist  in Excel";
	}
	}


	public void Verify_Error_report_Downloaded(){
		try{
			//String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			//selectValueFromDropDown(drpdownUploadType,Upload_Type);
			//Thread.sleep(1000);
			//String File_Type = dataTable.getData("General_Data", "File_Type");
			//selectValueFromDropDown(drpdownFileType,File_Type);		
			Thread.sleep(3000);
			btnBrowse.click();
			Thread.sleep(1000);	
			
			String file_name= dataTable.getData("General_Data", "ErrRept24");
			StringSelection filepath = new StringSelection(System.getProperty("user.dir")+ "\\Payslip_files\\"+file_name); 
			
		    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);			
			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(4000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(5000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(3000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			Thread.sleep(3000);
    
		    if(upload_button.isDisplayed())
		    {	
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);
		    }
		    else
		    {
		     System.out.println("Already a template is pending for Request Publish, Please proceed accordingly");
		     Assert.fail();
		    }
		    Thread.sleep(3000);
		    upload_message.click();
		    
		    System.out.println("OK button clicked");		    
		    String DwnFilePath= dataTable.getData("General_Data", "Download_Path");		    
		    File file= new File(DwnFilePath);
		    Thread.sleep(4000);
			boolean flag= false;
			if(file.exists())
			{
			flag= true;
			}
			if (flag) {
				
				System.out.println("Error report downloaded successfully");
				
			} else {
				System.out.println("Error report not downloaded");
			}
			for (int i = 0; i < 10; i++) {
					
	    	if(file.exists())
	    	{
	    	file.delete();
	    	}
			}
			
			
		}catch (Exception e){
			
			e.getStackTrace();
			report.updateTestLog("Error report download", "Error report download having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	public void Verify_Error_report_Special_Charecters_Downloaded(){
		try{
			//String Upload_Type = dataTable.getData("General_Data", "Upload_type");
			//selectValueFromDropDown(drpdownUploadType,Upload_Type);
			Thread.sleep(3000);
			//String File_Type = dataTable.getData("General_Data", "File_Type");
			//selectValueFromDropDown(drpdownFileType,File_Type);
			btnBrowse.click();
			Thread.sleep(1000);
			String file_name= dataTable.getData("General_Data", "ErrRept25");
			StringSelection filepath = new StringSelection(System.getProperty("user.dir")+ "\\Payslip_files\\"+file_name); 
			
		    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);			
			Robot robot = new Robot();
			robot.delay(250);
			Thread.sleep(4000);
			robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
		    robot.keyPress(java.awt.event.KeyEvent.VK_V);
		    Thread.sleep(5000);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
		    Thread.sleep(3000);
		    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
		    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
			Thread.sleep(3000);

		    if(upload_button.isDisplayed())
		    {
		     clickOnButton(upload_button);
		    }
		    else if(update_button.isDisplayed())
		    {
		     clickOnButton(update_button);
		    }
		    else
		    {
		     System.out.println("Already a template is pending for Request Publish, Please proceed accordingly");
		     Assert.fail();
		    }
		    Thread.sleep(4000);
		    upload_message.click();
		    System.out.println("OK button clicked");
		    
		    String DwnFilePath= dataTable.getData("General_Data", "Download_Path");		    
		    File file= new File(DwnFilePath);
		    Thread.sleep(3000);
		    
			boolean flag= false;
			if(file.exists())
			{
			flag= true;
			}
			if (flag) {
				
				System.out.println("Error report downloaded successfully");
				
			} else {
				System.out.println("Error report not downloaded");
			}
			for (int i = 0; i < 10; i++) {
					
	    	if(file.exists())
	    	{
	    	file.delete();
	    	}
			}
			
		}catch (Exception e){
			
			e.getStackTrace();
			report.updateTestLog("Error report special charecter", "Error report special charector having probelm" +e.getMessage(), Status.FAIL);
		}
	}
	
	
	public void Enter_ComponentID_ManageComponents(){
		
		try{
			Manage_Components.click();
			System.out.println("Manage component selected");
			Thread.sleep(2000);
			Component_ID.click();
			String ComponentID = dataTable.getData("General_Data", "ComponentID");
			System.out.println("Component ID:" +ComponentID);
			Component_ID.sendKeys(ComponentID);
			System.out.println("Component ID entered");
			
		}catch (Exception e){
			e.getStackTrace();
			report.updateTestLog("Enter manage components", "Enter manage components having probelm" +e.getMessage(), Status.FAIL);
			
		}
	}
	
	public void Admin_Ableto_Download_Report(){
		
		report.addTestLogSection("Download report validation in Publish/sentback");
		try{
			Thread.sleep(5000);
			driver.navigate().refresh();
			Thread.sleep(5000);
			clickOnButton(Manage_PaySlip);
			
			Thread.sleep(6000);
			PublishSendBackTab.click();		
			Thread.sleep(2000);
			String payslip = driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/tbody/tr/td[2]")).getText();
			String[] parts = payslip.split(" ");
			String monthVal = parts[0]; 
			String yearVal = parts[1];  
			
			String period = monthVal+"_"+yearVal;
			
			String Type = driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/tbody/tr[1]/td[3]")).getText();
			String[] paysltype = Type.split(" "); 
			String Update_Upload = paysltype[1];
			
			System.out.println("countryDPvalue is :"+countryDPvalue);
			countryDPvalue = dataTable.getData("General_Data", "Country");
			if(countryDPvalue.contains("Dubai"))
			{
				countryid="02";
			}
			if(countryDPvalue.contains("Japan"))
			{
				countryid="10";
			}
			if(countryDPvalue.contains("AbuDhabi"))
			{
				countryid="9";
			}
			if(countryDPvalue.contains("NewZealand"))
			{
				countryid="11";
			}
			if(countryDPvalue.contains("Philippines"))
			{
				countryid="12";
			}
			if(countryDPvalue.contains("SaudiArabia"))
			{
				countryid="13";
			}
			if(countryDPvalue.contains("SouthKorea"))
			{
				countryid="14";
			}
			if(countryDPvalue.contains("Thailand"))
			{
				countryid="15";
			}
			
			System.out.println("countryid is :"+countryid);
			String filepath = "C:\\Users\\226346\\Downloads\\Payslip+"+Update_Upload+"_"+period+"_"+countryid+".xls";
			System.out.println("file path values is :"+filepath);
			File file = new File (filepath);
			for (int i = 0; i<5; i++){
				
				if (file.exists()){
					file.delete();
				}
			}
			
			ViewIcon.click();
			System.out.println("Download button clicked");
			
			
			
			Thread.sleep(3000);
			boolean flag = false;
			if(file.exists())
			{
				flag = true;
			}
			if (flag){
				System.out.println("Admin Downloaded Report Successfully");
			}
			else
			{
				System.out.println("Admin not Downloaded Report");
			}
			
			
			report.updateTestLog("File Download", "Admin is able to download the file successfully" , Status.PASS);
			
			
		}catch(Exception e){
			
			e.getStackTrace();
			report.updateTestLog("download report", "download report having probelm" +e.getMessage(), Status.FAIL);
		}  
	
	}
	
	public void selectDropDownWebElement(WebElement drpdown, String visibletextvalue) 
	{
		try
		{
			Select sel = new Select(drpdown);
			sel.selectByVisibleText(visibletextvalue);
			System.out.println(visibletextvalue);
			
		}
		catch (Exception e)
		{
			report.updateTestLog("Drop Down", "Dropdown '"+visibletextvalue+"' is not selected", Status.FAIL);
			System.out.println("Exception - " +e.getMessage());
		}
		functionalLibrary.sleep(2000);
		
	  }
	String RowNumber="";
	
	 FunctionalLibrary functionalLibrary = new FunctionalLibrary(scriptHelper);
	 
	 public void upload_incorrect_file()
		{
			try 
			{
				
				String[] filetypes={"word","MPEG","PDF","PNG"};
				for(String file_list:filetypes)
				{
					String filename=file_list;
					clickOnButton(browse_Button);
					Thread.sleep(2000);
					String file_name= dataTable.getData("General_Data", filename);
					StringSelection filepath = new StringSelection("C:\\Users\\786556\\new\\new\\Payslip_files\\"+file_name);
				    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);
				    Robot robot = new Robot();
				    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
				    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
				    robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
				    robot.keyPress(java.awt.event.KeyEvent.VK_V);
				    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
				    Thread.sleep(2000);
				    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
				    Thread.sleep(2000);
				    
				    if(upload_button.isDisplayed())
				    {
				    	clickOnButton(upload_button);
				    }
				    else if(update_button.isDisplayed()) 
				    {
				    	clickOnButton(update_button);
				    }
				    Verify_error_message();
				    
				}
				
			}
			
			catch (Exception e) 
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
				report.updateTestLog("Uploading incorrect file format", "Uploading incorrect file format is havig problem" , Status.FAIL);
			}
		}
			
			public void Verify_error_message()
			{
				try
				{
					
					WebDriverWait wait = new WebDriverWait(driver,10);
					wait.until(ExpectedConditions.visibilityOf(errorpopup));
					if(errorpopup.isDisplayed())
					{
						System.out.println("Error Text is :"+errorpopup.getText());
						
					}
					clickOnButton(Error_ok_button);
					Thread.sleep(2000);
					report.updateTestLog("Uploading incorrect file format", "Uploading incorrect file format verified successfully" , Status.PASS);
				}
				catch(Exception ExpectedConditions)
				{
					report.updateTestLog("Uploading incorrect file format :"+filename, "Uploading incorrect file format is havig problem" , Status.FAIL);
				}
			}
			
			 public void Approver_access(){
		    	  try
		    	  {
		    		 /*Thread.sleep(5000);
		    		 btnRequestPublish.click();
		     		 System.out.println("RequestPublish button is clicked");
		     		 report.updateTestLog("btnRequestPublish", "RequestPublish button is clicked", Status.PASS);*/
		     				     			     		
		     		Thread.sleep(4000);
		     		 //click on publish/send back tab
		     		 driver.findElement(By.xpath("//a[text()='Publish/ Send Back']")).click();
		     		 System.out.println("Publish/Send back tab is clicked");
		     		 report.updateTestLog("click on publish/send back tab", "publish/send back tab is clicked", Status.DONE); 
		     		 
		     		 //check whether approver has access to publish/sentback tab
		     		 Thread.sleep(3000);
		              WebElement Approv_access=driver.findElement(By.xpath("//a[text()='Publish/ Send Back']"));
		              if(Approv_access.isDisplayed())
		              {
		                    System.out.println("approver has access to publish/sentback tab");
		                    report.updateTestLog("publish/sentback tab ", "approver has access to publish/sentback tab", Status.DONE);
		                    
		              }
		              else
		              {
		                    System.out.println("approver has No access to publish/sentback tab");
		                    report.updateTestLog("publish/sentback tab", "approver has No access to publish/sentback tab", Status.DONE);
		              }
		            
		             WebElement Country=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[1]"));
		             if(Country.isDisplayed())
		             {
		                   System.out.println("Admin is able to view Country");
		             }
		             
		             else
		             {
		                   System.out.println("Admin has no access for Country field ");
		             }
		             
		             WebElement Period=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[2]"));
		             if(Period.isDisplayed())
		             {
		                   System.out.println("Admin is able to view Period");
		             }
		             else
		             {
		                   System.out.println("Admin has no access for Period field ");
		             }
		             
		            WebElement Type=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[3]"));
		             if(Type.isDisplayed())
		             {
		                   System.out.println("Admin is able to view Type");
		             }
		             else
		             {
		                   System.out.println("Admin has no access for Period Type ");
		             }
		             
		             WebElement Upload_Type=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[4]"));
		             if(Upload_Type.isDisplayed())
		             {
		                   System.out.println("Admin is able to view Upload Type");
		             }
		             else
		             {
		                   System.out.println("Admin has no access for Upload Type ");
		             }
		             
		             WebElement Associate_Count=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[5]"));
		             if(Associate_Count.isDisplayed())
		             {
		                   System.out.println("Admin is able to view Associate Count");
		             }
		             else
		             {
		                   System.out.println("Admin has no access for Associate Count tab");
		             }
		             
		             WebElement Net_Pay=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[6]"));
		             if(Net_Pay.isDisplayed())
		             {
		                   System.out.println("Admin is able to view Net Pay");
		             }
		             else
		             {
		                   System.out.println("Admin has no access for Net Pay tab");
		             }
		             
		             WebElement Action=driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/thead/tr/th[7]"));
		             if(  Action.isDisplayed())
		             {
		                   System.out.println("Admin is able to view Action");
		             }
		             else
		             {
		                   System.out.println("Admin has no access for Action tab");
		             }
		             report.updateTestLog("Approver Access", "Approver has access to publish/sentback tab" , Status.PASS);
		             
		        }
		     
		        catch(Exception e)
		         {
		        	e.printStackTrace();
		               report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL); 
		               
		               
		         }
		    
		     }

	public void executeTest()
	{
		try 
		{
			select_country();
			select_Manage_payslip();
			select_Mothview();
			Uploadtype_Filetype_Dropdown_Enabled();
			Upload_Payslip();
			MonthSelectionWithFutureDate();
			CalenderCurrentMonthYearSelectionValidaion();
			Validate_Calender_Icon();
			Setting_Previous_Year_Month();
			Setting_Upcoming_Year_Month();
			Successfull_Upload_of_SalaryRegister();
			Upload_of_SalaryRegister_Supplementary();
			Upload_of_SalaryRegister_AdditionalPayroll1();
			Upload_of_SalaryRegister_AdditionalPayroll2();
			Verify_Error_Description_in_ErrReport();
			Verify_Error_report_Downloaded();
			Verify_Error_report_Special_Charecters_Downloaded();
			Approver_access();
			Successfull_Upload_of_PaySlip();
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			report.updateTestLog("Execute Test", "Execute test method having probelm" +e.getMessage(), Status.FAIL);
		}
		
		
	}
	@FindBy(id="companyselpayslip")
	public WebElement Company_dropdown_field;

	private Object count;

	private Object i;

	@FindBy(xpath = "//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul")
	//*[@id="paginationReports"]/dir-pagination-controls/ul
	public WebElement pagination_locator;

	private int k;
	
	public void Select_previousYear() throws Exception {
		
		//try{
			
		// selection of previous year
			
/*			String company = dataTable.getData("General_Data" , "CompanyID");
			selectValueFromDropDown(Company_dropdown_field, company);
			report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);

			Thread.sleep(4000);
*/
		MonthView.click();	
		String Month2 = dataTable.getData("General_Data", "Decade");
		//Click on Year Header
		driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
		Thread.sleep(2000);
		/*driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
		Thread.sleep(2000);*/
		//Select Year
		String Year1 = dataTable.getData("General_Data", "Year");
		Thread.sleep(2000);
		driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
		Thread.sleep(2000);

		//Select Month
		String Month1 = dataTable.getData("General_Data", "MonthSelection");
		Thread.sleep(2000);
		driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
		Thread.sleep(2000);

	}/*catch (Exception e){
		e.printStackTrace();
		report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm " +e.getMessage(), Status.FAIL);
	}*/
	



public void Upload_of_SalaryRegister(){
	try{
		
		String Upload_Type = dataTable.getData("General_Data", "Upload_type");
		selectValueFromDropDown(drpdownUploadType,Upload_Type);
		report.updateTestLog("Upload Type", "Upload Type selected as "+Upload_Type, Status.PASS);
		System.out.println("Upload type selected as"+Upload_Type);	
		Thread.sleep(3000);
		String File_Type = dataTable.getData("General_Data", "File_Type");
		report.updateTestLog("File Type", "File Type selected as "+File_Type, Status.PASS);
		System.out.println("File type selected as"+File_Type);
		selectValueFromDropDown(drpdownFileType,File_Type);
		Thread.sleep(5000);
		btnBrowse.click();
		
		String country_name= dataTable.getData("General_Data", "Country");
		String file_path = System.getProperty("user.dir")+ "\\Valid_Template_Files\\"+country_name+"_Salary Register_Template.xlsx";
		StringSelection filepath = new StringSelection(file_path);
		report.updateTestLog("filepath", "file path validation", Status.PASS);
		Thread.sleep(5000);
	    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filepath, null);			
		Robot robot = new Robot();
		robot.delay(250);
		Thread.sleep(5000);
		robot.keyPress(java.awt.event.KeyEvent.VK_CONTROL);
	    robot.keyPress(java.awt.event.KeyEvent.VK_V);
	    Thread.sleep(5000);
	    robot.keyRelease(java.awt.event.KeyEvent.VK_V);
	    robot.keyRelease(java.awt.event.KeyEvent.VK_CONTROL);
	    Thread.sleep(5000);
	    robot.keyPress(java.awt.event.KeyEvent.VK_ENTER);
	    robot.keyRelease(java.awt.event.KeyEvent.VK_ENTER);
		Thread.sleep(5000);
	    if(upload_button.isDisplayed())
	    {
	     clickOnButton(upload_button);
	     
	    }
	    else if(update_button.isDisplayed())
	    {
	     clickOnButton(update_button);
	    }
	    	    	
	    Thread.sleep(8000);
	    String Upload = driver.findElement(By.xpath("//div[@id='noDataPopup']//div[@id='message']")).getText();
	    if(Upload.contains("Data couldn't be processed due to column mismatch, Please use the correct template for upload"))
	    {
	    	OKAYbutton.click();
			report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having problem", Status.FAIL);


	    }
	    else
	    {
	    	OKAYbutton.click();
	    Thread.sleep(8000);
	    clickOnButton(btnRequestPublish);
	    Thread.sleep(8000);		     		
 		clickOnButton(OKAYbutton2);
 		System.out.println("Document uploaded successfully");
	    report.updateTestLog("Uploading Payslip", "'Uploaded payslip is :" + Upload , Status.PASS);
	    }
	    
	}catch(Exception e) {
		
		e.printStackTrace();
		report.updateTestLog("Successfull uploading of salary register", "Successfull uploading of salary register having probelm" +e.getMessage(), Status.FAIL);
	}
}

public void payroll_without_making_changes()
{
	//report.addTestLogSubSection("payroll_without_making_changes validation");
		try
		{
		request_publish();
			
		
		 //this is to click on update button
			  driver.findElement(By.xpath("//*[@id='updatebtn']")).click();
			  
		
		 //error message : Please choose the required file and click upload\
			 Thread.sleep(3000); 
			 String message_modal=driver.findElement(By.xpath("//*[@id='message']")).getText();
			 System.out.println("Error message"  +message_modal);
			 
			 if(message_modal.equals("Please choose the required file and click the upload"))
			 {
				 System.out.println("PASS");
				 report.updateTestLog("Verify the Error mesage", "Error message displayed- " +message_modal, Status.PASS);
			 }
				
			 else
			 {
				 System.out.println("FAIL");
				 report.updateTestLog("Verify the Error mesage", "Error message is not displayed- ", Status.FAIL); 
			 }
 	       //Click on that okay button in choose the required file pop up
			 
			 driver.findElement(By.xpath("//button[contains(text(),'Okay')]")).click();
			 System.out.println("Okay button is clicked in choose required file pop up");
			 report.updateTestLog("click oon okay button", "okay button is clicked in please choose file pop up", Status.DONE);
			 
			 Thread.sleep(2000);
			 	 
			 
		}

			  catch(Exception e)
		 	   {
		 		   
		 		   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
		 		   
		 	   }

	   
}

public void request_publish()
{
	report.addTestLogSubSection("Request_publish validation");
	  try
	  {
		  //HomePage();  
		//Additional_payroll();
		
		Thread.sleep(4000);
		
		//click on the request publish button
		/*driver.findElement(By.id("RequestPublish")).click();
		 System.out.println("RequestPublish button is clicked");
		 report.updateTestLog("RequestPublish button", "RequestPublish button is clicked", Status.PASS);
		 
		 driver.navigate().refresh();
		*/ 
		//HomePage();
		driver.navigate().refresh();
		 Thread.sleep(3000);
		 select_Manage_payslip();
		 Thread.sleep(6000);
		 //click on publish/send back tab
		 driver.findElement(By.xpath("//a[text()='Publish/ Send Back']")).click();
		 System.out.println("Publish/Send back tab is clicked");
		 report.updateTestLog("click on publish/send back tab", "publish/send back tab is clicked", Status.PASS);
		 
		
		
		 Thread.sleep(3000);
		
		 To_Find_Row_number();
		
	  

		 Thread.sleep(8000);
		 
		 
		 
		
			//*[@id="updatebtn"]
			//is displayed or npot check
		 
		 //click on that upload pay slip tab
		 
		 driver.findElement(By.xpath("//*[@id='AdminTab1']/a")).click();
		 System.out.println("upload pay slip tab is clicked");
		 report.updateTestLog("click on upload payslip tab", "upload payslip tab is clicked", Status.DONE);
		 
		//select  month from calender
	   Thread.sleep(2000);
	   driver.findElement(By.id("monthview")).click();
	   driver.findElement(By.xpath("/html/body/div[3]/div[2]/table/tbody/tr/td/span[11]")).click();
	   //Month_Year_Selection();
	   Company_IDselection();
	   select_Month_year_decade();
	   
	  Thread.sleep(2000);
	   //select additional payroll from dropdown
	   String add_payroll= dataTable.getData("General_Data" , "Upload_type");
	   System.out.println("Upload type selected as - " +add_payroll);

	   Thread.sleep(2000);
	   selectDropDownWebElement(driver.findElement(By.id("uploadtypeselpayslip")),add_payroll);
	   report.updateTestLog("Upload type selection", "Selected upload type is - " +add_payroll, Status.PASS);
	   
	   
     //select salary register from dropdown
	   
	   Thread.sleep(2000);
		String FileType= dataTable.getData("General_Data" , "File_Type");
		System.out.println("File Type is - " +FileType);
		
		selectDropDownWebElement(driver.findElement(By.id("filetypeselpayslip")),FileType);
		report.updateTestLog("Selected File Type is", "File Type is - " +FileType, Status.PASS);
		
	   
		 
			 Thread.sleep(3000);
			 
			WebElement Dis =driver.findElement(By.id("updatebtn"));
			if(Dis.isDisplayed())
			{
				System.out.println("updatebtn button is displayed");
				report.updateTestLog("updatebtn button should be displayed ", "updatebtn button is displayed", Status.PASS);
			}
			else
			{
				System.out.println("updatebtn button is not displayed");
				report.updateTestLog("updatebtn button not displayed ", "updatebtn button is not displayed", Status.PASS);
			}
	  }

catch(Exception e)
  {
	   
	   //report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
	   
  }

  }   

public void Company_IDselection() 
{
	try 
	{
		Thread.sleep(4000);
		String company = dataTable.getData("General_Data" , "CompanyID");
		selectValueFromDropDown(Company_dropdown_field, company);
		System.out.println("Company id selected as:"+company);
		report.updateTestLog("Verify Company_dropdown_field"," "+company+" is selected in dropdown", Status.DONE);
		Thread.sleep(3000);
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	
}

//To find particular row text and click
public void To_Find_Row_number()
{
	
	report.addTestLogSubSection("Publish/Sentback Validation");
try
{
	 //@SuppressWarnings("unused")
	WebDriverWait wait = new WebDriverWait(driver,30);
	String Country_name=dataTable.getData("General_Data" , "Country");
	System.out.println(Country_name);
	report.updateTestLog("Country name selection in Publish", "Country name selected as :"+Country_name, Status.PASS);
	String date = dataTable.getData("General_Data", "period");
	report.updateTestLog("Period selection in Publish", "Period selected as :"+date, Status.PASS);
	System.out.println(date);
	String type = dataTable.getData("General_Data", "Upload_type");
	report.updateTestLog("Upload_type selection in Publish", "Upload_type selected as :"+type, Status.PASS);
	System.out.println(type);
  

	//List<WebElement> pagination = driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul/li"));
	//int s = pagination.size();
	//if(pagination.size()>0)    
	
	 //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
	 if(driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr")).size()!=0)
	 {
		 
	      
		 
	 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td"));
	int count=rows.size();
	System.out.println("Count is:"+count);
	//int K=3;
	
    if(driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']//ul/li")).size()==0)
    	
    {
    	System.out.println("Pagination not displayed");
    	report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);

    	inner:for(int i=1;i<=4;i++)
   	 {
   		 WebElement country = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[1]"));
   		 WebElement period = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[2]"));
   		 WebElement upload_type = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[4]"));
   	     
   		if(country.getText().trim().contains(Country_name.trim()))
   		{
   			
   				System.out.println("country selected as :"+ Country_name);
   				   				HighlightElement_green(country);
   				//String date = dataTable.getData("General_Data", "period");
   				if(period.getText().trim().contains(date.trim()))
   				{
   				System.out.println("period selected as :" + date);
   				report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);

   				HighlightElement_green(period);
   				//String type = dataTable.getData("General_Data", "Upload_type");

   				if(upload_type.getText().trim().contains(type.trim()))
   				{
   				System.out.println("Upload type selected as: "+ type);
   				report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);

   				HighlightElement_green(upload_type);
   				driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[7]/div/div[contains(@class,'moreicon')]")).click();
   				System.out.println("Action button is clicked");
   				report.updateTestLog("click on action button", "Action button is clicked", Status.PASS);
   				Thread.sleep(8000);
   				driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[7]//ul/li[contains(text(),'PUBLISH')]")).click();
   				System.out.println("Publish button is clicked");
   				report.updateTestLog("Publish on action button", "Publish button is clicked", Status.PASS);

   				Thread.sleep(5000);
   				/*****Handling alert*****/
   				checking_alert();
   				Thread.sleep(2000);	
   				
   		}}
   	 }}}
    else
    {
	int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']//ul/li")).size();
	System.out.println(num_of_clicks);
	outer: for(int j =1; j< num_of_clicks; j++)
	
	{
		
		//if(rows.size()>4)
	//{
		
		inner:for(int O=1;O<=4;O++)
	 {
		 WebElement country1 = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[1]"));
		 WebElement period1 = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[2]"));
		 WebElement upload_type1 = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[4]"));
	     if(rows.size()>4)
	    	 
	      
//String Country_name=dataTable.getData("General_Data" , "Country");

if(country1.getText().trim().contains(Country_name.trim()))
{
System.out.println("country selected as :"+ Country_name);
report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
HighlightElement_green(country1);
//String date = dataTable.getData("General_Data", "period");
if(period1.getText().trim().contains(date.trim()))
{
System.out.println("period selected as :" + date);
report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);

HighlightElement_green(period1);
//String type = dataTable.getData("General_Data", "Upload_type");

if(upload_type1.getText().trim().contains(type.trim()))
{
System.out.println("Upload type selected as: "+ type);
report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);

HighlightElement_green(upload_type1);
driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[7]/div/div[contains(@class,'moreicon')]")).click();
System.out.println("Action button is clicked");
report.updateTestLog("click on action button", "Action button is clicked", Status.PASS);
Thread.sleep(8000);
driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[7]//ul/li[contains(text(),'PUBLISH')]")).click();
System.out.println("Publish button is clicked");
report.updateTestLog("Publish on action button", "Publish button is clicked", Status.PASS);

Thread.sleep(5000);
/*****Handling alert*****/
checking_alert();
Thread.sleep(2000);
if(upload_type1.getText().trim().contains(type.trim()))
{
break inner;
}

}

	 }
}
	     
	     
	
       if(rows.size()<=4)
       {
    	   break outer;
    	   
       }
	 }
	 driver.findElement(By.xpath("//*[@id='dirPaginationRight']")).click();
	 Thread.sleep(2000);
   }}}
   	 
      //}
	 else
	 {
		 System.out.println("All the reports are published");
		 report.updateTestLog("Validate published records", "All the reports are published", Status.PASS);

	 }

}
catch(Exception e)
 {
	   
	  // report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
	   
 }

 

/*if(count==i)
{
	  if(pagination_locator.isDisplayed())
	  {	   
		  	List<WebElement> pagination_count=driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul/li"));
		  	if(pagination_count.size()==k)
		  	{
		  		
		  	}
		  	else
		  	{
			  WebElement Page_Number = driver.findElement(By.xpath("//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul/li["+k+"]/a"));
			 // System.out.println("K value is :"+k);
			  if(Page_Number.isEnabled()==false)
			  {
				  System.out.println("Last button reached");
				  
			  }
			  
			  if(Page_Number.isEnabled()==true)
			  {   //System.out.println("Page no is displayed");
				  driver.findElement(By.xpath("//*[@id='paginationPublishSendBack']/dir-pagination-controls/ul/li["+k+"]/a")).click();
  			  k++;  
  			  *//****assigning i value as 0 for the next page table verification*****//*
  			  i=0;
			  }
			  else
			  {
				  System.out.println("No more buttons available in Pagination or Button is not enabled");
			  } 
		  	}
  	}
  	  	  
	}
else
	{
		System.out.println("No other pages available hereafter");
	}*/
}




public void checking_alert()
{
	try {
		//System.out.println("Check -1");
		Thread.sleep(10000);
		Alert alert =driver.switchTo().alert();
		//Thread.sleep(8000);
		//System.out.println("Check -2");
		//Thread.sleep(12000);
		//alert.getText();
		Thread.sleep(3000);
		alert.accept();
		Thread.sleep(8000);
		//report.updateTestLog("Alert message verification", "Alert message displayed as :"+alert.getText(), Status.PASS);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
} 




public void Publish()
{
	  try
	  {
		  //HomePage();  
		//Additional_payroll();
		
		Thread.sleep(4000);
		
		//click on the request publish button
		/*driver.findElement(By.id("RequestPublish")).click();
		 System.out.println("RequestPublish button is clicked");
		 report.updateTestLog("RequestPublish button", "RequestPublish button is clicked", Status.PASS);
		 
		 driver.navigate().refresh();
		*/ 
		//HomePage();
		driver.navigate().refresh();
		 Thread.sleep(3000);
		 select_Manage_payslip();
		 Thread.sleep(6000);
		 //click on publish/send back tab
		 driver.findElement(By.xpath("//a[text()='Publish/ Send Back']")).click();
		 System.out.println("Publish/Send back tab is clicked");
		 report.updateTestLog("click on publish/send back tab", "publish/send back tab is clicked", Status.DONE);
		 
		
		
		 Thread.sleep(5000);
		
		 To_Find_Row_number();
		
		 Thread.sleep(3000);

	    }

catch(Exception e)
  {
	   
	   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
	   
  }
}
  
public void Sentback()
{
	  try
	  {
		  //HomePage();  
		//Additional_payroll();
		
		Thread.sleep(4000);
		
		//click on the request publish button
		/*driver.findElement(By.id("RequestPublish")).click();
		 System.out.println("RequestPublish button is clicked");
		 report.updateTestLog("RequestPublish button", "RequestPublish button is clicked", Status.PASS);
		 
		 driver.navigate().refresh();
		*/ 
		//HomePage();
		driver.navigate().refresh();
		 Thread.sleep(3000);
		 select_Manage_payslip();
		 Thread.sleep(6000);
		 //click on publish/send back tab
		 driver.findElement(By.xpath("//a[text()='Publish/ Send Back']")).click();
		 System.out.println("Publish/Send back tab is clicked");
		 report.updateTestLog("click on publish/send back tab", "publish/send back tab is clicked", Status.DONE);
		 
		
		
		 Thread.sleep(3000);
		
		 //To_Find_Row_number_Sentback();
		 //To_Find_Row_number_sback();
		 To_Find_Row_number_Sentback1();
		 Thread.sleep(3000);

	    }

catch(Exception e)
  {
	   
	   report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
	   
  }
}

//To find particular row text and click
public void To_Find_Row_number_Sentback()
{
try
{
	
	WebDriverWait wait = new WebDriverWait(driver,30);
	String Country_name=dataTable.getData("General_Data" , "Country");
	System.out.println(Country_name);
	String date = dataTable.getData("General_Data", "period");
	System.out.println(date);
	String type = dataTable.getData("General_Data", "Upload_type");
	System.out.println(type);
  

	 //@SuppressWarnings("unused")
	//WebDriverWait wait = new WebDriverWait(driver,30);
	 //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
	 if(driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr")).size()!=0)
	 {
	 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td"));
	 int count=rows.size();
		System.out.println("Count is:"+count);
		
		int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']//ul/li")).size();
		System.out.println(num_of_clicks);
		outer: for(int j =1; j< num_of_clicks; j++)
			if(rows.size()>4)
			{
			inner:for(int i=1;i<=4;i++)
	 {
		 WebElement country = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[1]"));
		 System.out.println("print"+country.getText());
		    WebElement period = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[2]"));
		    System.out.println("Print"+period.getText());
		    WebElement upload_type = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[4]"));
		    System.out.println("Print"+upload_type.getText());
		    //if(rows.size()>4)
//String Country_name1=dataTable.getData("General_Data" , "country");
if(country.getText().trim().contains(Country_name.trim()))
{
System.out.println("country selected as :"+ Country_name);
report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
HighlightElement_green(country);

//String date1 = dataTable.getData("General_Data", "period");
if(period.getText().trim().contains(date.trim()))
{
System.out.println("period selected as :" + date);
report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
HighlightElement_green(period);

//String type1 = dataTable.getData("General_Data", "Upload_type");
if(upload_type.getText().trim().contains(type.trim()))
{
System.out.println("Upload type selected as: "+ type);
report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);

HighlightElement_green(upload_type);

driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[7]/div/div[contains(@class,'moreicon')]")).click();
System.out.println("Action button is clicked");
report.updateTestLog("click on action button", "Action button is clicked", Status.PASS);
Thread.sleep(3000);
driver.findElement(By.xpath("//*[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[7]//ul/li[contains(text(),'SEND BACK')]")).click();
System.out.println("SEND BACK button is clicked");
report.updateTestLog("SEND BACK on action button", "SEND BACK button is clicked", Status.PASS);

Thread.sleep(5000);
Send_Back_Reason.sendKeys("Test reason");
Publish_Sendback_Button.click();
Thread.sleep(2000);
Alert Alert = driver.switchTo().alert();
Alert.accept();

report.updateTestLog("Verify SendBack", "Payslip Sendback completed Successfully" , Status.PASS);

/*****Handling alert*****/
//checking_alert();
if(upload_type.getText().trim().contains(type.trim()))
	report.updateTestLog("Upload trim", "Upload trim is done", Status.PASS);
{
	break inner;
}


	 }
}
//break;

if(rows.size()<=4)
{
	   break outer;
	   
}
	 }
driver.findElement(By.xpath("//*[@id='dirPaginationRight']")).click();
report.updateTestLog("Pagination button click", "Pagination right button clicked", Status.PASS);
Thread.sleep(2000);
	 }}
 	 else
	 {
		 System.out.println("All the reports are published");
		 report.updateTestLog("Validate published records", "All the reports are published", Status.PASS);

	 }

}}
catch(Exception e)
{
	   
	   //report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
	   
}

}

public void Month_Year_Selection_Viewpayslip(){
	try 
	{
		/*Thread.sleep(2000);
		MonthView.click();
		System.out.println("calendar icon clicked");
		String Month_Name = dataTable.getData("General_Data", "MonthSelection");
		List_Selection(Month_Name, month_xpath, "Calender");
		
		System.out.println("Selected Month:" +Month_Name);			
		report.updateTestLog("verify Monthview Calender", "Previous Month selected as:" +Month_Name , Status.DONE);
	*/	
		Thread.sleep(5000);
		MonthView.click();
		System.out.println("calendar icon clicked");
		report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
		String Month2 = dataTable.getData("General_Data", "Decade");
		System.out.println("Decade selected as "+Month2);
		report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.DONE);
		//Click on Year Header
		driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
		//System.out.println("1 click");
		Thread.sleep(5000);
		driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
		//System.out.println("2 click");
		Thread.sleep(5000);
		driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
		//System.out.println("3 click");
		String Year1 = dataTable.getData("General_Data", "Year");
		System.out.println("Year selected as"+Year1);
		report.updateTestLog("Year selection", "Year selected as"+Year1, Status.DONE);
		driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[@class='year focused']")).click();
		//System.out.println("2020 clicked");
		Thread.sleep(5000);
		/*driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
		System.out.println("4 click");*/
		/*Thread.sleep(2000);
		driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).getText();
		System.out.println("4 click");
		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
		Thread.sleep(2000);*/
		//Select Year
		/*String Year1 = dataTable.getData("General_Data", "Year");
		System.out.println("Year selected as "+Year1);
		Thread.sleep(2000);
		driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
		Thread.sleep(2000);*/

		//Select Month
		String Month1 = dataTable.getData("General_Data", "MonthSelection");
		System.out.println("Month selected as "+Month1);
		report.updateTestLog("Month selection", "Month selected as "+Month1, Status.DONE);
		Thread.sleep(2000);
		driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
		Thread.sleep(2000);

		
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		report.updateTestLog("verify Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
	
	
}
public void To_Find_Row_number_Sentback1()
{
	
try
{
	 //@SuppressWarnings("unused")
	WebDriverWait wait = new WebDriverWait(driver,30);
	String Country_name=dataTable.getData("General_Data" , "Country");
	System.out.println("country selected as :"+ Country_name);
	report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
	
	String date = dataTable.getData("General_Data", "period");
	System.out.println("period selected as :" + date);
	report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
	
	String type = dataTable.getData("General_Data", "Upload_type");
	report.updateTestLog("Upload_type selection in Publish", "Upload_type selected as :"+type, Status.PASS);
	System.out.println(type);

	
	//wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td")));
	 if(driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr")).size()!=0)
	 {
	 List<WebElement> rows=driver.findElements(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td"));
	 int count=rows.size();
		System.out.println("Count is:"+count);
		if(driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']//ul/li")).size()==0)
			
	    {
	    	System.out.println("Pagination not displayed");
	    	report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);

	    	
	 inner:for(int i=1;i<=4;i++)  	
	 
	 {
		 WebElement country = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[1]"));
   		 WebElement period = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[2]"));
   		 WebElement upload_type = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+i+"]/td[4]"));

   		if(country.getText().trim().contains(Country_name.trim()))
   		{
   			System.out.println("country selected as :"+ Country_name);
   			HighlightElement_green(country);
   			if(period.getText().trim().contains(date.trim()))
				{
				System.out.println("period selected as :" + date);
				report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
				HighlightElement_green(period);
		if(upload_type.getText().trim().contains(type.trim()))
   				{
   				System.out.println("Upload type selected as: "+ type);
   				report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
   				HighlightElement_green(upload_type);


driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td[7]/div/div[contains(@class,'moreicon')]")).click();
System.out.println("Action button is clicked");
report.updateTestLog("click on action button", "Action button is clicked", Status.PASS);

driver.findElement(By.xpath("//ul[@class='dropdown-menu customdropmenu']/li[contains(text(),'SEND BACK')]")).click();
System.out.println("SEND BACK button is clicked");
report.updateTestLog("SEND BACK on action button", "SEND BACK button is clicked", Status.PASS);

Thread.sleep(5000);
Send_Back_Reason.sendKeys("Test reason");
Publish_Sendback_Button.click();
Thread.sleep(2000);
Alert Alert = driver.switchTo().alert();
Alert.accept();

report.updateTestLog("Verify SendBack", "Payslip Sendback completed Successfully" , Status.PASS);
Thread.sleep(5000);
/*****Handling alert*****/
checking_alert();
Thread.sleep(2000);	

}}

	 }}
}

	 else
	 {
		 int num_of_clicks =driver.findElements(By.xpath("//*[@id='paginationPublishSendBack']//ul/li")).size();
			System.out.println(num_of_clicks);
			outer: for(int j =1; j< num_of_clicks; j++)
			{
				inner:for(int O=1;O<=4;O++)
				 {
					 WebElement country1 = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[1]"));
					 WebElement period1 = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[2]"));
					 WebElement upload_type1 = driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr["+O+"]/td[4]"));
				     if(rows.size()>4)
				    	 
				    	 if(country1.getText().trim().contains(Country_name.trim()))
				    		{
				    			System.out.println("country selected as :"+ Country_name);
				    			report.updateTestLog("Country name selection", "Country name selected as :" +Country_name, Status.PASS);
				    			HighlightElement_green(country1);
				    			if(period1.getText().trim().contains(date.trim()))
				 				{
				 				System.out.println("period selected as :" + date);
				 				report.updateTestLog("Period selection", "Period selected as :" +date, Status.PASS);
				 				HighlightElement_green(period1);
				 		if(upload_type1.getText().trim().contains(type.trim()))
				    				{
				    				System.out.println("Upload type selected as: "+ type);
				    				report.updateTestLog("Upload type selection", "Upload type selected as :" +type, Status.PASS);
				    				HighlightElement_green(upload_type1);


				 driver.findElement(By.xpath("//table[@id='publishsendbacktbl']/tbody/tr/td[7]/div/div[contains(@class,'moreicon')]")).click();
				 System.out.println("Action button is clicked");
				 report.updateTestLog("click on action button", "Action button is clicked", Status.PASS);
				 Thread.sleep(8000);
				 driver.findElement(By.xpath("//ul[@class='dropdown-menu customdropmenu']/li[contains(text(),'SEND BACK')]")).click();
				 System.out.println("SEND BACK button is clicked");
				 report.updateTestLog("SEND BACK on action button", "SEND BACK button is clicked", Status.PASS);

				 Thread.sleep(5000);
				 Send_Back_Reason.sendKeys("Test reason");
				 Publish_Sendback_Button.click();
				 Thread.sleep(2000);
				 Alert Alert = driver.switchTo().alert();
				 Alert.accept();

				 report.updateTestLog("Verify SendBack", "Payslip Sendback completed Successfully" , Status.PASS);
				 Thread.sleep(5000);
				 /*****Handling alert*****/
				 checking_alert();
				 Thread.sleep(2000);
				 if(upload_type1.getText().trim().contains(type.trim()))
				 {
					 break inner;
					 }
				    				}

				 				 }
				 			}
				       if(rows.size()<=4)
				       {
				    	   break outer;
				    	   
				       }
					 }
					 driver.findElement(By.xpath("//*[@id='dirPaginationRight']")).click();
					 Thread.sleep(2000);
				   }}}
				   	 
				      //}
					 else
					 {
						 System.out.println("All the reports are published");
						 report.updateTestLog("Validate published records", "All the reports are published", Status.PASS);

					 }

				}
				catch(Exception e)
				 {
					   
					  // report.updateTestLog("DATA not correct", "Browsing fails" +e, Status.FAIL);  
					   
				 }}}

package pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.cognizant.framework.Status;

import supportlibraries.ScriptHelper;

public class View_payslip_under_MPS_page_Australia extends MasterPage_Aus{


	public View_payslip_under_MPS_page_Australia(ScriptHelper scriptHelper) {
		super(scriptHelper);
		// TODO Auto-generated constructor stub
	}

	@FindBy(xpath="//a[text()='View Payslip']")
	public WebElement VIew_Payslip_tab; 
	
	public String month_xpath="//span[contains(@class,'month')]";
	
	@FindBy(xpath="//*[@id='monthviewPage']")
	public WebElement MonthView;
	
	@FindBy(xpath = "//div[contains(@class,'downloadicon')] [@ng-click='downloadPayslip()']")
	public WebElement Download_Payslip;
	
	@FindBy(xpath = "//button[contains(@id,'btnokaydownload')]")
	public WebElement Okay_Download;
	

	@FindBy(id="associateIdInput")
	public WebElement associateIdInput; 
	
	@FindBy(xpath="//button[contains(@ng-click,'viewAssociatePayslip()')]")
	public WebElement view_payslip_button; 
	
	@FindBy(id="associateUploadTypeDropDown")
	public WebElement View_payslip_type_dropdown; 
	
	@FindBy(xpath="//div[(@class='downloadicon') and (@ng-click='downloadPayslip()')]")
	public WebElement download_payslip_button; 
	
	@FindBy(xpath="//*[@id='message']")
	public WebElement successpopup;
	
	@FindBy(xpath="//*[@id='btnokay']")
	public WebElement success_ok_button;
	
	public void select_view_payslip_tab()
	{
		
		report.addTestLogSubSection(" Payslip tab selection validation");
		try 
		{
			clickOnButton(VIew_Payslip_tab);
			report.updateTestLog("View payslip verification", "View payslip tab selected", Status.PASS);
			Thread.sleep(2000);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void enter_associate_id_and_click_view_payslip()
	{
		

		try 
		{
			String AssociateID= dataTable.getData("General_Data", "AssociateID");
			associateIdInput.sendKeys(AssociateID);
			report.updateTestLog("Associate ID verification", "Associate ID provided", Status.PASS);
			clickOnButton(view_payslip_button);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void selecting_payslip_type_and_click_download()
	{
		
		report.addTestLogSubSection("Payslip type selection and click download validation");

		try 
		{
			String upload_type= dataTable.getData("General_Data", "Upload_type");
			report.updateTestLog("Upload type selection", "Upload type selected as:" +upload_type, Status.PASS);
			selectValueFromDropDown(View_payslip_type_dropdown, upload_type);
			Thread.sleep(8000);
			//select_Monthview();
			select_Month_year_decade1();
			
			clickOnButton(download_payslip_button);
			report.updateTestLog("Download button" , "Download button clicked", Status.PASS);
			Thread.sleep(5000);
			Okay_Download.click();
			report.updateTestLog("Payslip download verification", "Payslip downloaded successfully", Status.PASS);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void select_Monthview() 
	  	{
	  		try 
	  		{
	  			Thread.sleep(8000);
	  			MonthView.click();
	  			String Month_Name = dataTable.getData("General_Data", "MonthSelection");
	  			List_Selection(Month_Name, month_xpath, "Calender");
	  			
	  			System.out.println("Month name selected as:" +Month_Name);			
	  			report.updateTestLog("Monthview Calender", "Month selected as:" +Month_Name , Status.PASS);
	  			
	  			
	  		} catch (Exception e) {
	  			// TODO Auto-generated catch block
	  			e.printStackTrace();
	  			report.updateTestLog("Clicking Monthview Calender", "Month view calender not clicked" +e.getMessage(), Status.FAIL);		}
	  		
	  		
	  	}

	public void Verify_payslip_download_message()
	{
		try 
		{
			
			WebDriverWait wait = new WebDriverWait(driver,10);
			wait.until(ExpectedConditions.visibilityOf(successpopup));
			if(successpopup.isDisplayed())
			{
				System.out.println("Success Text Message :"+successpopup.getText());
			}
			Thread.sleep(2000);
			clickOnButton(success_ok_button);
			
			report.updateTestLog("Payslip Download message", "Download payslip message with password protected verified successfully" , Status.PASS);
		}
		catch(Exception ExpectedConditions)
		{
			report.updateTestLog("Payslip Download message", "Download payslip message with password protected displayed is not expected" , Status.FAIL);
		}
	}
	
	public void select_Month_year_decade1() 
  	{
    	  
    	  report.addTestLogSubSection("Month Year and Decade selection");
  		try 
  		{
  			Thread.sleep(4000);
              MonthView.click();
              System.out.println("calendar icon clicked");
              report.updateTestLog("Verify calendar icon", "Calendar icon clicked", Status.PASS);
              String Month2 = dataTable.getData("General_Data", "Decade");
              System.out.println("Decade selected as "+Month2);
              report.updateTestLog("Decade selection", "Decade selected as "+Month2, Status.PASS);

              //Click on Year Header
              driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[2]")).click();
              Thread.sleep(5000);
              driver.findElement(By.xpath("//div[@class='datepicker-years']//following::th[2]")).click();
              Thread.sleep(5000);
              //driver.findElement(By.xpath("//span[contains(text(),'"+Month2+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[text()="+Month2+"]")).click();
              Thread.sleep(5000);
              //driver.findElement(By.xpath("//div[@class='datepicker-months']//following::th[1]")).click();
              //driver.findElement(By.xpath("//div[@class='datepicker-decades']/table/tbody/tr/td/span[@class='decade focused']")).click();
              //Thread.sleep(5000);
              //Select Year
              String Year1 = dataTable.getData("General_Data", "Year");
              
              Thread.sleep(2000);
       //driver.findElement(By.xpath("//span[contains(text(),'"+Year1+"')]")).click();
              driver.findElement(By.xpath("//div[@class='datepicker-years']/table/tbody/tr/td/span[text()="+Year1+"]")).click();
              Thread.sleep(2000);
              System.out.println("Year selected as"+Year1);
              report.updateTestLog("Year selection", "Year selected as"+Year1, Status.PASS);
              Thread.sleep(3000);
              //Select Month
              String Month1 = dataTable.getData("General_Data", "MonthSelection");
              
              Thread.sleep(2000);
       driver.findElement(By.xpath("//span[contains(text(),'"+Month1+"')]")).click();
              System.out.println("Month selected as "+Month1);
              report.updateTestLog("Month selection", "Month selected as "+Month1, Status.PASS);

              Thread.sleep(2000);

  			
  		} catch (Exception e) {
  			// TODO Auto-generated catch block
  			e.printStackTrace();
  			report.updateTestLog("Decade,month and year selection", "problem in selecting decade,month and year" +e.getMessage(), Status.FAIL);		}
  		
  		
  	}

	public void Verify_YTD() {
		// TODO Auto-generated method stub
		
	}

}
package testscripts.month_and_year;

import org.testng.annotations.Test;

import com.cognizant.framework.IterationOptions;
import com.cognizant.framework.Status;

import functionallibraries.FunctionalLibrary;
import pages.HomePage_Aus;
import pages.UploadPayslip_Aus;
import supportlibraries.DriverScript;
import supportlibraries.TestCase;


/**
 * Test for login with valid user credentials
 * @author Cognizant
 */
@SuppressWarnings("unused")
public class apacepay_uploadfullflow extends TestCase
{
	private FunctionalLibrary functionalLibrary;
	
	@Test
	public void runTC1()
	{
		testParameters.setCurrentTestDescription("Test for login with valid user credentials");
		testParameters.setIterationMode(IterationOptions.RunAllIterations);
		//testParameters.setBrowser(Browser.HtmlUnit);
		
		driverScript = new DriverScript(testParameters);
		driverScript.driveTestExecution();
	}
	
	@Override
	public void setUp()
	{
		functionalLibrary = new FunctionalLibrary(scriptHelper);
		
		report.addTestLogSection("Setup");
		
		driver.get(properties.getProperty("ApplicationUrl"));
		report.updateTestLog("Invoke Application", "Invoke the application under test @ " +
								properties.getProperty("ApplicationUrl"), Status.DONE);
	}
	

		
	@Override
	
	public void executeTest()
	{
		functionalLibrary.proxyLogin();
		UploadPayslip_Aus TC_63178_16 = new UploadPayslip_Aus(scriptHelper);
		HomePage_Aus HP16 = new HomePage_Aus(scriptHelper); 
		// Country selection
		HP16.select_country();
		//Selecting Manage payslip
		TC_63178_16.select_Manage_payslip();
		//Month and Year selection
		TC_63178_16.select_Month_year_decade();
		// Company ID selection
		TC_63178_16.Company_IDselection();
		// Uplaoding the Payslip
		TC_63178_16.Successfull_Upload_of_SalaryRegister();
		//TC_63178_16.Successfull_Upload_of_SalaryRegister_YtdInformation_BeneficiaryDetails();
		//Publishing the payslip
		TC_63178_16.Publish();	
		// Email verification
		HP16.VerifyEmailSent();
		//View payslip
		HP16.DownloadPaySlip_validation();
		//HP16.DeleteFileBeforePaySlipDownload();	
		HP16.passowordpdf_Payslip();
		driver.navigate().back();
		
		
	}
	
	 
	
	@Override
	public void tearDown()
	{
			
	}
}
         
         
         
         
         
         
         
         
      
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
